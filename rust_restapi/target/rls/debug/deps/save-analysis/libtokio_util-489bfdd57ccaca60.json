{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1","program":"/Users/samueljim/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","tokio_util","--edition=2018","/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","-C","metadata=489bfdd57ccaca60","-C","extra-filename=-489bfdd57ccaca60","--out-dir","/Users/samueljim/projects/rust_restapi/target/rls/debug/deps","-L","dependency=/Users/samueljim/projects/rust_restapi/target/rls/debug/deps","--extern","bytes=/Users/samueljim/projects/rust_restapi/target/rls/debug/deps/libbytes-adcd2f3eba735e34.rmeta","--extern","futures_core=/Users/samueljim/projects/rust_restapi/target/rls/debug/deps/libfutures_core-0398f25daad32179.rmeta","--extern","futures_sink=/Users/samueljim/projects/rust_restapi/target/rls/debug/deps/libfutures_sink-744db875f82af058.rmeta","--extern","log=/Users/samueljim/projects/rust_restapi/target/rls/debug/deps/liblog-4ec7ca7094daeeed.rmeta","--extern","pin_project_lite=/Users/samueljim/projects/rust_restapi/target/rls/debug/deps/libpin_project_lite-824919c7ea3f9fd5.rmeta","--extern","tokio=/Users/samueljim/projects/rust_restapi/target/rls/debug/deps/libtokio-e7517f46592fb501.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/samueljim/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/samueljim/projects/rust_restapi/target/rls/debug/deps/libtokio_util-489bfdd57ccaca60.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[5691937566244850933,0]},"crate_root":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src","external_crates":[{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8947264418412078715,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[16214626321829081561,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[14004541350322100676,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14513964228136080925,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[18071398054246242872,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9901929154766010641,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[1992023595794582040,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3304853791930394566,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[16365657126326177412,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1295476454418234886,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2217975506173844539,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[10955358760156651288,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[17029152361031566612,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[4374745283242162134,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[5422690374441455074,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[16158478199367640957,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[3064376627870306792,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","num":18,"id":{"name":"bytes","disambiguator":[12668268473582422806,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":19,"id":{"name":"tokio","disambiguator":[17437888746749735104,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","num":20,"id":{"name":"pin_project_lite","disambiguator":[811328755973507244,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","num":21,"id":{"name":"futures_core","disambiguator":[6138211312376724297,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":22,"id":{"name":"mio","disambiguator":[2532763512759375244,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":23,"id":{"name":"net2","disambiguator":[4807614549696298777,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":24,"id":{"name":"libc","disambiguator":[5872064375414916600,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":25,"id":{"name":"cfg_if","disambiguator":[1706843431481481536,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":26,"id":{"name":"iovec","disambiguator":[16831157725899775826,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":27,"id":{"name":"slab","disambiguator":[13479864244438596374,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","num":28,"id":{"name":"log","disambiguator":[14506920878264654452,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":29,"id":{"name":"cfg_if","disambiguator":[18090141088928795859,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":30,"id":{"name":"lazy_static","disambiguator":[89345479795873267,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":31,"id":{"name":"mio_uds","disambiguator":[12262522182299587937,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":32,"id":{"name":"memchr","disambiguator":[7183785832843700463,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":33,"id":{"name":"signal_hook_registry","disambiguator":[11655487536205378902,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","num":34,"id":{"name":"futures_sink","disambiguator":[3412946671653501025,0]}}],"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":0,"byte_end":816,"line_start":1,"line_end":37,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":676},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":11057838,"byte_end":11057848,"line_start":13,"line_end":13,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":57},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":11057887,"byte_end":11057894,"line_start":16,"line_end":16,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":74},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":11057933,"byte_end":11057940,"line_start":19,"line_end":19,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":979},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":11057978,"byte_end":11057984,"line_start":22,"line_end":22,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":700},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":11057986,"byte_end":11057997,"line_start":22,"line_end":22,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":893},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":11058045,"byte_end":11058055,"line_start":25,"line_end":25,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":807},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":11058104,"byte_end":11058115,"line_start":28,"line_end":28,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":724},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":11058177,"byte_end":11058197,"line_start":31,"line_end":31,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":560},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":11058199,"byte_end":11058224,"line_start":31,"line_end":31,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":740},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":11058273,"byte_end":11058283,"line_start":34,"line_end":34,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":762},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":11058285,"byte_end":11058300,"line_start":34,"line_end":34,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":7}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":0,"byte_end":816,"line_start":1,"line_end":37,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":7}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":60,"byte_end":100,"line_start":2,"line_end":2,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":101,"byte_end":207,"line_start":3,"line_end":8,"column_start":1,"column_end":3}},{"value":"deny(intra_doc_link_resolution_failure)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":208,"byte_end":251,"line_start":9,"line_end":9,"column_start":1,"column_end":44}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":409,"byte_end":446,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":447,"byte_end":450,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":451,"byte_end":508,"line_start":18,"line_end":18,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":509,"byte_end":573,"line_start":19,"line_end":19,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":574,"byte_end":649,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":650,"byte_end":653,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":654,"byte_end":690,"line_start":22,"line_end":22,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":7},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":256},{"krate":0,"index":259},{"krate":0,"index":351},{"krate":0,"index":354},{"krate":0,"index":503},{"krate":0,"index":506},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":609},{"krate":0,"index":612},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":673}],"decl_id":null,"docs":" Utilities for encoding and decoding frames.","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/cfg.rs","byte_start":892,"byte_end":917,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Utilities for encoding and decoding frames.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":11057390,"byte_end":11057437,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":11057438,"byte_end":11057441,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":11057442,"byte_end":11057510,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":11057511,"byte_end":11057586,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":11057587,"byte_end":11057635,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":11057636,"byte_end":11057639,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":11057640,"byte_end":11057679,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":11057680,"byte_end":11057721,"line_start":8,"line_end":8,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: tokio::stream::Stream","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":11057722,"byte_end":11057759,"line_start":9,"line_end":9,"column_start":1,"column_end":38}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":11057760,"byte_end":11057792,"line_start":10,"line_end":10,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":676},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11059577,"byte_end":11059587,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11058429,"byte_end":11058514,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11058515,"byte_end":11058518,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11058519,"byte_end":11058557,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11058558,"byte_end":11058596,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11058597,"byte_end":11058600,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11058601,"byte_end":11058614,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11058615,"byte_end":11058618,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11058619,"byte_end":11058700,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11058701,"byte_end":11058704,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11058705,"byte_end":11058744,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11058745,"byte_end":11058778,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11058779,"byte_end":11058808,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11058809,"byte_end":11058812,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11058813,"byte_end":11058820,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11058821,"byte_end":11058839,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11058840,"byte_end":11058870,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11058871,"byte_end":11058895,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11058896,"byte_end":11058903,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11058904,"byte_end":11058933,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11058934,"byte_end":11058986,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11058987,"byte_end":11058990,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11058991,"byte_end":11059009,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11059010,"byte_end":11059027,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11059028,"byte_end":11059108,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11059109,"byte_end":11059143,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11059144,"byte_end":11059197,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11059198,"byte_end":11059209,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11059210,"byte_end":11059217,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11059218,"byte_end":11059223,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(core_threads = 1)]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11059224,"byte_end":11059262,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11059263,"byte_end":11059316,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11059317,"byte_end":11059375,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11059376,"byte_end":11059455,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11059456,"byte_end":11059468,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11059469,"byte_end":11059476,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11059477,"byte_end":11059484,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11059485,"byte_end":11059488,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11059689,"byte_end":11059692,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11059616,"byte_end":11059677,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":57},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11061004,"byte_end":11061011,"line_start":21,"line_end":21,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11060407,"byte_end":11060442,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11060443,"byte_end":11060446,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11060447,"byte_end":11060516,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11060517,"byte_end":11060596,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11060597,"byte_end":11060669,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11060670,"byte_end":11060694,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11060695,"byte_end":11060698,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11060699,"byte_end":11060767,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11060768,"byte_end":11060845,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11060846,"byte_end":11060907,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11060908,"byte_end":11060911,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11060912,"byte_end":11060948,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11060949,"byte_end":11060993,"line_start":20,"line_end":20,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":58},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11061059,"byte_end":11061063,"line_start":23,"line_end":23,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11061018,"byte_end":11061049,"line_start":22,"line_end":22,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":59},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11061829,"byte_end":11061834,"line_start":40,"line_end":40,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11061070,"byte_end":11061122,"line_start":25,"line_end":25,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11061127,"byte_end":11061130,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11061135,"byte_end":11061204,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11061209,"byte_end":11061279,"line_start":28,"line_end":28,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11061284,"byte_end":11061330,"line_start":29,"line_end":29,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11061335,"byte_end":11061338,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11061343,"byte_end":11061419,"line_start":31,"line_end":31,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11061424,"byte_end":11061499,"line_start":32,"line_end":32,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11061504,"byte_end":11061579,"line_start":33,"line_end":33,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11061584,"byte_end":11061624,"line_start":34,"line_end":34,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11061629,"byte_end":11061632,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11061637,"byte_end":11061711,"line_start":36,"line_end":36,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11061716,"byte_end":11061762,"line_start":37,"line_end":37,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11061767,"byte_end":11061770,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11061775,"byte_end":11061819,"line_start":39,"line_end":39,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11064770,"byte_end":11064776,"line_start":110,"line_end":110,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11061858,"byte_end":11061923,"line_start":42,"line_end":42,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11061928,"byte_end":11061931,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11061936,"byte_end":11062010,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11062015,"byte_end":11062087,"line_start":45,"line_end":45,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11062092,"byte_end":11062165,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11062170,"byte_end":11062213,"line_start":47,"line_end":47,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11062218,"byte_end":11062221,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11062226,"byte_end":11062299,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11062304,"byte_end":11062367,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11062372,"byte_end":11062447,"line_start":51,"line_end":51,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11062452,"byte_end":11062527,"line_start":52,"line_end":52,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11062532,"byte_end":11062555,"line_start":53,"line_end":53,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11062560,"byte_end":11062563,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11062568,"byte_end":11062640,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11062645,"byte_end":11062719,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11062724,"byte_end":11062794,"line_start":57,"line_end":57,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11062799,"byte_end":11062802,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11062807,"byte_end":11062875,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11062880,"byte_end":11062951,"line_start":60,"line_end":60,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11062956,"byte_end":11063036,"line_start":61,"line_end":61,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11063041,"byte_end":11063053,"line_start":62,"line_end":62,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11063058,"byte_end":11063061,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11063066,"byte_end":11063136,"line_start":64,"line_end":64,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11063141,"byte_end":11063216,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11063221,"byte_end":11063258,"line_start":66,"line_end":66,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11063263,"byte_end":11063266,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11063271,"byte_end":11063307,"line_start":68,"line_end":68,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11063312,"byte_end":11063356,"line_start":69,"line_end":69,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11063361,"byte_end":11063364,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11063369,"byte_end":11063392,"line_start":71,"line_end":71,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11063397,"byte_end":11063400,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11063405,"byte_end":11063479,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11063484,"byte_end":11063558,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11063563,"byte_end":11063616,"line_start":75,"line_end":75,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11063621,"byte_end":11063624,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11063629,"byte_end":11063700,"line_start":77,"line_end":77,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11063705,"byte_end":11063775,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11063780,"byte_end":11063796,"line_start":79,"line_end":79,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11063801,"byte_end":11063804,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11063809,"byte_end":11063822,"line_start":81,"line_end":81,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11063827,"byte_end":11063845,"line_start":82,"line_end":82,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11063850,"byte_end":11063855,"line_start":83,"line_end":83,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11063860,"byte_end":11063886,"line_start":84,"line_end":84,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11063891,"byte_end":11063928,"line_start":85,"line_end":85,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11063933,"byte_end":11063938,"line_start":86,"line_end":86,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11063943,"byte_end":11063964,"line_start":87,"line_end":87,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11063969,"byte_end":11063974,"line_start":88,"line_end":88,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11063979,"byte_end":11064009,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11064014,"byte_end":11064028,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11064033,"byte_end":11064064,"line_start":91,"line_end":91,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11064069,"byte_end":11064102,"line_start":92,"line_end":92,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11064107,"byte_end":11064110,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11064115,"byte_end":11064208,"line_start":94,"line_end":94,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11064213,"byte_end":11064231,"line_start":95,"line_end":95,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11064236,"byte_end":11064239,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11064244,"byte_end":11064316,"line_start":97,"line_end":97,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11064321,"byte_end":11064381,"line_start":98,"line_end":98,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11064386,"byte_end":11064438,"line_start":99,"line_end":99,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11064443,"byte_end":11064505,"line_start":100,"line_end":100,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11064510,"byte_end":11064577,"line_start":101,"line_end":101,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11064582,"byte_end":11064585,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11064590,"byte_end":11064618,"line_start":103,"line_end":103,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11064623,"byte_end":11064632,"line_start":104,"line_end":104,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11064637,"byte_end":11064642,"line_start":105,"line_end":105,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11064647,"byte_end":11064654,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11064659,"byte_end":11064662,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11064667,"byte_end":11064736,"line_start":108,"line_end":108,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11064741,"byte_end":11064762,"line_start":109,"line_end":109,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11065635,"byte_end":11065645,"line_start":125,"line_end":125,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11064857,"byte_end":11064929,"line_start":112,"line_end":112,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11064934,"byte_end":11064983,"line_start":113,"line_end":113,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11064988,"byte_end":11064991,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11064996,"byte_end":11065064,"line_start":115,"line_end":115,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11065069,"byte_end":11065136,"line_start":116,"line_end":116,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11065141,"byte_end":11065209,"line_start":117,"line_end":117,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11065214,"byte_end":11065262,"line_start":118,"line_end":118,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11065267,"byte_end":11065270,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11065275,"byte_end":11065343,"line_start":120,"line_end":120,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11065348,"byte_end":11065423,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11065428,"byte_end":11065503,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11065508,"byte_end":11065580,"line_start":123,"line_end":123,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11065585,"byte_end":11065627,"line_start":124,"line_end":124,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11067254,"byte_end":11067260,"line_start":159,"line_end":159,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Sized","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11066063,"byte_end":11066143,"line_start":138,"line_end":138,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11066148,"byte_end":11066224,"line_start":139,"line_end":139,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11066229,"byte_end":11066232,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11066237,"byte_end":11066312,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11066317,"byte_end":11066387,"line_start":142,"line_end":142,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11066392,"byte_end":11066463,"line_start":143,"line_end":143,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11066468,"byte_end":11066540,"line_start":144,"line_end":144,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11066545,"byte_end":11066603,"line_start":145,"line_end":145,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11066608,"byte_end":11066611,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11066616,"byte_end":11066685,"line_start":147,"line_end":147,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11066690,"byte_end":11066765,"line_start":148,"line_end":148,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11066770,"byte_end":11066846,"line_start":149,"line_end":149,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11066851,"byte_end":11066873,"line_start":150,"line_end":150,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11066878,"byte_end":11066881,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11066886,"byte_end":11066959,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11066964,"byte_end":11067037,"line_start":153,"line_end":153,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11067042,"byte_end":11067118,"line_start":154,"line_end":154,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11067123,"byte_end":11067126,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio::stream::Stream","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11067131,"byte_end":11067168,"line_start":156,"line_end":156,"column_start":5,"column_end":42}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11067173,"byte_end":11067205,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":11067210,"byte_end":11067246,"line_start":158,"line_end":158,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":74},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":11067594,"byte_end":11067601,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":11067439,"byte_end":11067511,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":11067512,"byte_end":11067532,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":11067533,"byte_end":11067536,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":11067537,"byte_end":11067583,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":76},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":11067866,"byte_end":11067871,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":74},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":11067614,"byte_end":11067646,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":11067651,"byte_end":11067654,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":11067659,"byte_end":11067736,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":11067741,"byte_end":11067797,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":11067802,"byte_end":11067805,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":11067810,"byte_end":11067856,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":11068222,"byte_end":11068228,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":74},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":11067895,"byte_end":11067940,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":11067945,"byte_end":11067948,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":11067953,"byte_end":11068027,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":11068032,"byte_end":11068112,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":11068117,"byte_end":11068155,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":11068160,"byte_end":11068163,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":11068168,"byte_end":11068214,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":979},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11069377,"byte_end":11069383,"line_start":31,"line_end":31,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":982}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":161},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11069819,"byte_end":11069821,"line_start":48,"line_end":48,"column_start":10,"column_end":12},"name":"Io","qualname":"::codec::framed::ProjectFuse::Io","value":"type Io;","parent":{"krate":0,"index":160},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":162},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11069832,"byte_end":11069837,"line_start":49,"line_end":49,"column_start":10,"column_end":15},"name":"Codec","qualname":"::codec::framed::ProjectFuse::Codec","value":"type Codec;","parent":{"krate":0,"index":160},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11071627,"byte_end":11071630,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11070285,"byte_end":11070365,"line_start":71,"line_end":71,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11070370,"byte_end":11070451,"line_start":72,"line_end":72,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11070456,"byte_end":11070459,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11070464,"byte_end":11070539,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11070544,"byte_end":11070614,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11070619,"byte_end":11070688,"line_start":76,"line_end":76,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11070693,"byte_end":11070765,"line_start":77,"line_end":77,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11070770,"byte_end":11070828,"line_start":78,"line_end":78,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11070833,"byte_end":11070836,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11070841,"byte_end":11070912,"line_start":80,"line_end":80,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11070917,"byte_end":11070994,"line_start":81,"line_end":81,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11070999,"byte_end":11071075,"line_start":82,"line_end":82,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11071080,"byte_end":11071102,"line_start":83,"line_end":83,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11071107,"byte_end":11071110,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11071115,"byte_end":11071188,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11071193,"byte_end":11071266,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11071271,"byte_end":11071347,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11071352,"byte_end":11071355,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio::stream::Stream","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11071360,"byte_end":11071397,"line_start":89,"line_end":89,"column_start":5,"column_end":42}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11071402,"byte_end":11071434,"line_start":90,"line_end":90,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11071439,"byte_end":11071476,"line_start":91,"line_end":91,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11071481,"byte_end":11071519,"line_start":92,"line_end":92,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11071524,"byte_end":11071615,"line_start":93,"line_end":93,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11073178,"byte_end":11073191,"line_start":124,"line_end":124,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"pub fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11071782,"byte_end":11071862,"line_start":100,"line_end":100,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11071867,"byte_end":11071948,"line_start":101,"line_end":101,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11071953,"byte_end":11072002,"line_start":102,"line_end":102,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11072007,"byte_end":11072010,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11072015,"byte_end":11072090,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11072095,"byte_end":11072165,"line_start":105,"line_end":105,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11072170,"byte_end":11072239,"line_start":106,"line_end":106,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11072244,"byte_end":11072316,"line_start":107,"line_end":107,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11072321,"byte_end":11072379,"line_start":108,"line_end":108,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11072384,"byte_end":11072387,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11072392,"byte_end":11072463,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11072468,"byte_end":11072545,"line_start":111,"line_end":111,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11072550,"byte_end":11072626,"line_start":112,"line_end":112,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11072631,"byte_end":11072653,"line_start":113,"line_end":113,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11072658,"byte_end":11072661,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11072666,"byte_end":11072739,"line_start":115,"line_end":115,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11072744,"byte_end":11072817,"line_start":116,"line_end":116,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11072822,"byte_end":11072898,"line_start":117,"line_end":117,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11072903,"byte_end":11072906,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio::stream::Stream","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11072911,"byte_end":11072948,"line_start":119,"line_end":119,"column_start":5,"column_end":42}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11072953,"byte_end":11072985,"line_start":120,"line_end":120,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11072990,"byte_end":11073027,"line_start":121,"line_end":121,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11073032,"byte_end":11073070,"line_start":122,"line_end":122,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11073075,"byte_end":11073166,"line_start":123,"line_end":123,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11075060,"byte_end":11075070,"line_start":162,"line_end":162,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11073482,"byte_end":11073562,"line_start":135,"line_end":135,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11073567,"byte_end":11073648,"line_start":136,"line_end":136,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11073653,"byte_end":11073656,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11073661,"byte_end":11073736,"line_start":138,"line_end":138,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11073741,"byte_end":11073811,"line_start":139,"line_end":139,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11073816,"byte_end":11073887,"line_start":140,"line_end":140,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11073892,"byte_end":11073964,"line_start":141,"line_end":141,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11073969,"byte_end":11074027,"line_start":142,"line_end":142,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11074032,"byte_end":11074035,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11074040,"byte_end":11074111,"line_start":144,"line_end":144,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11074116,"byte_end":11074193,"line_start":145,"line_end":145,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11074198,"byte_end":11074274,"line_start":146,"line_end":146,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11074279,"byte_end":11074301,"line_start":147,"line_end":147,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11074306,"byte_end":11074309,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11074314,"byte_end":11074393,"line_start":149,"line_end":149,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11074398,"byte_end":11074475,"line_start":150,"line_end":150,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11074480,"byte_end":11074483,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11074488,"byte_end":11074561,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11074566,"byte_end":11074639,"line_start":153,"line_end":153,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11074644,"byte_end":11074720,"line_start":154,"line_end":154,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11074725,"byte_end":11074728,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio::stream::Stream","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11074733,"byte_end":11074770,"line_start":156,"line_end":156,"column_start":5,"column_end":42}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11074775,"byte_end":11074807,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11074812,"byte_end":11074850,"line_start":158,"line_end":158,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11074855,"byte_end":11074893,"line_start":159,"line_end":159,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11074898,"byte_end":11074952,"line_start":160,"line_end":160,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11074957,"byte_end":11075048,"line_start":161,"line_end":161,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11075759,"byte_end":11075766,"line_start":183,"line_end":183,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11075476,"byte_end":11075539,"line_start":177,"line_end":177,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11075544,"byte_end":11075557,"line_start":178,"line_end":178,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11075562,"byte_end":11075565,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11075570,"byte_end":11075645,"line_start":180,"line_end":180,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11075650,"byte_end":11075720,"line_start":181,"line_end":181,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11075725,"byte_end":11075747,"line_start":182,"line_end":182,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11076127,"byte_end":11076134,"line_start":193,"line_end":193,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11075836,"byte_end":11075907,"line_start":187,"line_end":187,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11075912,"byte_end":11075925,"line_start":188,"line_end":188,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11075930,"byte_end":11075933,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11075938,"byte_end":11076013,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11076018,"byte_end":11076088,"line_start":191,"line_end":191,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11076093,"byte_end":11076115,"line_start":192,"line_end":192,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11076467,"byte_end":11076472,"line_start":202,"line_end":202,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11076216,"byte_end":11076274,"line_start":197,"line_end":197,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11076279,"byte_end":11076292,"line_start":198,"line_end":198,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11076297,"byte_end":11076300,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11076305,"byte_end":11076379,"line_start":200,"line_end":200,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11076384,"byte_end":11076455,"line_start":201,"line_end":201,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11076804,"byte_end":11076813,"line_start":211,"line_end":211,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11076545,"byte_end":11076611,"line_start":206,"line_end":206,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11076616,"byte_end":11076629,"line_start":207,"line_end":207,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11076634,"byte_end":11076637,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11076642,"byte_end":11076716,"line_start":209,"line_end":209,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11076721,"byte_end":11076792,"line_start":210,"line_end":210,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11076953,"byte_end":11076964,"line_start":216,"line_end":216,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11076898,"byte_end":11076941,"line_start":215,"line_end":215,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11077291,"byte_end":11077301,"line_start":225,"line_end":225,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11077026,"byte_end":11077089,"line_start":220,"line_end":220,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11077094,"byte_end":11077097,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11077102,"byte_end":11077177,"line_start":222,"line_end":222,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11077182,"byte_end":11077252,"line_start":223,"line_end":223,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11077257,"byte_end":11077279,"line_start":224,"line_end":224,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11077696,"byte_end":11077706,"line_start":235,"line_end":235,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11077374,"byte_end":11077448,"line_start":229,"line_end":229,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11077453,"byte_end":11077494,"line_start":230,"line_end":230,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11077499,"byte_end":11077502,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11077507,"byte_end":11077582,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11077587,"byte_end":11077657,"line_start":233,"line_end":233,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11077662,"byte_end":11077684,"line_start":234,"line_end":234,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":700},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11082068,"byte_end":11082079,"line_start":396,"line_end":396,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11081793,"byte_end":11081864,"line_start":390,"line_end":390,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11081865,"byte_end":11081937,"line_start":391,"line_end":391,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11081938,"byte_end":11081998,"line_start":392,"line_end":392,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11081999,"byte_end":11082002,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11082003,"byte_end":11082039,"line_start":394,"line_end":394,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":703},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11082165,"byte_end":11082167,"line_start":398,"line_end":398,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":700},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11082092,"byte_end":11082156,"line_start":397,"line_end":397,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":704},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11082199,"byte_end":11082204,"line_start":401,"line_end":401,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":700},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11082177,"byte_end":11082190,"line_start":400,"line_end":400,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":705},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11082269,"byte_end":11082277,"line_start":404,"line_end":404,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":700},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11082214,"byte_end":11082260,"line_start":403,"line_end":403,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":706},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11082364,"byte_end":11082373,"line_start":407,"line_end":407,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":700},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11082294,"byte_end":11082355,"line_start":406,"line_end":406,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11082606,"byte_end":11082609,"line_start":416,"line_end":416,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11082554,"byte_end":11082594,"line_start":415,"line_end":415,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":893},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11083338,"byte_end":11083348,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":896}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11083806,"byte_end":11083809,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11083738,"byte_end":11083794,"line_start":44,"line_end":44,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11084126,"byte_end":11084139,"line_start":56,"line_end":56,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"pub fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11084010,"byte_end":11084092,"line_start":54,"line_end":54,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11084097,"byte_end":11084114,"line_start":55,"line_end":55,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11084782,"byte_end":11084789,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11084495,"byte_end":11084558,"line_start":70,"line_end":70,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11084563,"byte_end":11084580,"line_start":71,"line_end":71,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11084585,"byte_end":11084588,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11084593,"byte_end":11084668,"line_start":73,"line_end":73,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11084673,"byte_end":11084743,"line_start":74,"line_end":74,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11084748,"byte_end":11084770,"line_start":75,"line_end":75,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11085140,"byte_end":11085147,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11084845,"byte_end":11084916,"line_start":80,"line_end":80,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11084921,"byte_end":11084938,"line_start":81,"line_end":81,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11084943,"byte_end":11084946,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11084951,"byte_end":11085026,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11085031,"byte_end":11085101,"line_start":84,"line_end":84,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11085106,"byte_end":11085128,"line_start":85,"line_end":85,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11085484,"byte_end":11085494,"line_start":95,"line_end":95,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11085215,"byte_end":11085282,"line_start":90,"line_end":90,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11085287,"byte_end":11085290,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11085295,"byte_end":11085370,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11085375,"byte_end":11085445,"line_start":93,"line_end":93,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11085450,"byte_end":11085472,"line_start":94,"line_end":94,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11085609,"byte_end":11085616,"line_start":100,"line_end":100,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11085547,"byte_end":11085597,"line_start":99,"line_end":99,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11085745,"byte_end":11085756,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11085675,"byte_end":11085733,"line_start":104,"line_end":104,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11085882,"byte_end":11085893,"line_start":110,"line_end":110,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11085827,"byte_end":11085870,"line_start":109,"line_end":109,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":807},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11091809,"byte_end":11091820,"line_start":25,"line_end":25,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":810}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11092244,"byte_end":11092247,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11092175,"byte_end":11092232,"line_start":46,"line_end":46,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11092772,"byte_end":11092779,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11092484,"byte_end":11092547,"line_start":58,"line_end":58,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11092552,"byte_end":11092570,"line_start":59,"line_end":59,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11092575,"byte_end":11092578,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11092583,"byte_end":11092658,"line_start":61,"line_end":61,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11092663,"byte_end":11092733,"line_start":62,"line_end":62,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11092738,"byte_end":11092760,"line_start":63,"line_end":63,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11093131,"byte_end":11093138,"line_start":74,"line_end":74,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11092835,"byte_end":11092906,"line_start":68,"line_end":68,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11092911,"byte_end":11092929,"line_start":69,"line_end":69,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11092934,"byte_end":11092937,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11092942,"byte_end":11093017,"line_start":71,"line_end":71,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11093022,"byte_end":11093092,"line_start":72,"line_end":72,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11093097,"byte_end":11093119,"line_start":73,"line_end":73,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11093476,"byte_end":11093486,"line_start":83,"line_end":83,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11093206,"byte_end":11093274,"line_start":78,"line_end":78,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11093279,"byte_end":11093282,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11093287,"byte_end":11093362,"line_start":80,"line_end":80,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11093367,"byte_end":11093437,"line_start":81,"line_end":81,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11093442,"byte_end":11093464,"line_start":82,"line_end":82,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11093601,"byte_end":11093608,"line_start":88,"line_end":88,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11093539,"byte_end":11093589,"line_start":87,"line_end":87,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11093737,"byte_end":11093748,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11093667,"byte_end":11093725,"line_start":92,"line_end":92,"column_start":5,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":506},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","parent":null,"children":[{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":511},{"krate":0,"index":514},{"krate":0,"index":517},{"krate":0,"index":520},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":527},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":534},{"krate":0,"index":537},{"krate":0,"index":540},{"krate":0,"index":543},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":550},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":557},{"krate":0,"index":712},{"krate":0,"index":719},{"krate":0,"index":721},{"krate":0,"index":723},{"krate":0,"index":560},{"krate":0,"index":724},{"krate":0,"index":727},{"krate":0,"index":729},{"krate":0,"index":735},{"krate":0,"index":737},{"krate":0,"index":739},{"krate":0,"index":562},{"krate":0,"index":569},{"krate":0,"index":573},{"krate":0,"index":577},{"krate":0,"index":579},{"krate":0,"index":598},{"krate":0,"index":600},{"krate":0,"index":602},{"krate":0,"index":604}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11100083,"byte_end":11100135,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11100136,"byte_end":11100139,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11100140,"byte_end":11100210,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11100211,"byte_end":11100269,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11100270,"byte_end":11100342,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11100343,"byte_end":11100413,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11100414,"byte_end":11100481,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11100482,"byte_end":11100485,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11100486,"byte_end":11100507,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11100508,"byte_end":11100511,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11100512,"byte_end":11100587,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11100588,"byte_end":11100659,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11100660,"byte_end":11100731,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11100732,"byte_end":11100802,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11100803,"byte_end":11100843,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11100844,"byte_end":11100847,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11100848,"byte_end":11100855,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11100856,"byte_end":11100899,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11100900,"byte_end":11100958,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11100959,"byte_end":11100962,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11100963,"byte_end":11101018,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11101019,"byte_end":11101061,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11101062,"byte_end":11101067,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11101068,"byte_end":11101120,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11101121,"byte_end":11101126,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11101127,"byte_end":11101149,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11101150,"byte_end":11101157,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11101158,"byte_end":11101161,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11101162,"byte_end":11101234,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11101235,"byte_end":11101306,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11101307,"byte_end":11101326,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11101327,"byte_end":11101330,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11101331,"byte_end":11101342,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11101343,"byte_end":11101392,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11101393,"byte_end":11101442,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11101443,"byte_end":11101492,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11101493,"byte_end":11101500,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11101501,"byte_end":11101504,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11101505,"byte_end":11101543,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11101544,"byte_end":11101547,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11101548,"byte_end":11101555,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11101556,"byte_end":11101582,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11101583,"byte_end":11101641,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11101642,"byte_end":11101645,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11101646,"byte_end":11101671,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11101672,"byte_end":11101693,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11101694,"byte_end":11101697,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11101698,"byte_end":11101774,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11101775,"byte_end":11101784,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11101785,"byte_end":11101827,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11101828,"byte_end":11101833,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11101834,"byte_end":11101907,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11101908,"byte_end":11101955,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11101956,"byte_end":11101959,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11101960,"byte_end":11101997,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11101998,"byte_end":11102012,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11102013,"byte_end":11102018,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11102019,"byte_end":11102026,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11102027,"byte_end":11102030,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11102031,"byte_end":11102073,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11102074,"byte_end":11102077,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11102078,"byte_end":11102089,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11102090,"byte_end":11102129,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11102130,"byte_end":11102169,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11102170,"byte_end":11102209,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11102210,"byte_end":11102217,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11102218,"byte_end":11102221,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11102222,"byte_end":11102236,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11102237,"byte_end":11102240,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11102241,"byte_end":11102316,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11102317,"byte_end":11102390,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11102391,"byte_end":11102457,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11102458,"byte_end":11102527,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11102528,"byte_end":11102593,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11102594,"byte_end":11102597,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11102598,"byte_end":11102614,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11102615,"byte_end":11102618,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11102619,"byte_end":11102695,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11102696,"byte_end":11102737,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11102738,"byte_end":11102741,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11102742,"byte_end":11102749,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11102750,"byte_end":11102781,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11102782,"byte_end":11102832,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11102833,"byte_end":11102874,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11102875,"byte_end":11102910,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11102911,"byte_end":11102959,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11102960,"byte_end":11102991,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11102992,"byte_end":11103040,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11103041,"byte_end":11103090,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11103091,"byte_end":11103113,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11103114,"byte_end":11103121,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11103122,"byte_end":11103144,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11103145,"byte_end":11103152,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11103153,"byte_end":11103156,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11103157,"byte_end":11103205,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11103206,"byte_end":11103209,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11103210,"byte_end":11103221,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11103222,"byte_end":11103274,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11103275,"byte_end":11103340,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11103341,"byte_end":11103406,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11103407,"byte_end":11103472,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11103473,"byte_end":11103480,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11103481,"byte_end":11103484,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11103485,"byte_end":11103561,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11103562,"byte_end":11103636,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11103637,"byte_end":11103709,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11103710,"byte_end":11103786,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11103787,"byte_end":11103829,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11103830,"byte_end":11103833,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11103834,"byte_end":11103850,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11103851,"byte_end":11103854,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11103855,"byte_end":11103930,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11103931,"byte_end":11103972,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11103973,"byte_end":11103976,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11103977,"byte_end":11103984,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11103985,"byte_end":11104016,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11104017,"byte_end":11104067,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11104068,"byte_end":11104109,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11104110,"byte_end":11104145,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11104146,"byte_end":11104194,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11104195,"byte_end":11104226,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11104227,"byte_end":11104275,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11104276,"byte_end":11104335,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11104336,"byte_end":11104358,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11104359,"byte_end":11104366,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11104367,"byte_end":11104389,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11104390,"byte_end":11104397,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11104398,"byte_end":11104401,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11104402,"byte_end":11104450,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11104451,"byte_end":11104454,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11104455,"byte_end":11104466,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11104467,"byte_end":11104516,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11104517,"byte_end":11104571,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11104572,"byte_end":11104626,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11104627,"byte_end":11104681,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11104682,"byte_end":11104689,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11104690,"byte_end":11104693,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11104694,"byte_end":11104767,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11104768,"byte_end":11104835,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11104836,"byte_end":11104839,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11104840,"byte_end":11104856,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11104857,"byte_end":11104860,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11104861,"byte_end":11104937,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11104938,"byte_end":11105010,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11105011,"byte_end":11105050,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11105051,"byte_end":11105054,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11105055,"byte_end":11105062,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11105063,"byte_end":11105094,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11105095,"byte_end":11105145,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11105146,"byte_end":11105187,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11105188,"byte_end":11105223,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11105224,"byte_end":11105272,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11105273,"byte_end":11105304,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11105305,"byte_end":11105352,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11105353,"byte_end":11105373,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11105374,"byte_end":11105396,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11105397,"byte_end":11105404,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11105405,"byte_end":11105427,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11105428,"byte_end":11105435,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11105436,"byte_end":11105439,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11105440,"byte_end":11105488,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11105489,"byte_end":11105492,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11105493,"byte_end":11105504,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11105505,"byte_end":11105557,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11105558,"byte_end":11105623,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11105624,"byte_end":11105689,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11105690,"byte_end":11105755,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11105756,"byte_end":11105763,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11105764,"byte_end":11105767,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11105768,"byte_end":11105840,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11105841,"byte_end":11105916,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11105917,"byte_end":11105989,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11105990,"byte_end":11106066,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11106067,"byte_end":11106140,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11106141,"byte_end":11106144,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11106145,"byte_end":11106161,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11106162,"byte_end":11106165,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11106166,"byte_end":11106240,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11106241,"byte_end":11106308,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11106309,"byte_end":11106312,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11106313,"byte_end":11106320,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11106321,"byte_end":11106352,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11106353,"byte_end":11106403,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11106404,"byte_end":11106445,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11106446,"byte_end":11106481,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11106482,"byte_end":11106530,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11106531,"byte_end":11106562,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11106563,"byte_end":11106611,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11106612,"byte_end":11106632,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11106633,"byte_end":11106655,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11106656,"byte_end":11106663,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11106664,"byte_end":11106686,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11106687,"byte_end":11106694,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11106695,"byte_end":11106698,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11106699,"byte_end":11106747,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11106748,"byte_end":11106751,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11106752,"byte_end":11106763,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11106764,"byte_end":11106790,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11106791,"byte_end":11106836,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11106837,"byte_end":11106882,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11106883,"byte_end":11106928,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11106929,"byte_end":11106932,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11106933,"byte_end":11106961,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11106962,"byte_end":11107007,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11107008,"byte_end":11107053,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11107054,"byte_end":11107099,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11107100,"byte_end":11107107,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11107108,"byte_end":11107111,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11107112,"byte_end":11107184,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11107185,"byte_end":11107261,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11107262,"byte_end":11107332,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11107333,"byte_end":11107402,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11107403,"byte_end":11107440,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11107441,"byte_end":11107444,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11107445,"byte_end":11107519,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11107520,"byte_end":11107574,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11107575,"byte_end":11107578,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11107579,"byte_end":11107595,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11107596,"byte_end":11107599,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11107600,"byte_end":11107673,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11107674,"byte_end":11107750,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11107751,"byte_end":11107825,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11107826,"byte_end":11107839,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11107840,"byte_end":11107843,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11107844,"byte_end":11107851,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11107852,"byte_end":11107883,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11107884,"byte_end":11107934,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11107935,"byte_end":11107976,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11107977,"byte_end":11108012,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11108013,"byte_end":11108062,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11108063,"byte_end":11108094,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11108095,"byte_end":11108143,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11108144,"byte_end":11108188,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11108189,"byte_end":11108211,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11108212,"byte_end":11108219,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11108220,"byte_end":11108242,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11108243,"byte_end":11108250,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11108251,"byte_end":11108254,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11108255,"byte_end":11108303,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11108304,"byte_end":11108307,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11108308,"byte_end":11108319,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11108320,"byte_end":11108346,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11108347,"byte_end":11108397,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11108398,"byte_end":11108448,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11108449,"byte_end":11108499,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11108500,"byte_end":11108503,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11108504,"byte_end":11108524,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11108525,"byte_end":11108555,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11108556,"byte_end":11108586,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11108587,"byte_end":11108617,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11108618,"byte_end":11108625,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11108626,"byte_end":11108629,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11108630,"byte_end":11108703,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11108704,"byte_end":11108779,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11108780,"byte_end":11108852,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11108853,"byte_end":11108891,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11108892,"byte_end":11108895,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11108896,"byte_end":11108970,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11108971,"byte_end":11109047,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11109048,"byte_end":11109121,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11109122,"byte_end":11109150,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11109151,"byte_end":11109154,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11109155,"byte_end":11109171,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11109172,"byte_end":11109175,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11109176,"byte_end":11109249,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11109250,"byte_end":11109326,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11109327,"byte_end":11109401,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11109402,"byte_end":11109474,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11109475,"byte_end":11109486,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11109487,"byte_end":11109490,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11109491,"byte_end":11109498,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11109499,"byte_end":11109530,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11109531,"byte_end":11109581,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11109582,"byte_end":11109623,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11109624,"byte_end":11109659,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11109660,"byte_end":11109709,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11109710,"byte_end":11109741,"line_start":277,"line_end":277,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11109742,"byte_end":11109807,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11109808,"byte_end":11109828,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11109829,"byte_end":11109851,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11109852,"byte_end":11109859,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11109860,"byte_end":11109867,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11109868,"byte_end":11109871,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11109872,"byte_end":11109920,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11109921,"byte_end":11109924,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11109925,"byte_end":11109936,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11109937,"byte_end":11109963,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11109964,"byte_end":11110014,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11110015,"byte_end":11110065,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11110066,"byte_end":11110116,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11110117,"byte_end":11110120,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11110121,"byte_end":11110141,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11110142,"byte_end":11110172,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11110173,"byte_end":11110203,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11110204,"byte_end":11110234,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11110235,"byte_end":11110242,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11110243,"byte_end":11110246,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11110247,"byte_end":11110320,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11110321,"byte_end":11110395,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11110396,"byte_end":11110470,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11110471,"byte_end":11110544,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11110545,"byte_end":11110621,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11110622,"byte_end":11110655,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11110656,"byte_end":11110659,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11110660,"byte_end":11110674,"line_start":305,"line_end":305,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11110675,"byte_end":11110678,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11110679,"byte_end":11110754,"line_start":307,"line_end":307,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11110755,"byte_end":11110827,"line_start":308,"line_end":308,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11110828,"byte_end":11110896,"line_start":309,"line_end":309,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11110897,"byte_end":11110973,"line_start":310,"line_end":310,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11110974,"byte_end":11111015,"line_start":311,"line_end":311,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11111016,"byte_end":11111019,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11111020,"byte_end":11111090,"line_start":313,"line_end":313,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11111091,"byte_end":11111109,"line_start":314,"line_end":314,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11111110,"byte_end":11111113,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11111114,"byte_end":11111121,"line_start":316,"line_end":316,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11111122,"byte_end":11111154,"line_start":317,"line_end":317,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11111155,"byte_end":11111205,"line_start":318,"line_end":318,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11111206,"byte_end":11111250,"line_start":319,"line_end":319,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11111251,"byte_end":11111264,"line_start":320,"line_end":320,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11111265,"byte_end":11111300,"line_start":321,"line_end":321,"column_start":1,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11111301,"byte_end":11111332,"line_start":322,"line_end":322,"column_start":1,"column_end":32}},{"value":"/     .new_write(io);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11111333,"byte_end":11111356,"line_start":323,"line_end":323,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11111357,"byte_end":11111364,"line_start":324,"line_end":324,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11111365,"byte_end":11111387,"line_start":325,"line_end":325,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11111388,"byte_end":11111395,"line_start":326,"line_end":326,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11111396,"byte_end":11111399,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11111400,"byte_end":11111450,"line_start":328,"line_end":328,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11111451,"byte_end":11111454,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11111455,"byte_end":11111466,"line_start":330,"line_end":330,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11111467,"byte_end":11111500,"line_start":331,"line_end":331,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11111501,"byte_end":11111534,"line_start":332,"line_end":332,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11111535,"byte_end":11111568,"line_start":333,"line_end":333,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11111569,"byte_end":11111576,"line_start":334,"line_end":334,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11111577,"byte_end":11111580,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: struct.LengthDelimitedCodec.html#method.new","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11111581,"byte_end":11111661,"line_start":336,"line_end":336,"column_start":1,"column_end":81}},{"value":"/ [`FramedRead`]: struct.FramedRead.html","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11111662,"byte_end":11111704,"line_start":337,"line_end":337,"column_start":1,"column_end":43}},{"value":"/ [`FramedWrite`]: struct.FramedWrite.html","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11111705,"byte_end":11111749,"line_start":338,"line_end":338,"column_start":1,"column_end":45}},{"value":"/ [`AsyncRead`]: ../../trait.AsyncRead.html","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11111750,"byte_end":11111795,"line_start":339,"line_end":339,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: ../../trait.AsyncWrite.html","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11111796,"byte_end":11111843,"line_start":340,"line_end":340,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: ../trait.Encoder.html","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11111844,"byte_end":11111882,"line_start":341,"line_end":341,"column_start":1,"column_end":39}},{"value":"/ [`BytesMut`]: https://docs.rs/bytes/0.4/bytes/struct.BytesMut.html","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11111883,"byte_end":11111953,"line_start":342,"line_end":342,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":712},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11112515,"byte_end":11112522,"line_start":359,"line_end":359,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11112197,"byte_end":11112252,"line_start":353,"line_end":353,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11112253,"byte_end":11112256,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11112257,"byte_end":11112332,"line_start":355,"line_end":355,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11112333,"byte_end":11112413,"line_start":356,"line_end":356,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11112414,"byte_end":11112473,"line_start":357,"line_end":357,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":560},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11113193,"byte_end":11113218,"line_start":381,"line_end":381,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":561}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11113108,"byte_end":11113181,"line_start":380,"line_end":380,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":724},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11113563,"byte_end":11113583,"line_start":394,"line_end":394,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":725},{"krate":0,"index":726}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11113239,"byte_end":11113313,"line_start":385,"line_end":385,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11113314,"byte_end":11113317,"line_start":386,"line_end":386,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11113318,"byte_end":11113397,"line_start":387,"line_end":387,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11113398,"byte_end":11113441,"line_start":388,"line_end":388,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11113442,"byte_end":11113445,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11113446,"byte_end":11113499,"line_start":390,"line_end":390,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11113500,"byte_end":11113503,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11113504,"byte_end":11113534,"line_start":392,"line_end":392,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11113927,"byte_end":11113930,"line_start":412,"line_end":412,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11113836,"byte_end":11113915,"line_start":411,"line_end":411,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11114157,"byte_end":11114164,"line_start":421,"line_end":421,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11114054,"byte_end":11114129,"line_start":419,"line_end":419,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11114134,"byte_end":11114145,"line_start":420,"line_end":420,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11114386,"byte_end":11114402,"line_start":429,"line_end":429,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11114214,"byte_end":11114255,"line_start":425,"line_end":425,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11114260,"byte_end":11114263,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11114268,"byte_end":11114341,"line_start":427,"line_end":427,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11114346,"byte_end":11114374,"line_start":428,"line_end":428,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11114823,"byte_end":11114843,"line_start":439,"line_end":439,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11114467,"byte_end":11114501,"line_start":433,"line_end":433,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11114506,"byte_end":11114509,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11114514,"byte_end":11114584,"line_start":435,"line_end":435,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11114589,"byte_end":11114664,"line_start":436,"line_end":436,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11114669,"byte_end":11114741,"line_start":437,"line_end":437,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11114746,"byte_end":11114811,"line_start":438,"line_end":438,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11120119,"byte_end":11120122,"line_start":621,"line_end":621,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11119577,"byte_end":11119652,"line_start":602,"line_end":602,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11119657,"byte_end":11119668,"line_start":603,"line_end":603,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11119673,"byte_end":11119676,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11119681,"byte_end":11119695,"line_start":605,"line_end":605,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11119700,"byte_end":11119703,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11119708,"byte_end":11119715,"line_start":607,"line_end":607,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11119720,"byte_end":11119751,"line_start":608,"line_end":608,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11119756,"byte_end":11119804,"line_start":609,"line_end":609,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11119809,"byte_end":11119812,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11119817,"byte_end":11119858,"line_start":611,"line_end":611,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11119863,"byte_end":11119898,"line_start":612,"line_end":612,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11119903,"byte_end":11119934,"line_start":613,"line_end":613,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11119939,"byte_end":11119970,"line_start":614,"line_end":614,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11119975,"byte_end":11120004,"line_start":615,"line_end":615,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11120009,"byte_end":11120029,"line_start":616,"line_end":616,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11120034,"byte_end":11120056,"line_start":617,"line_end":617,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11120061,"byte_end":11120068,"line_start":618,"line_end":618,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11120073,"byte_end":11120095,"line_start":619,"line_end":619,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11120100,"byte_end":11120107,"line_start":620,"line_end":620,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11121307,"byte_end":11121317,"line_start":662,"line_end":662,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11120786,"byte_end":11120835,"line_start":643,"line_end":643,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11120840,"byte_end":11120843,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11120848,"byte_end":11120880,"line_start":645,"line_end":645,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11120885,"byte_end":11120888,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11120893,"byte_end":11120961,"line_start":647,"line_end":647,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11120966,"byte_end":11120969,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11120974,"byte_end":11120988,"line_start":649,"line_end":649,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11120993,"byte_end":11120996,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11121001,"byte_end":11121008,"line_start":651,"line_end":651,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11121013,"byte_end":11121044,"line_start":652,"line_end":652,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11121049,"byte_end":11121097,"line_start":653,"line_end":653,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11121102,"byte_end":11121105,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11121110,"byte_end":11121151,"line_start":655,"line_end":655,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11121156,"byte_end":11121191,"line_start":656,"line_end":656,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11121196,"byte_end":11121217,"line_start":657,"line_end":657,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11121222,"byte_end":11121244,"line_start":658,"line_end":658,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11121249,"byte_end":11121256,"line_start":659,"line_end":659,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11121261,"byte_end":11121283,"line_start":660,"line_end":660,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11121288,"byte_end":11121295,"line_start":661,"line_end":661,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11121949,"byte_end":11121962,"line_start":686,"line_end":686,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11121416,"byte_end":11121468,"line_start":667,"line_end":667,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11121473,"byte_end":11121476,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11121481,"byte_end":11121519,"line_start":669,"line_end":669,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11121524,"byte_end":11121527,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11121532,"byte_end":11121600,"line_start":671,"line_end":671,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11121605,"byte_end":11121608,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11121613,"byte_end":11121627,"line_start":673,"line_end":673,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11121632,"byte_end":11121635,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11121640,"byte_end":11121647,"line_start":675,"line_end":675,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11121652,"byte_end":11121683,"line_start":676,"line_end":676,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11121688,"byte_end":11121736,"line_start":677,"line_end":677,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11121741,"byte_end":11121744,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11121749,"byte_end":11121790,"line_start":679,"line_end":679,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11121795,"byte_end":11121830,"line_start":680,"line_end":680,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11121835,"byte_end":11121859,"line_start":681,"line_end":681,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11121864,"byte_end":11121886,"line_start":682,"line_end":682,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11121891,"byte_end":11121898,"line_start":683,"line_end":683,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11121903,"byte_end":11121925,"line_start":684,"line_end":684,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11121930,"byte_end":11121937,"line_start":685,"line_end":685,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11122595,"byte_end":11122608,"line_start":710,"line_end":710,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11122062,"byte_end":11122114,"line_start":691,"line_end":691,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11122119,"byte_end":11122122,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11122127,"byte_end":11122165,"line_start":693,"line_end":693,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11122170,"byte_end":11122173,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11122178,"byte_end":11122246,"line_start":695,"line_end":695,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11122251,"byte_end":11122254,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11122259,"byte_end":11122273,"line_start":697,"line_end":697,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11122278,"byte_end":11122281,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11122286,"byte_end":11122293,"line_start":699,"line_end":699,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11122298,"byte_end":11122329,"line_start":700,"line_end":700,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11122334,"byte_end":11122382,"line_start":701,"line_end":701,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11122387,"byte_end":11122390,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11122395,"byte_end":11122436,"line_start":703,"line_end":703,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11122441,"byte_end":11122476,"line_start":704,"line_end":704,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11122481,"byte_end":11122505,"line_start":705,"line_end":705,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11122510,"byte_end":11122532,"line_start":706,"line_end":706,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11122537,"byte_end":11122544,"line_start":707,"line_end":707,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11122549,"byte_end":11122571,"line_start":708,"line_end":708,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11122576,"byte_end":11122583,"line_start":709,"line_end":709,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11123689,"byte_end":11123705,"line_start":744,"line_end":744,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11122777,"byte_end":11122806,"line_start":718,"line_end":718,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11122811,"byte_end":11122814,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11122819,"byte_end":11122891,"line_start":720,"line_end":720,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11122896,"byte_end":11122921,"line_start":721,"line_end":721,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11122926,"byte_end":11122929,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11122934,"byte_end":11123006,"line_start":723,"line_end":723,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11123011,"byte_end":11123080,"line_start":724,"line_end":724,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11123085,"byte_end":11123158,"line_start":725,"line_end":725,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11123163,"byte_end":11123175,"line_start":726,"line_end":726,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11123180,"byte_end":11123183,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11123188,"byte_end":11123263,"line_start":728,"line_end":728,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11123268,"byte_end":11123329,"line_start":729,"line_end":729,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11123334,"byte_end":11123337,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11123342,"byte_end":11123356,"line_start":731,"line_end":731,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11123361,"byte_end":11123364,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11123369,"byte_end":11123376,"line_start":733,"line_end":733,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11123381,"byte_end":11123412,"line_start":734,"line_end":734,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11123417,"byte_end":11123465,"line_start":735,"line_end":735,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11123470,"byte_end":11123473,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11123478,"byte_end":11123519,"line_start":737,"line_end":737,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11123524,"byte_end":11123559,"line_start":738,"line_end":738,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11123564,"byte_end":11123599,"line_start":739,"line_end":739,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11123604,"byte_end":11123626,"line_start":740,"line_end":740,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11123631,"byte_end":11123638,"line_start":741,"line_end":741,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11123643,"byte_end":11123665,"line_start":742,"line_end":742,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11123670,"byte_end":11123677,"line_start":743,"line_end":743,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11124366,"byte_end":11124385,"line_start":768,"line_end":768,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11123802,"byte_end":11123865,"line_start":749,"line_end":749,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11123870,"byte_end":11123873,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11123878,"byte_end":11123929,"line_start":751,"line_end":751,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11123934,"byte_end":11123937,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11123942,"byte_end":11124010,"line_start":753,"line_end":753,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11124015,"byte_end":11124018,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11124023,"byte_end":11124037,"line_start":755,"line_end":755,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11124042,"byte_end":11124045,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11124050,"byte_end":11124057,"line_start":757,"line_end":757,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11124062,"byte_end":11124093,"line_start":758,"line_end":758,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11124098,"byte_end":11124146,"line_start":759,"line_end":759,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11124151,"byte_end":11124154,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11124159,"byte_end":11124200,"line_start":761,"line_end":761,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11124205,"byte_end":11124240,"line_start":762,"line_end":762,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11124245,"byte_end":11124276,"line_start":763,"line_end":763,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11124281,"byte_end":11124303,"line_start":764,"line_end":764,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11124308,"byte_end":11124315,"line_start":765,"line_end":765,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11124320,"byte_end":11124342,"line_start":766,"line_end":766,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11124347,"byte_end":11124354,"line_start":767,"line_end":767,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11125044,"byte_end":11125063,"line_start":791,"line_end":791,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11124554,"byte_end":11124620,"line_start":774,"line_end":774,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11124625,"byte_end":11124628,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11124633,"byte_end":11124688,"line_start":776,"line_end":776,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11124693,"byte_end":11124696,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11124701,"byte_end":11124715,"line_start":778,"line_end":778,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11124720,"byte_end":11124723,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11124728,"byte_end":11124735,"line_start":780,"line_end":780,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11124740,"byte_end":11124771,"line_start":781,"line_end":781,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11124776,"byte_end":11124824,"line_start":782,"line_end":782,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11124829,"byte_end":11124832,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11124837,"byte_end":11124878,"line_start":784,"line_end":784,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11124883,"byte_end":11124918,"line_start":785,"line_end":785,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11124923,"byte_end":11124954,"line_start":786,"line_end":786,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11124959,"byte_end":11124981,"line_start":787,"line_end":787,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11124986,"byte_end":11124993,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11124998,"byte_end":11125020,"line_start":789,"line_end":789,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11125025,"byte_end":11125032,"line_start":790,"line_end":790,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11125617,"byte_end":11125634,"line_start":812,"line_end":812,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11125166,"byte_end":11125239,"line_start":796,"line_end":796,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11125244,"byte_end":11125262,"line_start":797,"line_end":797,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11125267,"byte_end":11125270,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11125275,"byte_end":11125289,"line_start":799,"line_end":799,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11125294,"byte_end":11125297,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11125302,"byte_end":11125309,"line_start":801,"line_end":801,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11125314,"byte_end":11125345,"line_start":802,"line_end":802,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11125350,"byte_end":11125398,"line_start":803,"line_end":803,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11125403,"byte_end":11125406,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11125411,"byte_end":11125452,"line_start":805,"line_end":805,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11125457,"byte_end":11125492,"line_start":806,"line_end":806,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11125497,"byte_end":11125527,"line_start":807,"line_end":807,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11125532,"byte_end":11125554,"line_start":808,"line_end":808,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11125559,"byte_end":11125566,"line_start":809,"line_end":809,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11125571,"byte_end":11125593,"line_start":810,"line_end":810,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11125598,"byte_end":11125605,"line_start":811,"line_end":811,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11126284,"byte_end":11126292,"line_start":836,"line_end":836,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11125735,"byte_end":11125798,"line_start":817,"line_end":817,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11125803,"byte_end":11125806,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11125811,"byte_end":11125872,"line_start":819,"line_end":819,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11125877,"byte_end":11125880,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11125885,"byte_end":11125939,"line_start":821,"line_end":821,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11125944,"byte_end":11125947,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11125952,"byte_end":11125966,"line_start":823,"line_end":823,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11125971,"byte_end":11125974,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11125979,"byte_end":11125986,"line_start":825,"line_end":825,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11125991,"byte_end":11126022,"line_start":826,"line_end":826,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11126027,"byte_end":11126075,"line_start":827,"line_end":827,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11126080,"byte_end":11126083,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11126088,"byte_end":11126129,"line_start":829,"line_end":829,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11126134,"byte_end":11126169,"line_start":830,"line_end":830,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11126174,"byte_end":11126194,"line_start":831,"line_end":831,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11126199,"byte_end":11126221,"line_start":832,"line_end":832,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11126226,"byte_end":11126233,"line_start":833,"line_end":833,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11126238,"byte_end":11126260,"line_start":834,"line_end":834,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11126265,"byte_end":11126272,"line_start":835,"line_end":835,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11126812,"byte_end":11126821,"line_start":856,"line_end":856,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11126390,"byte_end":11126453,"line_start":841,"line_end":841,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11126458,"byte_end":11126461,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11126466,"byte_end":11126480,"line_start":843,"line_end":843,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11126485,"byte_end":11126488,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11126493,"byte_end":11126500,"line_start":845,"line_end":845,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11126505,"byte_end":11126553,"line_start":846,"line_end":846,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11126558,"byte_end":11126579,"line_start":847,"line_end":847,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11126584,"byte_end":11126619,"line_start":848,"line_end":848,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11126624,"byte_end":11126655,"line_start":849,"line_end":849,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11126660,"byte_end":11126691,"line_start":850,"line_end":850,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11126696,"byte_end":11126725,"line_start":851,"line_end":851,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11126730,"byte_end":11126750,"line_start":852,"line_end":852,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11126755,"byte_end":11126776,"line_start":853,"line_end":853,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11126781,"byte_end":11126788,"line_start":854,"line_end":854,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11126793,"byte_end":11126800,"line_start":855,"line_end":855,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11127477,"byte_end":11127485,"line_start":881,"line_end":881,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11126973,"byte_end":11127026,"line_start":863,"line_end":863,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11127031,"byte_end":11127034,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11127039,"byte_end":11127053,"line_start":865,"line_end":865,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11127058,"byte_end":11127061,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11127066,"byte_end":11127073,"line_start":867,"line_end":867,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11127078,"byte_end":11127109,"line_start":868,"line_end":868,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11127114,"byte_end":11127162,"line_start":869,"line_end":869,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11127167,"byte_end":11127170,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11127175,"byte_end":11127216,"line_start":871,"line_end":871,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11127221,"byte_end":11127256,"line_start":872,"line_end":872,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11127261,"byte_end":11127292,"line_start":873,"line_end":873,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11127297,"byte_end":11127328,"line_start":874,"line_end":874,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11127333,"byte_end":11127362,"line_start":875,"line_end":875,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11127367,"byte_end":11127387,"line_start":876,"line_end":876,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11127392,"byte_end":11127414,"line_start":877,"line_end":877,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11127419,"byte_end":11127426,"line_start":878,"line_end":878,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11127431,"byte_end":11127453,"line_start":879,"line_end":879,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11127458,"byte_end":11127465,"line_start":880,"line_end":880,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11128058,"byte_end":11128067,"line_start":902,"line_end":902,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11127649,"byte_end":11127703,"line_start":888,"line_end":888,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11127708,"byte_end":11127711,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11127716,"byte_end":11127730,"line_start":890,"line_end":890,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11127735,"byte_end":11127738,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11127743,"byte_end":11127750,"line_start":892,"line_end":892,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11127755,"byte_end":11127787,"line_start":893,"line_end":893,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11127792,"byte_end":11127842,"line_start":894,"line_end":894,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11127847,"byte_end":11127891,"line_start":895,"line_end":895,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11127896,"byte_end":11127931,"line_start":896,"line_end":896,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11127936,"byte_end":11127967,"line_start":897,"line_end":897,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11127972,"byte_end":11127995,"line_start":898,"line_end":898,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11128000,"byte_end":11128007,"line_start":899,"line_end":899,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11128012,"byte_end":11128034,"line_start":900,"line_end":900,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11128039,"byte_end":11128046,"line_start":901,"line_end":901,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11128676,"byte_end":11128686,"line_start":924,"line_end":924,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11128228,"byte_end":11128277,"line_start":909,"line_end":909,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11128282,"byte_end":11128285,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11128290,"byte_end":11128304,"line_start":911,"line_end":911,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11128309,"byte_end":11128312,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11128317,"byte_end":11128324,"line_start":913,"line_end":913,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11128329,"byte_end":11128374,"line_start":914,"line_end":914,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11128379,"byte_end":11128429,"line_start":915,"line_end":915,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11128434,"byte_end":11128490,"line_start":916,"line_end":916,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11128495,"byte_end":11128508,"line_start":917,"line_end":917,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11128513,"byte_end":11128548,"line_start":918,"line_end":918,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11128553,"byte_end":11128584,"line_start":919,"line_end":919,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11128589,"byte_end":11128613,"line_start":920,"line_end":920,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11128618,"byte_end":11128625,"line_start":921,"line_end":921,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11128630,"byte_end":11128652,"line_start":922,"line_end":922,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11128657,"byte_end":11128664,"line_start":923,"line_end":923,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":740},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11130065,"byte_end":11130075,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11129822,"byte_end":11129909,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11129910,"byte_end":11129913,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11129914,"byte_end":11129952,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11129953,"byte_end":11129991,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11131175,"byte_end":11131178,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11130756,"byte_end":11130816,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11130821,"byte_end":11130824,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11130829,"byte_end":11130839,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11130844,"byte_end":11130847,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11130852,"byte_end":11130924,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11130929,"byte_end":11131002,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11131007,"byte_end":11131074,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11131079,"byte_end":11131082,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11131087,"byte_end":11131163,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11132309,"byte_end":11132328,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11131336,"byte_end":11131396,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11131401,"byte_end":11131404,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11131409,"byte_end":11131472,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11131477,"byte_end":11131555,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11131560,"byte_end":11131627,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11131632,"byte_end":11131704,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11131709,"byte_end":11131779,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11131784,"byte_end":11131807,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11131812,"byte_end":11131815,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11131820,"byte_end":11131830,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11131835,"byte_end":11131838,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11131843,"byte_end":11131918,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11131923,"byte_end":11131996,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11132001,"byte_end":11132077,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11132082,"byte_end":11132155,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11132160,"byte_end":11132230,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11132235,"byte_end":11132238,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11132243,"byte_end":11132297,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11132894,"byte_end":11132904,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11132456,"byte_end":11132506,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11132511,"byte_end":11132514,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11132519,"byte_end":11132526,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11132531,"byte_end":11132550,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11132555,"byte_end":11132593,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11132598,"byte_end":11132601,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11132606,"byte_end":11132640,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11132645,"byte_end":11132692,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11132697,"byte_end":11132704,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11132709,"byte_end":11132716,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11132721,"byte_end":11132759,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11132764,"byte_end":11132767,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11132772,"byte_end":11132825,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11132830,"byte_end":11132870,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11132875,"byte_end":11132882,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":763},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11137264,"byte_end":11137285,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":762},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11137218,"byte_end":11137259,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":765},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11137320,"byte_end":11137322,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":762},"children":[],"decl_id":null,"docs":" An IO error occured.\n","sig":null,"attributes":[{"value":"/ An IO error occured.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11137291,"byte_end":11137315,"line_start":211,"line_end":211,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":762},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11137196,"byte_end":11137211,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError { MaxLineLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":763},{"krate":0,"index":765}],"decl_id":null,"docs":" An error occured while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occured while encoding or decoding a line.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11137114,"byte_end":11137169,"line_start":206,"line_end":206,"column_start":1,"column_end":56}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11059599,"byte_end":11059609,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11059760,"byte_end":11059770,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11060097,"byte_end":11060107,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11069954,"byte_end":11069958,"line_start":54,"line_end":54,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11070229,"byte_end":11070235,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11073463,"byte_end":11073469,"line_start":134,"line_end":134,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11078036,"byte_end":11078042,"line_start":249,"line_end":249,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11078304,"byte_end":11078310,"line_start":261,"line_end":261,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11079081,"byte_end":11079087,"line_start":286,"line_end":286,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11079447,"byte_end":11079451,"line_start":301,"line_end":301,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11079589,"byte_end":11079593,"line_start":307,"line_end":307,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":211},{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11079800,"byte_end":11079804,"line_start":317,"line_end":317,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11080199,"byte_end":11080203,"line_start":331,"line_end":331,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11080484,"byte_end":11080488,"line_start":341,"line_end":341,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11080705,"byte_end":11080709,"line_start":351,"line_end":351,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11081238,"byte_end":11081242,"line_start":369,"line_end":369,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11081623,"byte_end":11081627,"line_start":382,"line_end":382,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11082530,"byte_end":11082541,"line_start":414,"line_end":414,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11083675,"byte_end":11083685,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11084472,"byte_end":11084482,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11085974,"byte_end":11085984,"line_start":115,"line_end":115,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11086297,"byte_end":11086307,"line_start":128,"line_end":128,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11087397,"byte_end":11087407,"line_start":175,"line_end":175,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11088463,"byte_end":11088474,"line_start":215,"line_end":215,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11088992,"byte_end":11089003,"line_start":241,"line_end":241,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11092126,"byte_end":11092137,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11092460,"byte_end":11092471,"line_start":57,"line_end":57,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11093899,"byte_end":11093910,"line_start":99,"line_end":99,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11094621,"byte_end":11094632,"line_start":124,"line_end":124,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11094964,"byte_end":11094975,"line_start":141,"line_end":141,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11095818,"byte_end":11095830,"line_start":172,"line_end":172,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11096172,"byte_end":11096184,"line_start":190,"line_end":190,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11098444,"byte_end":11098456,"line_start":261,"line_end":261,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11098792,"byte_end":11098804,"line_start":274,"line_end":274,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11098939,"byte_end":11098951,"line_start":280,"line_end":280,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11099158,"byte_end":11099170,"line_start":290,"line_end":290,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":492},{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11099565,"byte_end":11099577,"line_start":304,"line_end":304,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":496},{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11099857,"byte_end":11099869,"line_start":314,"line_end":314,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11113809,"byte_end":11113829,"line_start":410,"line_end":410,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11117182,"byte_end":11117202,"line_start":518,"line_end":518,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11118089,"byte_end":11118109,"line_start":549,"line_end":549,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":574},{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11119450,"byte_end":11119470,"line_start":593,"line_end":593,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11119563,"byte_end":11119570,"line_start":601,"line_end":601,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":592},{"krate":0,"index":594},{"krate":0,"index":596},{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11129169,"byte_end":11129176,"line_start":942,"line_end":942,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11129302,"byte_end":11129327,"line_start":950,"line_end":950,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11129485,"byte_end":11129510,"line_start":956,"line_end":956,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11129645,"byte_end":11129670,"line_start":962,"line_end":962,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11130739,"byte_end":11130749,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11133291,"byte_end":11133301,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11136712,"byte_end":11136722,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":660},{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11137045,"byte_end":11137055,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11137360,"byte_end":11137375,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11137657,"byte_end":11137672,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11137789,"byte_end":11137804,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":740,"byte_end":745,"line_start":28,"line_end":28,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":7}},{"kind":"Mod","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":11058126,"byte_end":11058142,"line_start":30,"line_end":30,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":506}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11059599,"byte_end":11059609,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11059760,"byte_end":11059770,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":676},"to":{"krate":0,"index":57}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":11060097,"byte_end":11060107,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":676},"to":{"krate":0,"index":74}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11069954,"byte_end":11069958,"line_start":54,"line_end":54,"column_start":28,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":934},"to":{"krate":0,"index":160}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11070229,"byte_end":11070235,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11073463,"byte_end":11073469,"line_start":134,"line_end":134,"column_start":12,"column_end":18},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11078036,"byte_end":11078042,"line_start":249,"line_end":249,"column_start":23,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":979},"to":{"krate":21,"index":96}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11078304,"byte_end":11078310,"line_start":261,"line_end":261,"column_start":27,"column_end":33},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":979},"to":{"krate":34,"index":17}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11079081,"byte_end":11079087,"line_start":286,"line_end":286,"column_start":27,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":979},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11079447,"byte_end":11079451,"line_start":301,"line_end":301,"column_start":27,"column_end":31},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":934},"to":{"krate":1,"index":4331}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11079589,"byte_end":11079593,"line_start":307,"line_end":307,"column_start":33,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":934},"to":{"krate":1,"index":4417}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11079800,"byte_end":11079804,"line_start":317,"line_end":317,"column_start":37,"column_end":41},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":934},"to":{"krate":19,"index":309}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11080199,"byte_end":11080203,"line_start":331,"line_end":331,"column_start":43,"column_end":47},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":934},"to":{"krate":19,"index":264}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11080484,"byte_end":11080488,"line_start":341,"line_end":341,"column_start":29,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":934},"to":{"krate":1,"index":4392}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11080705,"byte_end":11080709,"line_start":351,"line_end":351,"column_start":39,"column_end":43},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":934},"to":{"krate":19,"index":393}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11081238,"byte_end":11081242,"line_start":369,"line_end":369,"column_start":33,"column_end":37},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":934},"to":{"krate":0,"index":57}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11081623,"byte_end":11081627,"line_start":382,"line_end":382,"column_start":42,"column_end":46},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":934},"to":{"krate":0,"index":74}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":11082530,"byte_end":11082541,"line_start":414,"line_end":414,"column_start":12,"column_end":23},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":700},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11083675,"byte_end":11083685,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":893},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11084472,"byte_end":11084482,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":893},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11085974,"byte_end":11085984,"line_start":115,"line_end":115,"column_start":23,"column_end":33},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":893},"to":{"krate":21,"index":96}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11086297,"byte_end":11086307,"line_start":128,"line_end":128,"column_start":27,"column_end":37},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":893},"to":{"krate":34,"index":17}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11087397,"byte_end":11087407,"line_start":175,"line_end":175,"column_start":27,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":893},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11088463,"byte_end":11088474,"line_start":215,"line_end":215,"column_start":9,"column_end":20},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":848},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":11088992,"byte_end":11089003,"line_start":241,"line_end":241,"column_start":20,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":848},"to":{"krate":21,"index":96}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11092126,"byte_end":11092137,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":807},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11092460,"byte_end":11092471,"line_start":57,"line_end":57,"column_start":12,"column_end":23},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":807},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11093899,"byte_end":11093910,"line_start":99,"line_end":99,"column_start":27,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":807},"to":{"krate":34,"index":17}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11094621,"byte_end":11094632,"line_start":124,"line_end":124,"column_start":23,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":807},"to":{"krate":21,"index":96}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11094964,"byte_end":11094975,"line_start":141,"line_end":141,"column_start":27,"column_end":38},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":807},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11095818,"byte_end":11095830,"line_start":172,"line_end":172,"column_start":9,"column_end":21},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":770},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11096172,"byte_end":11096184,"line_start":190,"line_end":190,"column_start":24,"column_end":36},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":770},"to":{"krate":34,"index":17}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11098444,"byte_end":11098456,"line_start":261,"line_end":261,"column_start":30,"column_end":42},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":770},"to":{"krate":0,"index":57}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11098792,"byte_end":11098804,"line_start":274,"line_end":274,"column_start":24,"column_end":36},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":770},"to":{"krate":1,"index":4331}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11098939,"byte_end":11098951,"line_start":280,"line_end":280,"column_start":30,"column_end":42},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":770},"to":{"krate":1,"index":4417}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11099158,"byte_end":11099170,"line_start":290,"line_end":290,"column_start":34,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":770},"to":{"krate":19,"index":309}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11099565,"byte_end":11099577,"line_start":304,"line_end":304,"column_start":40,"column_end":52},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":770},"to":{"krate":19,"index":264}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":11099857,"byte_end":11099869,"line_start":314,"line_end":314,"column_start":25,"column_end":37},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":770},"to":{"krate":0,"index":160}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11113809,"byte_end":11113829,"line_start":410,"line_end":410,"column_start":6,"column_end":26},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11117182,"byte_end":11117202,"line_start":518,"line_end":518,"column_start":18,"column_end":38},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":724},"to":{"krate":0,"index":57}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11118089,"byte_end":11118109,"line_start":549,"line_end":549,"column_start":25,"column_end":45},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":724},"to":{"krate":0,"index":74}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11119450,"byte_end":11119470,"line_start":593,"line_end":593,"column_start":18,"column_end":38},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":724},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11119563,"byte_end":11119570,"line_start":601,"line_end":601,"column_start":6,"column_end":13},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11129169,"byte_end":11129176,"line_start":942,"line_end":942,"column_start":18,"column_end":25},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":712},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11129302,"byte_end":11129327,"line_start":950,"line_end":950,"column_start":21,"column_end":46},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":560},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11129485,"byte_end":11129510,"line_start":956,"line_end":956,"column_start":23,"column_end":48},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":560},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":11129645,"byte_end":11129670,"line_start":962,"line_end":962,"column_start":19,"column_end":44},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":560},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11130739,"byte_end":11130749,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":740},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11133291,"byte_end":11133301,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":740},"to":{"krate":0,"index":57}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11136712,"byte_end":11136722,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":740},"to":{"krate":0,"index":74}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11137045,"byte_end":11137055,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":740},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11137360,"byte_end":11137375,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":762},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11137657,"byte_end":11137672,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":762},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":11137789,"byte_end":11137804,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":762},"to":{"krate":1,"index":2336}}]}