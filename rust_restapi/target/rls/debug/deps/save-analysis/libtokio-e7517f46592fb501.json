{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25","program":"/Users/samueljim/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","tokio","--edition=2018","/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"futures-core\"","--cfg","feature=\"io-driver\"","--cfg","feature=\"io-util\"","--cfg","feature=\"iovec\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"libc\"","--cfg","feature=\"memchr\"","--cfg","feature=\"mio\"","--cfg","feature=\"mio-uds\"","--cfg","feature=\"rt-core\"","--cfg","feature=\"rt-util\"","--cfg","feature=\"signal\"","--cfg","feature=\"signal-hook-registry\"","--cfg","feature=\"slab\"","--cfg","feature=\"stream\"","--cfg","feature=\"tcp\"","--cfg","feature=\"time\"","--cfg","feature=\"udp\"","--cfg","feature=\"uds\"","-C","metadata=e7517f46592fb501","-C","extra-filename=-e7517f46592fb501","--out-dir","/Users/samueljim/projects/rust_restapi/target/rls/debug/deps","-L","dependency=/Users/samueljim/projects/rust_restapi/target/rls/debug/deps","--extern","bytes=/Users/samueljim/projects/rust_restapi/target/rls/debug/deps/libbytes-adcd2f3eba735e34.rmeta","--extern","futures_core=/Users/samueljim/projects/rust_restapi/target/rls/debug/deps/libfutures_core-0398f25daad32179.rmeta","--extern","iovec=/Users/samueljim/projects/rust_restapi/target/rls/debug/deps/libiovec-339a0fd2eb5fc39c.rmeta","--extern","lazy_static=/Users/samueljim/projects/rust_restapi/target/rls/debug/deps/liblazy_static-6d32dfff5581f73f.rmeta","--extern","libc=/Users/samueljim/projects/rust_restapi/target/rls/debug/deps/liblibc-aa712a4d3eb2cd17.rmeta","--extern","memchr=/Users/samueljim/projects/rust_restapi/target/rls/debug/deps/libmemchr-8379b090eeab4b60.rmeta","--extern","mio=/Users/samueljim/projects/rust_restapi/target/rls/debug/deps/libmio-5af2bda1de24babc.rmeta","--extern","mio_uds=/Users/samueljim/projects/rust_restapi/target/rls/debug/deps/libmio_uds-19d1e3e00b014f80.rmeta","--extern","pin_project_lite=/Users/samueljim/projects/rust_restapi/target/rls/debug/deps/libpin_project_lite-824919c7ea3f9fd5.rmeta","--extern","signal_hook_registry=/Users/samueljim/projects/rust_restapi/target/rls/debug/deps/libsignal_hook_registry-097f1f746e55129a.rmeta","--extern","slab=/Users/samueljim/projects/rust_restapi/target/rls/debug/deps/libslab-86d49a2737962c41.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/samueljim/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/samueljim/projects/rust_restapi/target/rls/debug/deps/libtokio-e7517f46592fb501.rmeta"},"prelude":{"crate_id":{"name":"tokio","disambiguator":[17437888746749735104,0]},"crate_root":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src","external_crates":[{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8947264418412078715,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","num":2,"id":{"name":"core","disambiguator":[16214626321829081561,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[14004541350322100676,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14513964228136080925,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[18071398054246242872,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9901929154766010641,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[1992023595794582040,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3304853791930394566,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[16365657126326177412,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1295476454418234886,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2217975506173844539,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[10955358760156651288,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[17029152361031566612,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[4374745283242162134,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[5422690374441455074,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[16158478199367640957,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[3064376627870306792,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/try_join.rs","num":18,"id":{"name":"pin_project_lite","disambiguator":[811328755973507244,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","num":19,"id":{"name":"bytes","disambiguator":[12668268473582422806,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","num":20,"id":{"name":"futures_core","disambiguator":[6138211312376724297,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/platform.rs","num":21,"id":{"name":"mio","disambiguator":[2532763512759375244,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/platform.rs","num":22,"id":{"name":"net2","disambiguator":[4807614549696298777,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/ucred.rs","num":23,"id":{"name":"libc","disambiguator":[5872064375414916600,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/platform.rs","num":24,"id":{"name":"cfg_if","disambiguator":[1706843431481481536,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","num":25,"id":{"name":"iovec","disambiguator":[16831157725899775826,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","num":26,"id":{"name":"slab","disambiguator":[13479864244438596374,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/platform.rs","num":27,"id":{"name":"log","disambiguator":[14506920878264654452,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/platform.rs","num":28,"id":{"name":"cfg_if","disambiguator":[18090141088928795859,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/registry.rs","num":29,"id":{"name":"lazy_static","disambiguator":[89345479795873267,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","num":30,"id":{"name":"mio_uds","disambiguator":[12262522182299587937,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_until.rs","num":31,"id":{"name":"memchr","disambiguator":[7183785832843700463,0]}},{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","num":32,"id":{"name":"signal_hook_registry","disambiguator":[11655487536205378902,0]}}],"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":0,"byte_end":15866,"line_start":1,"line_end":437,"column_start":1,"column_end":27}},"imports":[{"kind":"Use","ref_id":{"krate":2,"index":12562},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/support.rs","byte_start":30992,"byte_end":30998,"line_start":6,"line_end":6,"column_start":22,"column_end":28},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":2,"index":43302},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/support.rs","byte_start":31018,"byte_end":31021,"line_start":7,"line_end":7,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":2,"index":45931},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/support.rs","byte_start":31042,"byte_end":31046,"line_start":8,"line_end":8,"column_start":20,"column_end":24},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":115},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/mod.rs","byte_start":31150,"byte_end":31160,"line_start":6,"line_end":6,"column_start":22,"column_end":32},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":95}},{"kind":"Use","ref_id":{"krate":0,"index":1292},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/mod.rs","byte_start":31162,"byte_end":31171,"line_start":6,"line_end":6,"column_start":34,"column_end":43},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":95}},{"kind":"Use","ref_id":{"krate":0,"index":154},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/mod.rs","byte_start":31205,"byte_end":31212,"line_start":9,"line_end":9,"column_start":18,"column_end":25},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":95}},{"kind":"Use","ref_id":{"krate":0,"index":264},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45170,"byte_end":45182,"line_start":188,"line_end":188,"column_start":31,"column_end":43},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":309},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45227,"byte_end":45236,"line_start":191,"line_end":191,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":354},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45281,"byte_end":45290,"line_start":194,"line_end":194,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":393},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45337,"byte_end":45347,"line_start":197,"line_end":197,"column_start":28,"column_end":38},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":1,"index":3793},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45499,"byte_end":45504,"line_start":201,"line_end":201,"column_start":19,"column_end":24},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":1,"index":10297},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45506,"byte_end":45515,"line_start":201,"line_end":201,"column_start":26,"column_end":35},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":1,"index":3791},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45517,"byte_end":45523,"line_start":201,"line_end":201,"column_start":37,"column_end":43},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":1,"index":10430},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45525,"byte_end":45533,"line_start":201,"line_end":201,"column_start":45,"column_end":53},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":1702},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45630,"byte_end":45641,"line_start":207,"line_end":207,"column_start":27,"column_end":38},"alias_span":null,"name":"PollEvented","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":1706},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45692,"byte_end":45704,"line_start":210,"line_end":210,"column_start":27,"column_end":39},"alias_span":null,"name":"Registration","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":1919},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45936,"byte_end":45941,"line_start":226,"line_end":226,"column_start":21,"column_end":26},"alias_span":null,"name":"split","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":1913},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45943,"byte_end":45951,"line_start":226,"line_end":226,"column_start":28,"column_end":36},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":1916},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45953,"byte_end":45962,"line_start":226,"line_end":226,"column_start":38,"column_end":47},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":1921},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46015,"byte_end":46019,"line_start":229,"line_end":229,"column_start":25,"column_end":29},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":3381},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46075,"byte_end":46079,"line_start":233,"line_end":233,"column_start":9,"column_end":13},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":2659},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46081,"byte_end":46087,"line_start":233,"line_end":233,"column_start":15,"column_end":21},"alias_span":null,"name":"duplex","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":3403},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46089,"byte_end":46094,"line_start":233,"line_end":233,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":3642},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46096,"byte_end":46102,"line_start":233,"line_end":233,"column_start":30,"column_end":36},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":3657},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46104,"byte_end":46108,"line_start":233,"line_end":233,"column_start":38,"column_end":42},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":3275},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46110,"byte_end":46125,"line_start":233,"line_end":233,"column_start":44,"column_end":59},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":3283},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46127,"byte_end":46139,"line_start":233,"line_end":233,"column_start":61,"column_end":73},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":2098},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46141,"byte_end":46153,"line_start":233,"line_end":233,"column_start":75,"column_end":87},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":3335},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46155,"byte_end":46168,"line_start":233,"line_end":233,"column_start":89,"column_end":102},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":13213},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46178,"byte_end":46187,"line_start":234,"line_end":234,"column_start":9,"column_end":18},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":13186},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46189,"byte_end":46198,"line_start":234,"line_end":234,"column_start":20,"column_end":29},"alias_span":null,"name":"BufStream","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":13136},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46200,"byte_end":46209,"line_start":234,"line_end":234,"column_start":31,"column_end":40},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":3412},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46211,"byte_end":46223,"line_start":234,"line_end":234,"column_start":42,"column_end":54},"alias_span":null,"name":"DuplexStream","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":3385},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46225,"byte_end":46229,"line_start":234,"line_end":234,"column_start":56,"column_end":60},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":3401},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46231,"byte_end":46236,"line_start":234,"line_end":234,"column_start":62,"column_end":67},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":13048},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46238,"byte_end":46243,"line_start":234,"line_end":234,"column_start":69,"column_end":74},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":3643},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46245,"byte_end":46251,"line_start":234,"line_end":234,"column_start":76,"column_end":82},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":3655},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46253,"byte_end":46257,"line_start":234,"line_end":234,"column_start":84,"column_end":88},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":12214},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46259,"byte_end":46264,"line_start":234,"line_end":234,"column_start":90,"column_end":95},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":12085},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46266,"byte_end":46270,"line_start":234,"line_end":234,"column_start":97,"column_end":101},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":3695},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46321,"byte_end":46334,"line_start":238,"line_end":238,"column_start":24,"column_end":37},"alias_span":null,"name":"stream_reader","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":12167},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46336,"byte_end":46348,"line_start":238,"line_end":238,"column_start":39,"column_end":51},"alias_span":null,"name":"StreamReader","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":3749},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46374,"byte_end":46387,"line_start":239,"line_end":239,"column_start":24,"column_end":37},"alias_span":null,"name":"reader_stream","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":12125},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46389,"byte_end":46401,"line_start":239,"line_end":239,"column_start":39,"column_end":51},"alias_span":null,"name":"ReaderStream","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":472},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72848,"byte_end":72861,"line_start":26,"line_end":26,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":445}},{"kind":"Use","ref_id":{"krate":0,"index":4379},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/mod.rs","byte_start":12835766,"byte_end":12835774,"line_start":7,"line_end":7,"column_start":19,"column_end":27},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":3948}},{"kind":"Use","ref_id":{"krate":0,"index":4385},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/mod.rs","byte_start":12835804,"byte_end":12835812,"line_start":10,"line_end":10,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":3948}},{"kind":"Use","ref_id":{"krate":0,"index":4392},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/mod.rs","byte_start":12835814,"byte_end":12835823,"line_start":10,"line_end":10,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":3948}},{"kind":"Use","ref_id":{"krate":0,"index":4399},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/mod.rs","byte_start":12835866,"byte_end":12835879,"line_start":13,"line_end":13,"column_start":23,"column_end":36},"alias_span":null,"name":"OwnedReadHalf","value":"","parent":{"krate":0,"index":3948}},{"kind":"Use","ref_id":{"krate":0,"index":4403},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/mod.rs","byte_start":12835881,"byte_end":12835895,"line_start":13,"line_end":13,"column_start":38,"column_end":52},"alias_span":null,"name":"OwnedWriteHalf","value":"","parent":{"krate":0,"index":3948}},{"kind":"Use","ref_id":{"krate":0,"index":4408},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/mod.rs","byte_start":12835897,"byte_end":12835909,"line_start":13,"line_end":13,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3948}},{"kind":"Use","ref_id":{"krate":0,"index":4409},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/mod.rs","byte_start":12835897,"byte_end":12835909,"line_start":13,"line_end":13,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3948}},{"kind":"Use","ref_id":{"krate":0,"index":4377},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72992,"byte_end":73003,"line_start":35,"line_end":35,"column_start":28,"column_end":39},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":445}},{"kind":"Use","ref_id":{"krate":0,"index":4414},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":73030,"byte_end":73039,"line_start":36,"line_end":36,"column_start":26,"column_end":35},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":445}},{"kind":"Use","ref_id":{"krate":0,"index":4608},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/mod.rs","byte_start":12896093,"byte_end":12896101,"line_start":7,"line_end":7,"column_start":17,"column_end":25},"alias_span":null,"name":"RecvHalf","value":"","parent":{"krate":0,"index":4416}},{"kind":"Use","ref_id":{"krate":0,"index":4613},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/mod.rs","byte_start":12896103,"byte_end":12896115,"line_start":7,"line_end":7,"column_start":27,"column_end":39},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":4416}},{"kind":"Use","ref_id":{"krate":0,"index":4614},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/mod.rs","byte_start":12896103,"byte_end":12896115,"line_start":7,"line_end":7,"column_start":27,"column_end":39},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":4416}},{"kind":"Use","ref_id":{"krate":0,"index":4603},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/mod.rs","byte_start":12896117,"byte_end":12896125,"line_start":7,"line_end":7,"column_start":41,"column_end":49},"alias_span":null,"name":"SendHalf","value":"","parent":{"krate":0,"index":4416}},{"kind":"Use","ref_id":{"krate":0,"index":4601},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":73097,"byte_end":73106,"line_start":41,"line_end":41,"column_start":26,"column_end":35},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":445}},{"kind":"Use","ref_id":{"krate":0,"index":5258},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/mod.rs","byte_start":12918705,"byte_end":12918713,"line_start":7,"line_end":7,"column_start":17,"column_end":25},"alias_span":null,"name":"RecvHalf","value":"","parent":{"krate":0,"index":4620}},{"kind":"Use","ref_id":{"krate":0,"index":5265},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/mod.rs","byte_start":12918715,"byte_end":12918723,"line_start":7,"line_end":7,"column_start":27,"column_end":35},"alias_span":null,"name":"SendHalf","value":"","parent":{"krate":0,"index":4620}},{"kind":"Use","ref_id":{"krate":0,"index":5277},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/mod.rs","byte_start":12918748,"byte_end":12918761,"line_start":8,"line_end":8,"column_start":23,"column_end":36},"alias_span":null,"name":"OwnedRecvHalf","value":"","parent":{"krate":0,"index":4620}},{"kind":"Use","ref_id":{"krate":0,"index":5272},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/mod.rs","byte_start":12918763,"byte_end":12918776,"line_start":8,"line_end":8,"column_start":38,"column_end":51},"alias_span":null,"name":"OwnedSendHalf","value":"","parent":{"krate":0,"index":4620}},{"kind":"Use","ref_id":{"krate":0,"index":5281},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/mod.rs","byte_start":12918778,"byte_end":12918790,"line_start":8,"line_end":8,"column_start":53,"column_end":65},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":4620}},{"kind":"Use","ref_id":{"krate":0,"index":5282},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/mod.rs","byte_start":12918778,"byte_end":12918790,"line_start":8,"line_end":8,"column_start":53,"column_end":65},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":4620}},{"kind":"Use","ref_id":{"krate":0,"index":5287},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/mod.rs","byte_start":12918284,"byte_end":12918292,"line_start":6,"line_end":6,"column_start":19,"column_end":27},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":4619}},{"kind":"Use","ref_id":{"krate":0,"index":5295},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/mod.rs","byte_start":12918387,"byte_end":12918395,"line_start":12,"line_end":12,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":4619}},{"kind":"Use","ref_id":{"krate":0,"index":5302},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/mod.rs","byte_start":12918397,"byte_end":12918406,"line_start":12,"line_end":12,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":4619}},{"kind":"Use","ref_id":{"krate":0,"index":5309},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/mod.rs","byte_start":12918449,"byte_end":12918462,"line_start":15,"line_end":15,"column_start":23,"column_end":36},"alias_span":null,"name":"OwnedReadHalf","value":"","parent":{"krate":0,"index":4619}},{"kind":"Use","ref_id":{"krate":0,"index":5313},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/mod.rs","byte_start":12918464,"byte_end":12918478,"line_start":15,"line_end":15,"column_start":38,"column_end":52},"alias_span":null,"name":"OwnedWriteHalf","value":"","parent":{"krate":0,"index":4619}},{"kind":"Use","ref_id":{"krate":0,"index":5318},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/mod.rs","byte_start":12918480,"byte_end":12918492,"line_start":15,"line_end":15,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":4619}},{"kind":"Use","ref_id":{"krate":0,"index":5319},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/mod.rs","byte_start":12918480,"byte_end":12918492,"line_start":15,"line_end":15,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":4619}},{"kind":"Use","ref_id":{"krate":0,"index":5326},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/mod.rs","byte_start":12918581,"byte_end":12918586,"line_start":21,"line_end":21,"column_start":16,"column_end":21},"alias_span":null,"name":"UCred","value":"","parent":{"krate":0,"index":4619}},{"kind":"Use","ref_id":{"krate":0,"index":5256},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":73176,"byte_end":73188,"line_start":46,"line_end":46,"column_start":37,"column_end":49},"alias_span":null,"name":"UnixDatagram","value":"","parent":{"krate":0,"index":445}},{"kind":"Use","ref_id":{"krate":0,"index":5293},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":73218,"byte_end":73230,"line_start":47,"line_end":47,"column_start":29,"column_end":41},"alias_span":null,"name":"UnixListener","value":"","parent":{"krate":0,"index":445}},{"kind":"Use","ref_id":{"krate":0,"index":5324},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":73258,"byte_end":73268,"line_start":48,"line_end":48,"column_start":27,"column_end":37},"alias_span":null,"name":"UnixStream","value":"","parent":{"krate":0,"index":445}},{"kind":"Use","ref_id":{"krate":0,"index":243},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106381,"byte_end":106383,"line_start":16,"line_end":16,"column_start":16,"column_end":18},"alias_span":null,"name":"io","value":"","parent":{"krate":0,"index":822}},{"kind":"Use","ref_id":{"krate":0,"index":264},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106392,"byte_end":106404,"line_start":16,"line_end":16,"column_start":27,"column_end":39},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":822}},{"kind":"Use","ref_id":{"krate":0,"index":309},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106406,"byte_end":106415,"line_start":16,"line_end":16,"column_start":41,"column_end":50},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":822}},{"kind":"Use","ref_id":{"krate":0,"index":393},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106417,"byte_end":106427,"line_start":16,"line_end":16,"column_start":52,"column_end":62},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":822}},{"kind":"Use","ref_id":{"krate":0,"index":3275},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106492,"byte_end":106507,"line_start":20,"line_end":20,"column_start":25,"column_end":40},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":822}},{"kind":"Use","ref_id":{"krate":0,"index":3283},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106514,"byte_end":106526,"line_start":20,"line_end":20,"column_start":47,"column_end":59},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":822}},{"kind":"Use","ref_id":{"krate":0,"index":2098},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106533,"byte_end":106545,"line_start":20,"line_end":20,"column_start":66,"column_end":78},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":822}},{"kind":"Use","ref_id":{"krate":0,"index":3335},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106552,"byte_end":106565,"line_start":20,"line_end":20,"column_start":85,"column_end":98},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":822}},{"kind":"Use","ref_id":{"krate":0,"index":892},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114096,"byte_end":114103,"line_start":209,"line_end":209,"column_start":24,"column_end":31},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":836}},{"kind":"Use","ref_id":{"krate":0,"index":6346},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114188,"byte_end":114194,"line_start":215,"line_end":215,"column_start":24,"column_end":30},"alias_span":null,"name":"Handle","value":"","parent":{"krate":0,"index":836}},{"kind":"Use","ref_id":{"krate":0,"index":988},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114196,"byte_end":114211,"line_start":215,"line_end":215,"column_start":32,"column_end":47},"alias_span":null,"name":"TryCurrentError","value":"","parent":{"krate":0,"index":836}},{"kind":"Use","ref_id":{"krate":0,"index":6453},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13035902,"byte_end":13035908,"line_start":47,"line_end":47,"column_start":17,"column_end":23},"alias_span":null,"name":"ctrl_c","value":"","parent":{"krate":0,"index":6444}},{"kind":"Use","ref_id":{"krate":0,"index":6842},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13072812,"byte_end":13072822,"line_start":18,"line_end":18,"column_start":18,"column_end":28},"alias_span":null,"name":"FromStream","value":"","parent":{"krate":0,"index":6702}},{"kind":"Use","ref_id":{"krate":0,"index":6950},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13072852,"byte_end":13072857,"line_start":21,"line_end":21,"column_start":17,"column_end":22},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":6702}},{"kind":"Use","ref_id":{"krate":0,"index":7620},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13072859,"byte_end":13072864,"line_start":21,"line_end":21,"column_start":24,"column_end":29},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":6702}},{"kind":"Use","ref_id":{"krate":0,"index":7117},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13073030,"byte_end":13073034,"line_start":36,"line_end":36,"column_start":16,"column_end":20},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":6702}},{"kind":"Use","ref_id":{"krate":0,"index":7627},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13073036,"byte_end":13073040,"line_start":36,"line_end":36,"column_start":22,"column_end":26},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":6702}},{"kind":"Use","ref_id":{"krate":0,"index":7265},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13073150,"byte_end":13073154,"line_start":48,"line_end":48,"column_start":16,"column_end":20},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":6702}},{"kind":"Use","ref_id":{"krate":0,"index":7641},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13073156,"byte_end":13073160,"line_start":48,"line_end":48,"column_start":22,"column_end":26},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":6702}},{"kind":"Use","ref_id":{"krate":0,"index":7302},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13073195,"byte_end":13073202,"line_start":51,"line_end":51,"column_start":19,"column_end":26},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":6702}},{"kind":"Use","ref_id":{"krate":0,"index":7647},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13073204,"byte_end":13073211,"line_start":51,"line_end":51,"column_start":28,"column_end":35},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":6702}},{"kind":"Use","ref_id":{"krate":0,"index":7654},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13073251,"byte_end":13073260,"line_start":54,"line_end":54,"column_start":21,"column_end":30},"alias_span":null,"name":"StreamMap","value":"","parent":{"krate":0,"index":6702}},{"kind":"Use","ref_id":{"krate":20,"index":96},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13073552,"byte_end":13073558,"line_start":77,"line_end":77,"column_start":23,"column_end":29},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":6702}},{"kind":"Use","ref_id":{"krate":0,"index":6244},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13343442,"byte_end":13343451,"line_start":227,"line_end":227,"column_start":36,"column_end":45},"alias_span":null,"name":"JoinError","value":"","parent":{"krate":0,"index":8873}},{"kind":"Use","ref_id":{"krate":0,"index":6246},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13343453,"byte_end":13343463,"line_start":227,"line_end":227,"column_start":47,"column_end":57},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":8873}},{"kind":"Use","ref_id":{"krate":0,"index":8914},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13343501,"byte_end":13343506,"line_start":230,"line_end":230,"column_start":20,"column_end":25},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":8873}},{"kind":"Use","ref_id":{"krate":0,"index":8916},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13343551,"byte_end":13343560,"line_start":233,"line_end":233,"column_start":24,"column_end":33},"alias_span":null,"name":"yield_now","value":"","parent":{"krate":0,"index":8873}},{"kind":"Use","ref_id":{"krate":0,"index":9134},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13343615,"byte_end":13343626,"line_start":238,"line_end":238,"column_start":21,"column_end":32},"alias_span":null,"name":"spawn_local","value":"","parent":{"krate":0,"index":8873}},{"kind":"Use","ref_id":{"krate":0,"index":9125},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13343628,"byte_end":13343636,"line_start":238,"line_end":238,"column_start":34,"column_end":42},"alias_span":null,"name":"LocalSet","value":"","parent":{"krate":0,"index":8873}},{"kind":"Use","ref_id":{"krate":0,"index":9075},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13343684,"byte_end":13343692,"line_start":241,"line_end":241,"column_start":25,"column_end":33},"alias_span":null,"name":"LocalKey","value":"","parent":{"krate":0,"index":8873}},{"kind":"Use","ref_id":{"krate":0,"index":8914},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":14601,"byte_end":14606,"line_start":390,"line_end":390,"column_start":19,"column_end":24},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9920},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13377357,"byte_end":13377367,"line_start":101,"line_end":101,"column_start":22,"column_end":32},"alias_span":null,"name":"DelayQueue","value":"","parent":{"krate":0,"index":9149}},{"kind":"Use","ref_id":{"krate":0,"index":9295},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13377397,"byte_end":13377406,"line_start":104,"line_end":104,"column_start":17,"column_end":26},"alias_span":null,"name":"delay_for","value":"","parent":{"krate":0,"index":9149}},{"kind":"Use","ref_id":{"krate":0,"index":9294},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13377408,"byte_end":13377419,"line_start":104,"line_end":104,"column_start":28,"column_end":39},"alias_span":null,"name":"delay_until","value":"","parent":{"krate":0,"index":9149}},{"kind":"Use","ref_id":{"krate":0,"index":9962},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13377421,"byte_end":13377426,"line_start":104,"line_end":104,"column_start":41,"column_end":46},"alias_span":null,"name":"Delay","value":"","parent":{"krate":0,"index":9149}},{"kind":"Use","ref_id":{"krate":0,"index":10021},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13377480,"byte_end":13377485,"line_start":109,"line_end":109,"column_start":16,"column_end":21},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":9149}},{"kind":"Use","ref_id":{"krate":0,"index":10041},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13377524,"byte_end":13377531,"line_start":112,"line_end":112,"column_start":24,"column_end":31},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":9149}},{"kind":"Use","ref_id":{"krate":0,"index":9723},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13377567,"byte_end":13377575,"line_start":115,"line_end":115,"column_start":20,"column_end":28},"alias_span":null,"name":"interval","value":"","parent":{"krate":0,"index":9149}},{"kind":"Use","ref_id":{"krate":0,"index":9724},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13377577,"byte_end":13377588,"line_start":115,"line_end":115,"column_start":30,"column_end":41},"alias_span":null,"name":"interval_at","value":"","parent":{"krate":0,"index":9149}},{"kind":"Use","ref_id":{"krate":0,"index":10060},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13377590,"byte_end":13377598,"line_start":115,"line_end":115,"column_start":43,"column_end":51},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":9149}},{"kind":"Use","ref_id":{"krate":0,"index":9777},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13377648,"byte_end":13377655,"line_start":119,"line_end":119,"column_start":19,"column_end":26},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":9149}},{"kind":"Use","ref_id":{"krate":0,"index":9779},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13377657,"byte_end":13377667,"line_start":119,"line_end":119,"column_start":28,"column_end":38},"alias_span":null,"name":"timeout_at","value":"","parent":{"krate":0,"index":9149}},{"kind":"Use","ref_id":{"krate":0,"index":10065},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13377669,"byte_end":13377676,"line_start":119,"line_end":119,"column_start":40,"column_end":47},"alias_span":null,"name":"Elapsed","value":"","parent":{"krate":0,"index":9149}},{"kind":"Use","ref_id":{"krate":0,"index":10550},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13377678,"byte_end":13377685,"line_start":119,"line_end":119,"column_start":49,"column_end":56},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":9149}},{"kind":"Use","ref_id":{"krate":0,"index":10107},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13377744,"byte_end":13377752,"line_start":123,"line_end":123,"column_start":24,"column_end":32},"alias_span":null,"name":"throttle","value":"","parent":{"krate":0,"index":9149}},{"kind":"Use","ref_id":{"krate":0,"index":10502},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13377754,"byte_end":13377762,"line_start":123,"line_end":123,"column_start":34,"column_end":42},"alias_span":null,"name":"Throttle","value":"","parent":{"krate":0,"index":9149}},{"kind":"Use","ref_id":{"krate":2,"index":45779},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13377871,"byte_end":13377879,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":9149}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":0,"byte_end":15866,"line_start":1,"line_end":437,"column_start":1,"column_end":27},"name":"","qualname":"::","value":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":95},{"krate":0,"index":243},{"krate":0,"index":445},{"krate":0,"index":534},{"krate":0,"index":750},{"krate":0,"index":822},{"krate":0,"index":836},{"krate":0,"index":1116},{"krate":0,"index":6444},{"krate":0,"index":6702},{"krate":0,"index":7725},{"krate":0,"index":8873},{"krate":0,"index":8874},{"krate":0,"index":9149},{"krate":0,"index":1137}],"decl_id":null,"docs":" A runtime for writing reliable, asynchronous, and slim applications.","sig":null,"attributes":[{"value":"allow(clippy :: cognitive_complexity, clippy :: large_enum_variant, clippy\n        :: needless_doctest_main, clippy :: match_like_matches_macro, clippy\n        :: stable_sort_primitive)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":56,"byte_end":241,"line_start":2,"line_end":8,"column_start":1,"column_end":3}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":242,"byte_end":348,"line_start":9,"line_end":14,"column_start":1,"column_end":3}},{"value":"/ A runtime for writing reliable, asynchronous, and slim applications.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":557,"byte_end":629,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":630,"byte_end":633,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Tokio is an event-driven, non-blocking I/O platform for writing asynchronous","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":634,"byte_end":714,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ applications with the Rust programming language. At a high level, it","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":715,"byte_end":787,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ provides a few major components:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":788,"byte_end":824,"line_start":26,"line_end":26,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":825,"byte_end":828,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ * Tools for [working with asynchronous tasks][tasks], including","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":829,"byte_end":896,"line_start":28,"line_end":28,"column_start":1,"column_end":68}},{"value":"/   [synchronization primitives and channels][sync] and [timeouts, delays, and","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":897,"byte_end":977,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/   intervals][time].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":978,"byte_end":1001,"line_start":30,"line_end":30,"column_start":1,"column_end":24}},{"value":"/ * APIs for [performing asynchronous I/O][io], including [TCP and UDP][net] sockets,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1002,"byte_end":1089,"line_start":31,"line_end":31,"column_start":1,"column_end":88}},{"value":"/   [filesystem][fs] operations, and [process] and [signal] management.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1090,"byte_end":1163,"line_start":32,"line_end":32,"column_start":1,"column_end":74}},{"value":"/ * A [runtime] for executing asynchronous code, including a task scheduler,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1164,"byte_end":1242,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/   an I/O driver backed by the operating system's event queue (epoll, kqueue,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1243,"byte_end":1323,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/   IOCP, etc...), and a high performance timer.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1324,"byte_end":1374,"line_start":35,"line_end":35,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1375,"byte_end":1378,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Guide level documentation is found on the [website].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1379,"byte_end":1435,"line_start":37,"line_end":37,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1436,"byte_end":1439,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [tasks]: #working-with-tasks","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1440,"byte_end":1472,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"/ [sync]: crate::sync","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1473,"byte_end":1496,"line_start":40,"line_end":40,"column_start":1,"column_end":24}},{"value":"/ [time]: crate::time","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1497,"byte_end":1520,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/ [io]: #asynchronous-io","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1521,"byte_end":1547,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"/ [net]: crate::net","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1548,"byte_end":1569,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/ [fs]: crate::fs","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1570,"byte_end":1589,"line_start":44,"line_end":44,"column_start":1,"column_end":20}},{"value":"/ [process]: crate::process","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1590,"byte_end":1619,"line_start":45,"line_end":45,"column_start":1,"column_end":30}},{"value":"/ [signal]: crate::signal","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1620,"byte_end":1647,"line_start":46,"line_end":46,"column_start":1,"column_end":28}},{"value":"/ [fs]: crate::fs","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1648,"byte_end":1667,"line_start":47,"line_end":47,"column_start":1,"column_end":20}},{"value":"/ [runtime]: crate::runtime","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1668,"byte_end":1697,"line_start":48,"line_end":48,"column_start":1,"column_end":30}},{"value":"/ [website]: https://tokio.rs/tokio/tutorial","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1698,"byte_end":1744,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1745,"byte_end":1748,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # A Tour of Tokio","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1749,"byte_end":1770,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1771,"byte_end":1774,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Tokio consists of a number of modules that provide a range of functionality","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1775,"byte_end":1854,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ essential for implementing asynchronous applications in Rust. In this","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1855,"byte_end":1928,"line_start":54,"line_end":54,"column_start":1,"column_end":74}},{"value":"/ section, we will take a brief tour of Tokio, summarizing the major APIs and","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1929,"byte_end":2008,"line_start":55,"line_end":55,"column_start":1,"column_end":80}},{"value":"/ their uses.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2009,"byte_end":2024,"line_start":56,"line_end":56,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2025,"byte_end":2028,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ The easiest way to get started is to enable all features. Do this by","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2029,"byte_end":2101,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/ enabling the `full` feature flag:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2102,"byte_end":2139,"line_start":59,"line_end":59,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2140,"byte_end":2143,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2144,"byte_end":2155,"line_start":61,"line_end":61,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"0.2\", features = [\"full\"] }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2156,"byte_end":2208,"line_start":62,"line_end":62,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2209,"byte_end":2216,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2217,"byte_end":2220,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ## Feature flags","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2221,"byte_end":2241,"line_start":65,"line_end":65,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2242,"byte_end":2245,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Tokio uses a set of [feature flags] to reduce the amount of compiled code. It","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2246,"byte_end":2327,"line_start":67,"line_end":67,"column_start":1,"column_end":82}},{"value":"/ is possible to just enable certain features over others. By default, Tokio","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2328,"byte_end":2406,"line_start":68,"line_end":68,"column_start":1,"column_end":79}},{"value":"/ does not enable any features but allows one to enable a subset for their use","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2407,"byte_end":2487,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"/ case. Below is a list of the available feature flags. You may also notice","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2488,"byte_end":2565,"line_start":70,"line_end":70,"column_start":1,"column_end":78}},{"value":"/ above each function, struct and trait there is listed one or more feature flags","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2566,"byte_end":2649,"line_start":71,"line_end":71,"column_start":1,"column_end":84}},{"value":"/ that are required for that item to be used. If you are new to Tokio it is","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2650,"byte_end":2727,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"/ recommended that you use the `full` feature flag which will enable all public APIs.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2728,"byte_end":2815,"line_start":73,"line_end":73,"column_start":1,"column_end":88}},{"value":"/ Beware though that this will pull in many extra dependencies that you may not","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2816,"byte_end":2897,"line_start":74,"line_end":74,"column_start":1,"column_end":82}},{"value":"/ need.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2898,"byte_end":2907,"line_start":75,"line_end":75,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2908,"byte_end":2911,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ - `full`: Enables all Tokio public API features listed below.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2912,"byte_end":2977,"line_start":77,"line_end":77,"column_start":1,"column_end":66}},{"value":"/ - `rt-core`: Enables `tokio::spawn` and the basic (single-threaded) scheduler.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2978,"byte_end":3060,"line_start":78,"line_end":78,"column_start":1,"column_end":83}},{"value":"/ - `rt-threaded`: Enables the heavier, multi-threaded, work-stealing scheduler.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3061,"byte_end":3143,"line_start":79,"line_end":79,"column_start":1,"column_end":83}},{"value":"/ - `rt-util`: Enables non-scheduler utilities.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3144,"byte_end":3193,"line_start":80,"line_end":80,"column_start":1,"column_end":50}},{"value":"/ - `io-driver`: Enables the `mio` based IO driver.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3194,"byte_end":3247,"line_start":81,"line_end":81,"column_start":1,"column_end":54}},{"value":"/ - `io-util`: Enables the IO based `Ext` traits.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3248,"byte_end":3299,"line_start":82,"line_end":82,"column_start":1,"column_end":52}},{"value":"/ - `io-std`: Enable `Stdout`, `Stdin` and `Stderr` types.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3300,"byte_end":3360,"line_start":83,"line_end":83,"column_start":1,"column_end":61}},{"value":"/ - `net`: Enables `tokio::net` types such as `TcpStream`, `UnixStream` and `UdpSocket`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3361,"byte_end":3451,"line_start":84,"line_end":84,"column_start":1,"column_end":91}},{"value":"/ - `tcp`: Enables all `tokio::net::tcp` types.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3452,"byte_end":3501,"line_start":85,"line_end":85,"column_start":1,"column_end":50}},{"value":"/ - `udp`: Enables all `tokio::net::udp` types.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3502,"byte_end":3551,"line_start":86,"line_end":86,"column_start":1,"column_end":50}},{"value":"/ - `uds`: Enables all `tokio::net::unix` types.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3552,"byte_end":3602,"line_start":87,"line_end":87,"column_start":1,"column_end":51}},{"value":"/ - `time`: Enables `tokio::time` types and allows the schedulers to enable","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3603,"byte_end":3680,"line_start":88,"line_end":88,"column_start":1,"column_end":78}},{"value":"/ the built in timer.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3681,"byte_end":3704,"line_start":89,"line_end":89,"column_start":1,"column_end":24}},{"value":"/ - `process`: Enables `tokio::process` types.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3705,"byte_end":3753,"line_start":90,"line_end":90,"column_start":1,"column_end":49}},{"value":"/ - `macros`: Enables `#[tokio::main]` and `#[tokio::test]` macros.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3754,"byte_end":3823,"line_start":91,"line_end":91,"column_start":1,"column_end":70}},{"value":"/ - `sync`: Enables all `tokio::sync` types.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3824,"byte_end":3870,"line_start":92,"line_end":92,"column_start":1,"column_end":47}},{"value":"/ - `stream`: Enables optional `Stream` implementations for types within Tokio.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3871,"byte_end":3952,"line_start":93,"line_end":93,"column_start":1,"column_end":82}},{"value":"/ - `signal`: Enables all `tokio::signal` types.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3953,"byte_end":4003,"line_start":94,"line_end":94,"column_start":1,"column_end":51}},{"value":"/ - `fs`: Enables `tokio::fs` types.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4004,"byte_end":4042,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"/ - `dns`: Enables async `tokio::net::ToSocketAddrs`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4043,"byte_end":4098,"line_start":96,"line_end":96,"column_start":1,"column_end":56}},{"value":"/ - `test-util`: Enables testing based infrastructure for the Tokio runtime.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4099,"byte_end":4177,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"/ - `blocking`: Enables `block_in_place` and `spawn_blocking`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4178,"byte_end":4242,"line_start":98,"line_end":98,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4243,"byte_end":4246,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ _Note: `AsyncRead` and `AsyncWrite` traits do not require any features and are","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4247,"byte_end":4329,"line_start":100,"line_end":100,"column_start":1,"column_end":83}},{"value":"/ always available._","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4330,"byte_end":4352,"line_start":101,"line_end":101,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4353,"byte_end":4356,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ ### Internal features","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4357,"byte_end":4382,"line_start":103,"line_end":103,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4383,"byte_end":4386,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ These features do not expose any new API, but influence internal","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4387,"byte_end":4455,"line_start":105,"line_end":105,"column_start":1,"column_end":69}},{"value":"/ implementation aspects of Tokio, and can pull in additional","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4456,"byte_end":4519,"line_start":106,"line_end":106,"column_start":1,"column_end":64}},{"value":"/ dependencies. They are not included in `full`:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4520,"byte_end":4570,"line_start":107,"line_end":107,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4571,"byte_end":4574,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ - `parking_lot`: As a potential optimization, use the _parking_lot_ crate's","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4575,"byte_end":4654,"line_start":109,"line_end":109,"column_start":1,"column_end":80}},{"value":"/ synchronization primitives internally. MSRV may increase according to the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4655,"byte_end":4732,"line_start":110,"line_end":110,"column_start":1,"column_end":78}},{"value":"/ _parking_lot_ release in use.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4733,"byte_end":4766,"line_start":111,"line_end":111,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4767,"byte_end":4770,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4771,"byte_end":4868,"line_start":113,"line_end":113,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4869,"byte_end":4872,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ### Authoring applications","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4873,"byte_end":4903,"line_start":115,"line_end":115,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4904,"byte_end":4907,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ Tokio is great for writing applications and most users in this case shouldn't","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4908,"byte_end":4989,"line_start":117,"line_end":117,"column_start":1,"column_end":82}},{"value":"/ worry too much about what features they should pick. If you're unsure, we suggest","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4990,"byte_end":5075,"line_start":118,"line_end":118,"column_start":1,"column_end":86}},{"value":"/ going with `full` to ensure that you don't run into any road blocks while you're","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5076,"byte_end":5160,"line_start":119,"line_end":119,"column_start":1,"column_end":85}},{"value":"/ building your application.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5161,"byte_end":5191,"line_start":120,"line_end":120,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5192,"byte_end":5195,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5196,"byte_end":5212,"line_start":122,"line_end":122,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5213,"byte_end":5216,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ This example shows the quickest way to get started with Tokio.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5217,"byte_end":5283,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5284,"byte_end":5287,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5288,"byte_end":5299,"line_start":126,"line_end":126,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"0.2\", features = [\"full\"] }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5300,"byte_end":5352,"line_start":127,"line_end":127,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5353,"byte_end":5360,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5361,"byte_end":5364,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ ### Authoring libraries","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5365,"byte_end":5392,"line_start":130,"line_end":130,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5393,"byte_end":5396,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ As a library author your goal should be to provide the lighest weight crate","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5397,"byte_end":5476,"line_start":132,"line_end":132,"column_start":1,"column_end":80}},{"value":"/ that is based on Tokio. To achieve this you should ensure that you only enable","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5477,"byte_end":5559,"line_start":133,"line_end":133,"column_start":1,"column_end":83}},{"value":"/ the features you need. This allows users to pick up your crate without having","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5560,"byte_end":5641,"line_start":134,"line_end":134,"column_start":1,"column_end":82}},{"value":"/ to enable unnecessary features.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5642,"byte_end":5677,"line_start":135,"line_end":135,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5678,"byte_end":5681,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5682,"byte_end":5698,"line_start":137,"line_end":137,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5699,"byte_end":5702,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ This example shows how you may want to import features for a library that just","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5703,"byte_end":5785,"line_start":139,"line_end":139,"column_start":1,"column_end":83}},{"value":"/ needs to `tokio::spawn` and use a `TcpStream`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5786,"byte_end":5836,"line_start":140,"line_end":140,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5837,"byte_end":5840,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5841,"byte_end":5852,"line_start":142,"line_end":142,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"0.2\", features = [\"rt-core\", \"tcp\"] }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5853,"byte_end":5915,"line_start":143,"line_end":143,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5916,"byte_end":5923,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5924,"byte_end":5927,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ## Working With Tasks","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5928,"byte_end":5953,"line_start":146,"line_end":146,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5954,"byte_end":5957,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ Asynchronous programs in Rust are based around lightweight, non-blocking","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5958,"byte_end":6034,"line_start":148,"line_end":148,"column_start":1,"column_end":77}},{"value":"/ units of execution called [_tasks_][tasks]. The [`tokio::task`] module provides","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6035,"byte_end":6118,"line_start":149,"line_end":149,"column_start":1,"column_end":84}},{"value":"/ important tools for working with tasks:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6119,"byte_end":6162,"line_start":150,"line_end":150,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6163,"byte_end":6166,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ * The [`spawn`] function and [`JoinHandle`] type, for scheduling a new task","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6167,"byte_end":6246,"line_start":152,"line_end":152,"column_start":1,"column_end":80}},{"value":"/   on the Tokio runtime and awaiting the output of a spawned task, respectively,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6247,"byte_end":6330,"line_start":153,"line_end":153,"column_start":1,"column_end":84}},{"value":"/ * Functions for [running blocking operations][blocking] in an asynchronous","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6331,"byte_end":6409,"line_start":154,"line_end":154,"column_start":1,"column_end":79}},{"value":"/   task context.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6410,"byte_end":6429,"line_start":155,"line_end":155,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6430,"byte_end":6433,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::task`] module is present only when the \"rt-core\" feature flag","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6434,"byte_end":6512,"line_start":157,"line_end":157,"column_start":1,"column_end":79}},{"value":"/ is enabled.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6513,"byte_end":6528,"line_start":158,"line_end":158,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6529,"byte_end":6532,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ [tasks]: task/index.html#what-are-tasks","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6533,"byte_end":6576,"line_start":160,"line_end":160,"column_start":1,"column_end":44}},{"value":"/ [`tokio::task`]: crate::task","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6577,"byte_end":6609,"line_start":161,"line_end":161,"column_start":1,"column_end":33}},{"value":"/ [`spawn`]: crate::task::spawn()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6610,"byte_end":6645,"line_start":162,"line_end":162,"column_start":1,"column_end":36}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6646,"byte_end":6689,"line_start":163,"line_end":163,"column_start":1,"column_end":44}},{"value":"/ [blocking]: task/index.html#blocking-and-yielding","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6690,"byte_end":6743,"line_start":164,"line_end":164,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6744,"byte_end":6747,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::sync`] module contains synchronization primitives to use when","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6748,"byte_end":6826,"line_start":166,"line_end":166,"column_start":1,"column_end":79}},{"value":"/ needing to communicate or share data. These include:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6827,"byte_end":6883,"line_start":167,"line_end":167,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6884,"byte_end":6887,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ * channels ([`oneshot`], [`mpsc`], and [`watch`]), for sending values","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6888,"byte_end":6961,"line_start":169,"line_end":169,"column_start":1,"column_end":74}},{"value":"/   between tasks,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6962,"byte_end":6982,"line_start":170,"line_end":170,"column_start":1,"column_end":21}},{"value":"/ * a non-blocking [`Mutex`], for controlling access to a shared, mutable","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6983,"byte_end":7058,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/   value,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7059,"byte_end":7071,"line_start":172,"line_end":172,"column_start":1,"column_end":13}},{"value":"/ * an asynchronous [`Barrier`] type, for multiple tasks to synchronize before","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7072,"byte_end":7152,"line_start":173,"line_end":173,"column_start":1,"column_end":81}},{"value":"/   beginning a computation.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7153,"byte_end":7183,"line_start":174,"line_end":174,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7184,"byte_end":7187,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ The `tokio::sync` module is present only when the \"sync\" feature flag is","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7188,"byte_end":7264,"line_start":176,"line_end":176,"column_start":1,"column_end":77}},{"value":"/ enabled.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7265,"byte_end":7277,"line_start":177,"line_end":177,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7278,"byte_end":7281,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ [`tokio::sync`]: crate::sync","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7282,"byte_end":7314,"line_start":179,"line_end":179,"column_start":1,"column_end":33}},{"value":"/ [`Mutex`]: crate::sync::Mutex","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7315,"byte_end":7348,"line_start":180,"line_end":180,"column_start":1,"column_end":34}},{"value":"/ [`Barrier`]: crate::sync::Barrier","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7349,"byte_end":7386,"line_start":181,"line_end":181,"column_start":1,"column_end":38}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7387,"byte_end":7424,"line_start":182,"line_end":182,"column_start":1,"column_end":38}},{"value":"/ [`mpsc`]: crate::sync::mpsc","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7425,"byte_end":7456,"line_start":183,"line_end":183,"column_start":1,"column_end":32}},{"value":"/ [`watch`]: crate::sync::watch","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7457,"byte_end":7490,"line_start":184,"line_end":184,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7491,"byte_end":7494,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::time`] module provides utilities for tracking time and","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7495,"byte_end":7566,"line_start":186,"line_end":186,"column_start":1,"column_end":72}},{"value":"/ scheduling work. This includes functions for setting [timeouts][timeout] for","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7567,"byte_end":7647,"line_start":187,"line_end":187,"column_start":1,"column_end":81}},{"value":"/ tasks, [delaying][delay] work to run in the future, or [repeating an operation at an","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7648,"byte_end":7736,"line_start":188,"line_end":188,"column_start":1,"column_end":89}},{"value":"/ interval][interval].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7737,"byte_end":7761,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7762,"byte_end":7765,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ In order to use `tokio::time`, the \"time\" feature flag must be enabled.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7766,"byte_end":7841,"line_start":191,"line_end":191,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7842,"byte_end":7845,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ [`tokio::time`]: crate::time","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7846,"byte_end":7878,"line_start":193,"line_end":193,"column_start":1,"column_end":33}},{"value":"/ [delay]: crate::time::delay_for()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7879,"byte_end":7916,"line_start":194,"line_end":194,"column_start":1,"column_end":38}},{"value":"/ [interval]: crate::time::interval()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7917,"byte_end":7956,"line_start":195,"line_end":195,"column_start":1,"column_end":40}},{"value":"/ [timeout]: crate::time::timeout()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7957,"byte_end":7994,"line_start":196,"line_end":196,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7995,"byte_end":7998,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ Finally, Tokio provides a _runtime_ for executing asynchronous tasks. Most","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7999,"byte_end":8077,"line_start":198,"line_end":198,"column_start":1,"column_end":79}},{"value":"/ applications can use the [`#[tokio::main]`][main] macro to run their code on the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8078,"byte_end":8162,"line_start":199,"line_end":199,"column_start":1,"column_end":85}},{"value":"/ Tokio runtime. In use-cases where manual control over the runtime is","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8163,"byte_end":8235,"line_start":200,"line_end":200,"column_start":1,"column_end":73}},{"value":"/ required, the [`tokio::runtime`] module provides APIs for configuring and","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8236,"byte_end":8313,"line_start":201,"line_end":201,"column_start":1,"column_end":78}},{"value":"/ managing runtimes.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8314,"byte_end":8336,"line_start":202,"line_end":202,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8337,"byte_end":8340,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ Using the runtime requires the \"rt-core\" or \"rt-threaded\" feature flags, to","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8341,"byte_end":8420,"line_start":204,"line_end":204,"column_start":1,"column_end":80}},{"value":"/ enable the basic [single-threaded scheduler][rt-core] and the [thread-pool","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8421,"byte_end":8499,"line_start":205,"line_end":205,"column_start":1,"column_end":79}},{"value":"/ scheduler][rt-threaded], respectively. See the [`runtime` module","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8500,"byte_end":8568,"line_start":206,"line_end":206,"column_start":1,"column_end":69}},{"value":"/ documentation][rt-features] for details. In addition, the \"macros\" feature","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8569,"byte_end":8647,"line_start":207,"line_end":207,"column_start":1,"column_end":79}},{"value":"/ flag enables the `#[tokio::main]` and `#[tokio::test]` attributes.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8648,"byte_end":8718,"line_start":208,"line_end":208,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8719,"byte_end":8722,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ [main]: attr.main.html","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8723,"byte_end":8749,"line_start":210,"line_end":210,"column_start":1,"column_end":27}},{"value":"/ [`tokio::runtime`]: crate::runtime","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8750,"byte_end":8788,"line_start":211,"line_end":211,"column_start":1,"column_end":39}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8789,"byte_end":8829,"line_start":212,"line_end":212,"column_start":1,"column_end":41}},{"value":"/ [`Runtime`]: crate::runtime::Runtime","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8830,"byte_end":8870,"line_start":213,"line_end":213,"column_start":1,"column_end":41}},{"value":"/ [rt-core]: runtime/index.html#basic-scheduler","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8871,"byte_end":8920,"line_start":214,"line_end":214,"column_start":1,"column_end":50}},{"value":"/ [rt-threaded]: runtime/index.html#threaded-scheduler","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8921,"byte_end":8977,"line_start":215,"line_end":215,"column_start":1,"column_end":57}},{"value":"/ [rt-features]: runtime/index.html#runtime-scheduler","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8978,"byte_end":9033,"line_start":216,"line_end":216,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9034,"byte_end":9037,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## CPU-bound tasks and blocking code","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9038,"byte_end":9078,"line_start":218,"line_end":218,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9079,"byte_end":9082,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ Tokio is able to concurrently run many tasks on a few threads by repeatedly","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9083,"byte_end":9162,"line_start":220,"line_end":220,"column_start":1,"column_end":80}},{"value":"/ swapping the currently running task on each thread. However, this kind of","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9163,"byte_end":9240,"line_start":221,"line_end":221,"column_start":1,"column_end":78}},{"value":"/ swapping can only happen at `.await` points, so code that spends a long time","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9241,"byte_end":9321,"line_start":222,"line_end":222,"column_start":1,"column_end":81}},{"value":"/ without reaching an `.await` will prevent other tasks from running. To","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9322,"byte_end":9396,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/ combat this, Tokio provides two kinds of threads: Core threads and blocking","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9397,"byte_end":9476,"line_start":224,"line_end":224,"column_start":1,"column_end":80}},{"value":"/ threads. The core threads are where all asynchronous code runs, and Tokio","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9477,"byte_end":9554,"line_start":225,"line_end":225,"column_start":1,"column_end":78}},{"value":"/ will by default spawn one for each CPU core. The blocking threads are","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9555,"byte_end":9628,"line_start":226,"line_end":226,"column_start":1,"column_end":74}},{"value":"/ spawned on demand, and can be used to run blocking code that would otherwise","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9629,"byte_end":9709,"line_start":227,"line_end":227,"column_start":1,"column_end":81}},{"value":"/ block other tasks from running. Since it is not possible for Tokio to swap","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9710,"byte_end":9788,"line_start":228,"line_end":228,"column_start":1,"column_end":79}},{"value":"/ out blocking tasks, like it can do with asynchronous code, the upper limit","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9789,"byte_end":9867,"line_start":229,"line_end":229,"column_start":1,"column_end":79}},{"value":"/ on the number of blocking threads is very large. These limits can be","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9868,"byte_end":9940,"line_start":230,"line_end":230,"column_start":1,"column_end":73}},{"value":"/ configured on the [`Builder`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9941,"byte_end":9975,"line_start":231,"line_end":231,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9976,"byte_end":9979,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ To spawn a blocking task, you should use the [`spawn_blocking`] function.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9980,"byte_end":10057,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10058,"byte_end":10061,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10062,"byte_end":10102,"line_start":235,"line_end":235,"column_start":1,"column_end":41}},{"value":"/ [`spawn_blocking`]: crate::task::spawn_blocking()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10103,"byte_end":10156,"line_start":236,"line_end":236,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10157,"byte_end":10160,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10161,"byte_end":10168,"line_start":238,"line_end":238,"column_start":1,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10169,"byte_end":10187,"line_start":239,"line_end":239,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10188,"byte_end":10209,"line_start":240,"line_end":240,"column_start":1,"column_end":22}},{"value":"/     // This is running on a core thread.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10210,"byte_end":10254,"line_start":241,"line_end":241,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10255,"byte_end":10258,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/     let blocking_task = tokio::task::spawn_blocking(|| {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10259,"byte_end":10319,"line_start":243,"line_end":243,"column_start":1,"column_end":61}},{"value":"/         // This is running on a blocking thread.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10320,"byte_end":10372,"line_start":244,"line_end":244,"column_start":1,"column_end":53}},{"value":"/         // Blocking here is ok.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10373,"byte_end":10408,"line_start":245,"line_end":245,"column_start":1,"column_end":36}},{"value":"/     });","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10409,"byte_end":10420,"line_start":246,"line_end":246,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10421,"byte_end":10424,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/     // We can wait for the blocking task like this:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10425,"byte_end":10480,"line_start":248,"line_end":248,"column_start":1,"column_end":56}},{"value":"/     // If the blocking task panics, the unwrap below will propagate the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10481,"byte_end":10556,"line_start":249,"line_end":249,"column_start":1,"column_end":76}},{"value":"/     // panic.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10557,"byte_end":10574,"line_start":250,"line_end":250,"column_start":1,"column_end":18}},{"value":"/     blocking_task.await.unwrap();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10575,"byte_end":10612,"line_start":251,"line_end":251,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10613,"byte_end":10618,"line_start":252,"line_end":252,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10619,"byte_end":10626,"line_start":253,"line_end":253,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10627,"byte_end":10630,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ If your code is CPU-bound and you wish to limit the number of threads used","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10631,"byte_end":10709,"line_start":255,"line_end":255,"column_start":1,"column_end":79}},{"value":"/ to run it, you should run it on another thread pool such as [rayon]. You","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10710,"byte_end":10786,"line_start":256,"line_end":256,"column_start":1,"column_end":77}},{"value":"/ can use an [`oneshot`] channel to send the result back to Tokio when the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10787,"byte_end":10863,"line_start":257,"line_end":257,"column_start":1,"column_end":77}},{"value":"/ rayon task finishes.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10864,"byte_end":10888,"line_start":258,"line_end":258,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10889,"byte_end":10892,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ [rayon]: https://docs.rs/rayon","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10893,"byte_end":10927,"line_start":260,"line_end":260,"column_start":1,"column_end":35}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10928,"byte_end":10965,"line_start":261,"line_end":261,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10966,"byte_end":10969,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Asynchronous IO","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10970,"byte_end":10992,"line_start":263,"line_end":263,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10993,"byte_end":10996,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ As well as scheduling and running tasks, Tokio provides everything you need","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10997,"byte_end":11076,"line_start":265,"line_end":265,"column_start":1,"column_end":80}},{"value":"/ to perform input and output asynchronously.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11077,"byte_end":11124,"line_start":266,"line_end":266,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11125,"byte_end":11128,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::io`] module provides Tokio's asynchronous core I/O primitives,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11129,"byte_end":11208,"line_start":268,"line_end":268,"column_start":1,"column_end":80}},{"value":"/ the [`AsyncRead`], [`AsyncWrite`], and [`AsyncBufRead`] traits. In addition,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11209,"byte_end":11289,"line_start":269,"line_end":269,"column_start":1,"column_end":81}},{"value":"/ when the \"io-util\" feature flag is enabled, it also provides combinators and","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11290,"byte_end":11370,"line_start":270,"line_end":270,"column_start":1,"column_end":81}},{"value":"/ functions for working with these traits, forming as an asynchronous","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11371,"byte_end":11442,"line_start":271,"line_end":271,"column_start":1,"column_end":72}},{"value":"/ counterpart to [`std::io`]. When the \"io-driver\" feature flag is enabled, it","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11443,"byte_end":11523,"line_start":272,"line_end":272,"column_start":1,"column_end":81}},{"value":"/ also provides utilities for library authors implementing I/O resources.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11524,"byte_end":11599,"line_start":273,"line_end":273,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11600,"byte_end":11603,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ Tokio also includes APIs for performing various kinds of I/O and interacting","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11604,"byte_end":11684,"line_start":275,"line_end":275,"column_start":1,"column_end":81}},{"value":"/ with the operating system asynchronously. These include:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11685,"byte_end":11745,"line_start":276,"line_end":276,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11746,"byte_end":11749,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ * [`tokio::net`], which contains non-blocking versions of [TCP], [UDP], and","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11750,"byte_end":11829,"line_start":278,"line_end":278,"column_start":1,"column_end":80}},{"value":"/   [Unix Domain Sockets][UDS] (enabled by the \"net\" feature flag),","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11830,"byte_end":11899,"line_start":279,"line_end":279,"column_start":1,"column_end":70}},{"value":"/ * [`tokio::fs`], similar to [`std::fs`] but for performing filesystem I/O","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11900,"byte_end":11977,"line_start":280,"line_end":280,"column_start":1,"column_end":78}},{"value":"/   asynchronously (enabled by the \"fs\" feature flag),","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11978,"byte_end":12034,"line_start":281,"line_end":281,"column_start":1,"column_end":57}},{"value":"/ * [`tokio::signal`], for asynchronously handling Unix and Windows OS signals","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12035,"byte_end":12115,"line_start":282,"line_end":282,"column_start":1,"column_end":81}},{"value":"/   (enabled by the \"signal\" feature flag),","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12116,"byte_end":12161,"line_start":283,"line_end":283,"column_start":1,"column_end":46}},{"value":"/ * [`tokio::process`], for spawning and managing child processes (enabled by","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12162,"byte_end":12241,"line_start":284,"line_end":284,"column_start":1,"column_end":80}},{"value":"/   the \"process\" feature flag).","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12242,"byte_end":12276,"line_start":285,"line_end":285,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12277,"byte_end":12280,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ [`tokio::io`]: crate::io","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12281,"byte_end":12309,"line_start":287,"line_end":287,"column_start":1,"column_end":29}},{"value":"/ [`AsyncRead`]: crate::io::AsyncRead","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12310,"byte_end":12349,"line_start":288,"line_end":288,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: crate::io::AsyncWrite","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12350,"byte_end":12391,"line_start":289,"line_end":289,"column_start":1,"column_end":42}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12392,"byte_end":12437,"line_start":290,"line_end":290,"column_start":1,"column_end":46}},{"value":"/ [`std::io`]: std::io","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12438,"byte_end":12462,"line_start":291,"line_end":291,"column_start":1,"column_end":25}},{"value":"/ [`tokio::net`]: crate::net","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12463,"byte_end":12493,"line_start":292,"line_end":292,"column_start":1,"column_end":31}},{"value":"/ [TCP]: crate::net::tcp","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12494,"byte_end":12520,"line_start":293,"line_end":293,"column_start":1,"column_end":27}},{"value":"/ [UDP]: crate::net::udp","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12521,"byte_end":12547,"line_start":294,"line_end":294,"column_start":1,"column_end":27}},{"value":"/ [UDS]: crate::net::unix","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12548,"byte_end":12575,"line_start":295,"line_end":295,"column_start":1,"column_end":28}},{"value":"/ [`tokio::fs`]: crate::fs","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12576,"byte_end":12604,"line_start":296,"line_end":296,"column_start":1,"column_end":29}},{"value":"/ [`std::fs`]: std::fs","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12605,"byte_end":12629,"line_start":297,"line_end":297,"column_start":1,"column_end":25}},{"value":"/ [`tokio::signal`]: crate::signal","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12630,"byte_end":12666,"line_start":298,"line_end":298,"column_start":1,"column_end":37}},{"value":"/ [`tokio::process`]: crate::process","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12667,"byte_end":12705,"line_start":299,"line_end":299,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12706,"byte_end":12709,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12710,"byte_end":12724,"line_start":301,"line_end":301,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12725,"byte_end":12728,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ A simple TCP echo server:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12729,"byte_end":12758,"line_start":303,"line_end":303,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12759,"byte_end":12762,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12763,"byte_end":12776,"line_start":305,"line_end":305,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12777,"byte_end":12809,"line_start":306,"line_end":306,"column_start":1,"column_end":33}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12810,"byte_end":12836,"line_start":307,"line_end":307,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12837,"byte_end":12840,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12841,"byte_end":12859,"line_start":309,"line_end":309,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12860,"byte_end":12923,"line_start":310,"line_end":310,"column_start":1,"column_end":64}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12924,"byte_end":12994,"line_start":311,"line_end":311,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12995,"byte_end":12998,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12999,"byte_end":13013,"line_start":313,"line_end":313,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13014,"byte_end":13073,"line_start":314,"line_end":314,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13074,"byte_end":13077,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13078,"byte_end":13115,"line_start":316,"line_end":316,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13116,"byte_end":13156,"line_start":317,"line_end":317,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13157,"byte_end":13160,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13161,"byte_end":13241,"line_start":319,"line_end":319,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13242,"byte_end":13264,"line_start":320,"line_end":320,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13265,"byte_end":13328,"line_start":321,"line_end":321,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13329,"byte_end":13369,"line_start":322,"line_end":322,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13370,"byte_end":13420,"line_start":323,"line_end":323,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13421,"byte_end":13456,"line_start":324,"line_end":324,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13457,"byte_end":13492,"line_start":325,"line_end":325,"column_start":1,"column_end":36}},{"value":"/                         eprintln!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13493,"byte_end":13576,"line_start":326,"line_end":326,"column_start":1,"column_end":84}},{"value":"/                         return;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13577,"byte_end":13612,"line_start":327,"line_end":327,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13613,"byte_end":13638,"line_start":328,"line_end":328,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13639,"byte_end":13661,"line_start":329,"line_end":329,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13662,"byte_end":13665,"line_start":330,"line_end":330,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13666,"byte_end":13708,"line_start":331,"line_end":331,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13709,"byte_end":13781,"line_start":332,"line_end":332,"column_start":1,"column_end":73}},{"value":"/                     eprintln!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13782,"byte_end":13860,"line_start":333,"line_end":333,"column_start":1,"column_end":79}},{"value":"/                     return;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13861,"byte_end":13892,"line_start":334,"line_end":334,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13893,"byte_end":13914,"line_start":335,"line_end":335,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13915,"byte_end":13932,"line_start":336,"line_end":336,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13933,"byte_end":13948,"line_start":337,"line_end":337,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13949,"byte_end":13958,"line_start":338,"line_end":338,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13959,"byte_end":13964,"line_start":339,"line_end":339,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13965,"byte_end":13972,"line_start":340,"line_end":340,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":85}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":14161,"byte_end":14173,"line_start":346,"line_end":346,"column_start":1,"column_end":13}},{"value":"allow(unused_macros)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/mod.rs","byte_start":15903,"byte_end":15923,"line_start":1,"line_end":1,"column_start":36,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":85},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/support.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"support","qualname":"::macros::support","value":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/support.rs","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":92}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":95},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":165},{"krate":0,"index":168},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":240}],"decl_id":null,"docs":" Asynchronous values.\n","sig":null,"attributes":[{"value":"allow(unused_imports, dead_code)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/mod.rs","byte_start":31049,"byte_end":31085,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"/ Asynchronous values.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/mod.rs","byte_start":31087,"byte_end":31111,"line_start":3,"line_end":3,"column_start":1,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1294},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":31576,"byte_end":31582,"line_start":12,"line_end":12,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":1292},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":31541,"byte_end":31571,"line_start":11,"line_end":11,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1297},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":31636,"byte_end":31640,"line_start":14,"line_end":14,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":1292},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":31593,"byte_end":31631,"line_start":13,"line_end":13,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1300},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":31802,"byte_end":31806,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":1292},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":31659,"byte_end":31725,"line_start":15,"line_end":15,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":31730,"byte_end":31797,"line_start":16,"line_end":16,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":1292},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":31512,"byte_end":31521,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> { Future(Fut), Done(Fut::Output), Gone, }","parent":null,"children":[{"krate":0,"index":1294},{"krate":0,"index":1297},{"krate":0,"index":1300}],"decl_id":null,"docs":" A future that may have completed.\n","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":31448,"byte_end":31485,"line_start":8,"line_end":8,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":115},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":31969,"byte_end":31979,"line_start":24,"line_end":24,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":31924,"byte_end":31961,"line_start":23,"line_end":23,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":32382,"byte_end":32392,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":32098,"byte_end":32183,"line_start":29,"line_end":29,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":32188,"byte_end":32259,"line_start":30,"line_end":30,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":32264,"byte_end":32337,"line_start":31,"line_end":31,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":32342,"byte_end":32370,"line_start":32,"line_end":32,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":32770,"byte_end":32781,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempts to take the output of a `MaybeDone` without driving it","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":32649,"byte_end":32716,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ towards completion.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":32721,"byte_end":32744,"line_start":44,"line_end":44,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":32749,"byte_end":32758,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":149},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/poll_fn.rs","byte_start":33993,"byte_end":33999,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":151}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/poll_fn.rs","byte_start":33941,"byte_end":33981,"line_start":8,"line_end":8,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":154},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/poll_fn.rs","byte_start":34129,"byte_end":34136,"line_start":16,"line_end":16,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].\n","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/poll_fn.rs","byte_start":34050,"byte_end":34121,"line_start":15,"line_end":15,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1305},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/ready.rs","byte_start":34901,"byte_end":34906,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ok`](ok()) function.","sig":null,"attributes":[{"value":"/ Future for the [`ok`](ok()) function.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/ready.rs","byte_start":34672,"byte_end":34713,"line_start":5,"line_end":5,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/ready.rs","byte_start":34714,"byte_end":34717,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `pub` in order to use the future as an associated type in a sealed trait.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/ready.rs","byte_start":34718,"byte_end":34795,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"allow(unreachable_pub)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/ready.rs","byte_start":34864,"byte_end":34889,"line_start":10,"line_end":10,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":243},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":283},{"krate":0,"index":286},{"krate":0,"index":330},{"krate":0,"index":333},{"krate":0,"index":370},{"krate":0,"index":373},{"krate":0,"index":429},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":436},{"krate":0,"index":439},{"krate":0,"index":442},{"krate":0,"index":1387},{"krate":0,"index":1536},{"krate":0,"index":1617},{"krate":0,"index":1620},{"krate":0,"index":1673},{"krate":0,"index":1711},{"krate":0,"index":1808},{"krate":0,"index":1809},{"krate":0,"index":1812},{"krate":0,"index":1815},{"krate":0,"index":1818},{"krate":0,"index":1848},{"krate":0,"index":1851},{"krate":0,"index":1852},{"krate":0,"index":1853},{"krate":0,"index":1856},{"krate":0,"index":1859},{"krate":0,"index":1862},{"krate":0,"index":1865},{"krate":0,"index":1868},{"krate":0,"index":1871},{"krate":0,"index":1874},{"krate":0,"index":1877},{"krate":0,"index":1880},{"krate":0,"index":1883},{"krate":0,"index":1886},{"krate":0,"index":1889},{"krate":0,"index":1892},{"krate":0,"index":1895},{"krate":0,"index":1898},{"krate":0,"index":1901},{"krate":0,"index":1904},{"krate":0,"index":1907},{"krate":0,"index":1910},{"krate":0,"index":3934},{"krate":0,"index":3935},{"krate":0,"index":3938},{"krate":0,"index":3941},{"krate":0,"index":3942},{"krate":0,"index":3945}],"decl_id":null,"docs":" Traits, helpers, and type definitions for asynchronous I/O functionality.","sig":null,"attributes":[{"value":"/ Traits, helpers, and type definitions for asynchronous I/O functionality.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":37661,"byte_end":37738,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":37739,"byte_end":37742,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module is the asynchronous version of `std::io`. Primarily, it","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":37743,"byte_end":37814,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"/ defines two traits, [`AsyncRead`] and [`AsyncWrite`], which are asynchronous","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":37815,"byte_end":37895,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ versions of the [`Read`] and [`Write`] traits in the standard library.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":37896,"byte_end":37970,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":37971,"byte_end":37974,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # AsyncRead and AsyncWrite","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":37975,"byte_end":38005,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38006,"byte_end":38009,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Like the standard library's [`Read`] and [`Write`] traits, [`AsyncRead`] and","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38010,"byte_end":38090,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`] provide the most general interface for reading and writing","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38091,"byte_end":38168,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ input and output. Unlike the standard library's traits, however, they are","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38169,"byte_end":38246,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ _asynchronous_ &mdash; meaning that reading from or writing to a `tokio::io`","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38247,"byte_end":38327,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ type will _yield_ to the Tokio scheduler when IO is not ready, rather than","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38328,"byte_end":38406,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ blocking. This allows other tasks to run while waiting on IO.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38407,"byte_end":38472,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38473,"byte_end":38476,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Another difference is that `AsyncRead` and `AsyncWrite` only contain","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38477,"byte_end":38549,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ core methods needed to provide asynchronous reading and writing","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38550,"byte_end":38617,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"/ functionality. Instead, utility methods are defined in the [`AsyncReadExt`]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38618,"byte_end":38697,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ and [`AsyncWriteExt`] extension traits. These traits are automatically","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38698,"byte_end":38772,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ implemented for all values that implement `AsyncRead` and `AsyncWrite`","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38773,"byte_end":38847,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ respectively.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38848,"byte_end":38865,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38866,"byte_end":38869,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ End users will rarely interact directly with `AsyncRead` and","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38870,"byte_end":38934,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `AsyncWrite`. Instead, they will use the async functions defined in the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38935,"byte_end":39010,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ extension traits. Library authors are expected to implement `AsyncRead`","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39011,"byte_end":39086,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ and `AsyncWrite` in order to provide types that behave like byte streams.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39087,"byte_end":39164,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39165,"byte_end":39168,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Even with these differences, Tokio's `AsyncRead` and `AsyncWrite` traits","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39169,"byte_end":39245,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ can be used in almost exactly the same manner as the standard library's","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39246,"byte_end":39321,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ `Read` and `Write`. Most types in the standard library that implement `Read`","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39322,"byte_end":39402,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ and `Write` have asynchronous equivalents in `tokio` that implement","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39403,"byte_end":39474,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/ `AsyncRead` and `AsyncWrite`, such as [`File`] and [`TcpStream`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39475,"byte_end":39544,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39545,"byte_end":39548,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ For example, the standard library documentation introduces `Read` by","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39549,"byte_end":39621,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ [demonstrating][std_example] reading some bytes from a [`std::fs::File`]. We","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39622,"byte_end":39702,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ can do the same with [`tokio::fs::File`][`File`]:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39703,"byte_end":39756,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39757,"byte_end":39760,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39761,"byte_end":39774,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncReadExt};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39775,"byte_end":39815,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39816,"byte_end":39840,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39841,"byte_end":39844,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39845,"byte_end":39863,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39864,"byte_end":39903,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/     let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39904,"byte_end":39953,"line_start":46,"line_end":46,"column_start":1,"column_end":50}},{"value":"/     let mut buffer = [0; 10];","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39954,"byte_end":39987,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39988,"byte_end":39991,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     // read up to 10 bytes","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39992,"byte_end":40022,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/     let n = f.read(&mut buffer).await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40023,"byte_end":40066,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40067,"byte_end":40070,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/     println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40071,"byte_end":40121,"line_start":52,"line_end":52,"column_start":1,"column_end":51}},{"value":"/     Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40122,"byte_end":40136,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40137,"byte_end":40142,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40143,"byte_end":40150,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40151,"byte_end":40154,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`File`]: crate::fs::File","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40155,"byte_end":40184,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"/ [`TcpStream`]: crate::net::TcpStream","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40185,"byte_end":40225,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/ [`std::fs::File`]: std::fs::File","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40226,"byte_end":40262,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/ [std_example]: std::io#read-and-write","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40263,"byte_end":40304,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40305,"byte_end":40308,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Buffered Readers and Writers","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40309,"byte_end":40344,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40345,"byte_end":40348,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40349,"byte_end":40430,"line_start":64,"line_end":64,"column_start":1,"column_end":82}},{"value":"/ making near-constant calls to the operating system. To help with this,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40431,"byte_end":40505,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"/ `std::io` comes with [support for _buffered_ readers and writers][stdbuf],","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40506,"byte_end":40584,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ and therefore, `tokio::io` does as well.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40585,"byte_end":40629,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40630,"byte_end":40633,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Tokio provides an async version of the [`std::io::BufRead`] trait,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40634,"byte_end":40704,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"/ [`AsyncBufRead`]; and async [`BufReader`] and [`BufWriter`] structs, which","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40705,"byte_end":40783,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ wrap readers and writers. These wrappers use a buffer, reducing the number","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40784,"byte_end":40862,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ of calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40863,"byte_end":40940,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40941,"byte_end":40944,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ For example, [`BufReader`] works with the [`AsyncBufRead`] trait to add","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40945,"byte_end":41020,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ extra methods to any async reader:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41021,"byte_end":41059,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41060,"byte_end":41063,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41064,"byte_end":41077,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufReader, AsyncBufReadExt};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41078,"byte_end":41132,"line_start":78,"line_end":78,"column_start":1,"column_end":55}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41133,"byte_end":41157,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41158,"byte_end":41161,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41162,"byte_end":41180,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41181,"byte_end":41220,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"/     let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41221,"byte_end":41266,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/     let mut reader = BufReader::new(f);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41267,"byte_end":41310,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/     let mut buffer = String::new();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41311,"byte_end":41350,"line_start":85,"line_end":85,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41351,"byte_end":41354,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     // read a line into buffer","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41355,"byte_end":41389,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"/     reader.read_line(&mut buffer).await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41390,"byte_end":41435,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41436,"byte_end":41439,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/     println!(\"{}\", buffer);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41440,"byte_end":41471,"line_start":90,"line_end":90,"column_start":1,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41472,"byte_end":41486,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41487,"byte_end":41492,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41493,"byte_end":41500,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41501,"byte_end":41504,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41505,"byte_end":41586,"line_start":95,"line_end":95,"column_start":1,"column_end":82}},{"value":"/ to [`write`](crate::io::AsyncWriteExt::write). However, you **must** flush","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41587,"byte_end":41665,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"/ [`BufWriter`] to ensure that any buffered data is written.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41666,"byte_end":41728,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41729,"byte_end":41732,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41733,"byte_end":41746,"line_start":99,"line_end":99,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufWriter, AsyncWriteExt};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41747,"byte_end":41799,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41800,"byte_end":41824,"line_start":101,"line_end":101,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41825,"byte_end":41828,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41829,"byte_end":41847,"line_start":103,"line_end":103,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41848,"byte_end":41887,"line_start":104,"line_end":104,"column_start":1,"column_end":40}},{"value":"/     let f = File::create(\"foo.txt\").await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41888,"byte_end":41935,"line_start":105,"line_end":105,"column_start":1,"column_end":48}},{"value":"/     {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41936,"byte_end":41945,"line_start":106,"line_end":106,"column_start":1,"column_end":10}},{"value":"/         let mut writer = BufWriter::new(f);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41946,"byte_end":41993,"line_start":107,"line_end":107,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41994,"byte_end":41997,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/         // Write a byte to the buffer.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41998,"byte_end":42040,"line_start":109,"line_end":109,"column_start":1,"column_end":43}},{"value":"/         writer.write(&[42u8]).await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42041,"byte_end":42082,"line_start":110,"line_end":110,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42083,"byte_end":42086,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/         // Flush the buffer before it goes out of scope.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42087,"byte_end":42147,"line_start":112,"line_end":112,"column_start":1,"column_end":61}},{"value":"/         writer.flush().await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42148,"byte_end":42182,"line_start":113,"line_end":113,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42183,"byte_end":42186,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/     } // Unless flushed or shut down, the contents of the buffer is discarded on drop.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42187,"byte_end":42277,"line_start":115,"line_end":115,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42278,"byte_end":42281,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42282,"byte_end":42296,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42297,"byte_end":42302,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42303,"byte_end":42310,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42311,"byte_end":42314,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ [stdbuf]: std::io#bufreader-and-bufwriter","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42315,"byte_end":42360,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42361,"byte_end":42403,"line_start":122,"line_end":122,"column_start":1,"column_end":43}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42404,"byte_end":42449,"line_start":123,"line_end":123,"column_start":1,"column_end":46}},{"value":"/ [`BufReader`]: crate::io::BufReader","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42450,"byte_end":42489,"line_start":124,"line_end":124,"column_start":1,"column_end":40}},{"value":"/ [`BufWriter`]: crate::io::BufWriter","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42490,"byte_end":42529,"line_start":125,"line_end":125,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42530,"byte_end":42533,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ ## Implementing AsyncRead and AsyncWrite","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42534,"byte_end":42578,"line_start":127,"line_end":127,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42579,"byte_end":42582,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ Because they are traits, we can implement [`AsyncRead`] and [`AsyncWrite`] for","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42583,"byte_end":42665,"line_start":129,"line_end":129,"column_start":1,"column_end":83}},{"value":"/ our own types, as well. Note that these traits must only be implemented for","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42666,"byte_end":42745,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"/ non-blocking I/O types that integrate with the futures type system. In","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42746,"byte_end":42820,"line_start":131,"line_end":131,"column_start":1,"column_end":75}},{"value":"/ other words, these types must never block the thread, and instead the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42821,"byte_end":42894,"line_start":132,"line_end":132,"column_start":1,"column_end":74}},{"value":"/ current task is notified when the I/O resource is ready.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42895,"byte_end":42955,"line_start":133,"line_end":133,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42956,"byte_end":42959,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ## Conversion to and from Sink/Stream","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42960,"byte_end":43001,"line_start":135,"line_end":135,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43002,"byte_end":43005,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ It is often convenient to encapsulate the reading and writing of","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43006,"byte_end":43074,"line_start":137,"line_end":137,"column_start":1,"column_end":69}},{"value":"/ bytes and instead work with a [`Sink`] or [`Stream`] of some data","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43075,"byte_end":43144,"line_start":138,"line_end":138,"column_start":1,"column_end":70}},{"value":"/ type that is encoded as bytes and/or decoded from bytes. Tokio","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43145,"byte_end":43211,"line_start":139,"line_end":139,"column_start":1,"column_end":67}},{"value":"/ provides some utility traits in the [tokio-util] crate that","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43212,"byte_end":43275,"line_start":140,"line_end":140,"column_start":1,"column_end":64}},{"value":"/ abstract the asynchronous buffering that is required and allows","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43276,"byte_end":43343,"line_start":141,"line_end":141,"column_start":1,"column_end":68}},{"value":"/ you to write [`Encoder`] and [`Decoder`] functions working with a","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43344,"byte_end":43413,"line_start":142,"line_end":142,"column_start":1,"column_end":70}},{"value":"/ buffer of bytes, and then use that [\"codec\"] to transform anything","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43414,"byte_end":43484,"line_start":143,"line_end":143,"column_start":1,"column_end":71}},{"value":"/ that implements [`AsyncRead`] and [`AsyncWrite`] into a `Sink`/`Stream` of","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43485,"byte_end":43563,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ your structured data.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43564,"byte_end":43589,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43590,"byte_end":43593,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ [tokio-util]: https://docs.rs/tokio-util/0.3/tokio_util/codec/index.html","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43594,"byte_end":43670,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43671,"byte_end":43674,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ # Standard input and output","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43675,"byte_end":43706,"line_start":149,"line_end":149,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43707,"byte_end":43710,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ Tokio provides asynchronous APIs to standard [input], [output], and [error].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43711,"byte_end":43791,"line_start":151,"line_end":151,"column_start":1,"column_end":81}},{"value":"/ These APIs are very similar to the ones provided by `std`, but they also","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43792,"byte_end":43868,"line_start":152,"line_end":152,"column_start":1,"column_end":77}},{"value":"/ implement [`AsyncRead`] and [`AsyncWrite`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43869,"byte_end":43916,"line_start":153,"line_end":153,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43917,"byte_end":43920,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ Note that the standard input / output APIs  **must** be used from the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43921,"byte_end":43994,"line_start":155,"line_end":155,"column_start":1,"column_end":74}},{"value":"/ context of the Tokio runtime, as they require Tokio-specific features to","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43995,"byte_end":44071,"line_start":156,"line_end":156,"column_start":1,"column_end":77}},{"value":"/ function. Calling these functions outside of a Tokio runtime will panic.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44072,"byte_end":44148,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44149,"byte_end":44152,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [input]: fn@stdin","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44153,"byte_end":44174,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"/ [output]: fn@stdout","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44175,"byte_end":44198,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/ [error]: fn@stderr","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44199,"byte_end":44221,"line_start":161,"line_end":161,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44222,"byte_end":44225,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ # `std` re-exports","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44226,"byte_end":44248,"line_start":163,"line_end":163,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44249,"byte_end":44252,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ Additionally, [`Error`], [`ErrorKind`], [`Result`], and [`SeekFrom`] are","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44253,"byte_end":44329,"line_start":165,"line_end":165,"column_start":1,"column_end":77}},{"value":"/ re-exported from `std::io` for ease of use.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44330,"byte_end":44377,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44378,"byte_end":44381,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: trait@AsyncRead","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44382,"byte_end":44416,"line_start":168,"line_end":168,"column_start":1,"column_end":35}},{"value":"/ [`AsyncWrite`]: trait@AsyncWrite","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44417,"byte_end":44453,"line_start":169,"line_end":169,"column_start":1,"column_end":37}},{"value":"/ [`AsyncReadExt`]: trait@AsyncReadExt","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44454,"byte_end":44494,"line_start":170,"line_end":170,"column_start":1,"column_end":41}},{"value":"/ [`AsyncWriteExt`]: trait@AsyncWriteExt","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44495,"byte_end":44537,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"/ [\"codec\"]: https://docs.rs/tokio-util/0.3/tokio_util/codec/index.html","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44538,"byte_end":44611,"line_start":172,"line_end":172,"column_start":1,"column_end":74}},{"value":"/ [`Encoder`]: https://docs.rs/tokio-util/0.3/tokio_util/codec/trait.Encoder.html","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44612,"byte_end":44695,"line_start":173,"line_end":173,"column_start":1,"column_end":84}},{"value":"/ [`Decoder`]: https://docs.rs/tokio-util/0.3/tokio_util/codec/trait.Decoder.html","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44696,"byte_end":44779,"line_start":174,"line_end":174,"column_start":1,"column_end":84}},{"value":"/ [`Error`]: struct@Error","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44780,"byte_end":44807,"line_start":175,"line_end":175,"column_start":1,"column_end":28}},{"value":"/ [`ErrorKind`]: enum@ErrorKind","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44808,"byte_end":44841,"line_start":176,"line_end":176,"column_start":1,"column_end":34}},{"value":"/ [`Result`]: type@Result","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44842,"byte_end":44869,"line_start":177,"line_end":177,"column_start":1,"column_end":28}},{"value":"/ [`Read`]: std::io::Read","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44870,"byte_end":44897,"line_start":178,"line_end":178,"column_start":1,"column_end":28}},{"value":"/ [`SeekFrom`]: enum@SeekFrom","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44898,"byte_end":44929,"line_start":179,"line_end":179,"column_start":1,"column_end":32}},{"value":"/ [`Sink`]: https://docs.rs/futures/0.3/futures/sink/trait.Sink.html","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44930,"byte_end":45000,"line_start":180,"line_end":180,"column_start":1,"column_end":71}},{"value":"/ [`Stream`]: crate::stream::Stream","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45001,"byte_end":45038,"line_start":181,"line_end":181,"column_start":1,"column_end":38}},{"value":"/ [`Write`]: std::io::Write","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45039,"byte_end":45068,"line_start":182,"line_end":182,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":264},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47533,"byte_end":47545,"line_start":23,"line_end":23,"column_start":11,"column_end":23},"name":"AsyncBufRead","qualname":"::io::async_buf_read::AsyncBufRead","value":"AsyncBufRead: AsyncRead","parent":null,"children":[{"krate":0,"index":265},{"krate":0,"index":266}],"decl_id":null,"docs":" Reads bytes asynchronously.","sig":null,"attributes":[{"value":"/ Reads bytes asynchronously.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":46856,"byte_end":46887,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":46888,"byte_end":46891,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to [`std::io::BufRead`], but integrates with","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":46892,"byte_end":46964,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ the asynchronous task system. In particular, the [`poll_fill_buf`] method,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":46965,"byte_end":47043,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ unlike [`BufRead::fill_buf`], will automatically queue the current task for wakeup","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47044,"byte_end":47130,"line_start":12,"line_end":12,"column_start":1,"column_end":87}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47131,"byte_end":47208,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47209,"byte_end":47220,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47221,"byte_end":47224,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncBufRead` values are provided by","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47225,"byte_end":47293,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ [`AsyncBufReadExt`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47294,"byte_end":47318,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47319,"byte_end":47322,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47323,"byte_end":47365,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47366,"byte_end":47416,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"/ [`BufRead::fill_buf`]: std::io::BufRead::fill_buf","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47417,"byte_end":47470,"line_start":21,"line_end":21,"column_start":1,"column_end":54}},{"value":"/ [`AsyncBufReadExt`]: crate::io::AsyncBufReadExt","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47471,"byte_end":47522,"line_start":22,"line_end":22,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48643,"byte_end":48656,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"::io::async_buf_read::AsyncBufRead::poll_fill_buf","value":"pub fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<io::Result<&[u8]>>","parent":{"krate":0,"index":264},"children":[],"decl_id":null,"docs":" Attempts to return the contents of the internal buffer, filling it with more data\n from the inner reader if it is empty.","sig":null,"attributes":[{"value":"/ Attempts to return the contents of the internal buffer, filling it with more data","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47563,"byte_end":47648,"line_start":24,"line_end":24,"column_start":5,"column_end":90}},{"value":"/ from the inner reader if it is empty.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47653,"byte_end":47694,"line_start":25,"line_end":25,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47699,"byte_end":47702,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(buf))`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47707,"byte_end":47754,"line_start":27,"line_end":27,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47759,"byte_end":47762,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47767,"byte_end":47826,"line_start":29,"line_end":29,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47831,"byte_end":47889,"line_start":30,"line_end":30,"column_start":5,"column_end":63}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47894,"byte_end":47975,"line_start":31,"line_end":31,"column_start":5,"column_end":86}},{"value":"/ readable or is closed.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47980,"byte_end":48006,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48011,"byte_end":48014,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48019,"byte_end":48090,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ [`consume`] method to function properly. When calling this","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48095,"byte_end":48157,"line_start":35,"line_end":35,"column_start":5,"column_end":67}},{"value":"/ method, none of the contents will be \"read\" in the sense that later","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48162,"byte_end":48233,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ calling [`poll_read`] may return the same contents. As such, [`consume`] must","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48238,"byte_end":48319,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ be called with the number of bytes that are consumed from this buffer to","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48324,"byte_end":48400,"line_start":38,"line_end":38,"column_start":5,"column_end":81}},{"value":"/ ensure that the bytes are never returned twice.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48405,"byte_end":48456,"line_start":39,"line_end":39,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48461,"byte_end":48464,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ An empty buffer returned indicates that the stream has reached EOF.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48469,"byte_end":48540,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48545,"byte_end":48548,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48553,"byte_end":48592,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ [`consume`]: AsyncBufRead::consume","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48597,"byte_end":48635,"line_start":44,"line_end":44,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":49559,"byte_end":49566,"line_start":62,"line_end":62,"column_start":8,"column_end":15},"name":"consume","qualname":"::io::async_buf_read::AsyncBufRead::consume","value":"pub fn consume(Pin<&mut Self>, usize)","parent":{"krate":0,"index":264},"children":[],"decl_id":null,"docs":" Tells this buffer that `amt` bytes have been consumed from the buffer,\n so they should no longer be returned in calls to [`poll_read`].","sig":null,"attributes":[{"value":"/ Tells this buffer that `amt` bytes have been consumed from the buffer,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48734,"byte_end":48808,"line_start":47,"line_end":47,"column_start":5,"column_end":79}},{"value":"/ so they should no longer be returned in calls to [`poll_read`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48813,"byte_end":48880,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48885,"byte_end":48888,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48893,"byte_end":48964,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/ [`poll_fill_buf`] method to function properly. This function does","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48969,"byte_end":49038,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ not perform any I/O, it simply informs this object that some amount of","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":49043,"byte_end":49117,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ its buffer, returned from [`poll_fill_buf`], has been consumed and should","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":49122,"byte_end":49199,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/ no longer be returned. As such, this function may do odd things if","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":49204,"byte_end":49274,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ [`poll_fill_buf`] isn't called before calling it.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":49279,"byte_end":49332,"line_start":55,"line_end":55,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":49337,"byte_end":49340,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The `amt` must be `<=` the number of bytes in the buffer returned by","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":49345,"byte_end":49417,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ [`poll_fill_buf`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":49422,"byte_end":49444,"line_start":58,"line_end":58,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":49449,"byte_end":49452,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":49457,"byte_end":49496,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":49501,"byte_end":49551,"line_start":61,"line_end":61,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":309},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52800,"byte_end":52809,"line_start":43,"line_end":43,"column_start":11,"column_end":20},"name":"AsyncRead","qualname":"::io::async_read::AsyncRead","value":"AsyncRead","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"/ Reads bytes from a source.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51219,"byte_end":51249,"line_start":8,"line_end":8,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51250,"byte_end":51253,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Read`] trait, but integrates with","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51254,"byte_end":51333,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ the asynchronous task system. In particular, the [`poll_read`] method,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51334,"byte_end":51408,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ unlike [`Read::read`], will automatically queue the current task for wakeup","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51409,"byte_end":51488,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51489,"byte_end":51566,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51567,"byte_end":51578,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51579,"byte_end":51582,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the `poll_read` function will return one of","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51583,"byte_end":51660,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ the following:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51661,"byte_end":51679,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51680,"byte_end":51683,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately read","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51684,"byte_end":51760,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/   and placed into the output buffer, where `n` == 0 implies that EOF has","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51761,"byte_end":51837,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/   been reached.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51838,"byte_end":51857,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51858,"byte_end":51861,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was read into the buffer","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51862,"byte_end":51927,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/   provided. The I/O object is not currently readable but may become readable","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51928,"byte_end":52008,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52009,"byte_end":52088,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is readable**. This means that like","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52089,"byte_end":52162,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52163,"byte_end":52236,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/   readable again.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52237,"byte_end":52258,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52259,"byte_end":52262,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52263,"byte_end":52347,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52348,"byte_end":52372,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52373,"byte_end":52376,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the `read` method only works in the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52377,"byte_end":52450,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52451,"byte_end":52530,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52531,"byte_end":52534,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncRead` values are provided by","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52535,"byte_end":52600,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ [`AsyncReadExt`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52601,"byte_end":52622,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52623,"byte_end":52626,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52627,"byte_end":52666,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ [`std::io::Read`]: std::io::Read","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52667,"byte_end":52703,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/ [`Read::read`]: std::io::Read::read","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52704,"byte_end":52743,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/ [`AsyncReadExt`]: crate::io::AsyncReadExt","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52744,"byte_end":52789,"line_start":42,"line_end":42,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54453,"byte_end":54481,"line_start":77,"line_end":77,"column_start":15,"column_end":43},"name":"prepare_uninitialized_buffer","qualname":"::io::async_read::AsyncRead::prepare_uninitialized_buffer","value":"pub unsafe fn prepare_uninitialized_buffer(&Self, &mut [MaybeUninit<u8>])\n-> bool","parent":{"krate":0,"index":309},"children":[],"decl_id":null,"docs":" Prepares an uninitialized buffer to be safe to pass to `read`. Returns\n `true` if the supplied buffer was zeroed out.","sig":null,"attributes":[{"value":"/ Prepares an uninitialized buffer to be safe to pass to `read`. Returns","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52816,"byte_end":52890,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ `true` if the supplied buffer was zeroed out.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52895,"byte_end":52944,"line_start":45,"line_end":45,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52949,"byte_end":52952,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ While it would be highly unusual, implementations of [`io::Read`] are","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52957,"byte_end":53030,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ able to read data from the buffer passed as an argument. Because of","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53035,"byte_end":53106,"line_start":48,"line_end":48,"column_start":5,"column_end":76}},{"value":"/ this, the buffer passed to [`io::Read`] must be initialized memory. In","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53111,"byte_end":53185,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ situations where large numbers of buffers are used, constantly having to","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53190,"byte_end":53266,"line_start":50,"line_end":50,"column_start":5,"column_end":81}},{"value":"/ zero out buffers can be expensive.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53271,"byte_end":53309,"line_start":51,"line_end":51,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53314,"byte_end":53317,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This function does any necessary work to prepare an uninitialized buffer","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53322,"byte_end":53398,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/ to be safe to pass to `read`. If `read` guarantees to never attempt to","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53403,"byte_end":53477,"line_start":54,"line_end":54,"column_start":5,"column_end":79}},{"value":"/ read data out of the supplied buffer, then `prepare_uninitialized_buffer`","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53482,"byte_end":53559,"line_start":55,"line_end":55,"column_start":5,"column_end":82}},{"value":"/ doesn't need to do any work.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53564,"byte_end":53596,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53601,"byte_end":53604,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ If this function returns `true`, then the memory has been zeroed out.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53609,"byte_end":53682,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/ This allows implementations of `AsyncRead` which are composed of","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53687,"byte_end":53755,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/ multiple subimplementations to efficiently implement","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53760,"byte_end":53816,"line_start":60,"line_end":60,"column_start":5,"column_end":61}},{"value":"/ `prepare_uninitialized_buffer`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53821,"byte_end":53856,"line_start":61,"line_end":61,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53861,"byte_end":53864,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function isn't actually `unsafe` to call but `unsafe` to implement.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53869,"byte_end":53945,"line_start":63,"line_end":63,"column_start":5,"column_end":81}},{"value":"/ The implementer must ensure that either the whole `buf` has been zeroed","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53950,"byte_end":54025,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ or `poll_read_buf()` overwrites the buffer without reading it and returns","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54030,"byte_end":54107,"line_start":65,"line_end":65,"column_start":5,"column_end":82}},{"value":"/ correct value.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54112,"byte_end":54130,"line_start":66,"line_end":66,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54135,"byte_end":54138,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This function is called from [`poll_read_buf`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54143,"byte_end":54194,"line_start":68,"line_end":68,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54199,"byte_end":54202,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54207,"byte_end":54219,"line_start":70,"line_end":70,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54224,"byte_end":54227,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Implementations that return `false` must never read from data slices","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54232,"byte_end":54304,"line_start":72,"line_end":72,"column_start":5,"column_end":77}},{"value":"/ that they did not write to.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54309,"byte_end":54340,"line_start":73,"line_end":73,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54345,"byte_end":54348,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ [`io::Read`]: std::io::Read","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54353,"byte_end":54384,"line_start":75,"line_end":75,"column_start":5,"column_end":36}},{"value":"/ [`poll_read_buf`]: method@Self::poll_read_buf","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54389,"byte_end":54438,"line_start":76,"line_end":76,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54994,"byte_end":55003,"line_start":93,"line_end":93,"column_start":8,"column_end":17},"name":"poll_read","qualname":"::io::async_read::AsyncRead::poll_read","value":"pub fn poll_read(Pin<&mut Self>, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":0,"index":309},"children":[],"decl_id":null,"docs":" Attempts to read from the `AsyncRead` into `buf`.","sig":null,"attributes":[{"value":"/ Attempts to read from the `AsyncRead` into `buf`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54624,"byte_end":54677,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54682,"byte_end":54685,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_read))`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54690,"byte_end":54748,"line_start":87,"line_end":87,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54753,"byte_end":54756,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54761,"byte_end":54820,"line_start":89,"line_end":89,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54825,"byte_end":54883,"line_start":90,"line_end":90,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54888,"byte_end":54955,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/ readable or is closed.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54960,"byte_end":54986,"line_start":92,"line_end":92,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":55464,"byte_end":55477,"line_start":105,"line_end":105,"column_start":8,"column_end":21},"name":"poll_read_buf","qualname":"::io::async_read::AsyncRead::poll_read_buf","value":"pub fn poll_read_buf<B: BufMut>(Pin<&mut Self>, &mut Context, &mut B)\n-> Poll<io::Result<usize>> where Self: Sized","parent":{"krate":0,"index":309},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified `BufMut`, returning\n how many bytes were read.","sig":null,"attributes":[{"value":"/ Pulls some bytes from this source into the specified `BufMut`, returning","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":55128,"byte_end":55204,"line_start":99,"line_end":99,"column_start":5,"column_end":81}},{"value":"/ how many bytes were read.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":55209,"byte_end":55238,"line_start":100,"line_end":100,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":55243,"byte_end":55246,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ The `buf` provided will have bytes read into it and the internal cursor","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":55251,"byte_end":55326,"line_start":102,"line_end":102,"column_start":5,"column_end":80}},{"value":"/ will be advanced if any bytes were read. Note that this method typically","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":55331,"byte_end":55407,"line_start":103,"line_end":103,"column_start":5,"column_end":81}},{"value":"/ will not reallocate the buffer provided.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":55412,"byte_end":55456,"line_start":104,"line_end":104,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":354},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58632,"byte_end":58641,"line_start":18,"line_end":18,"column_start":11,"column_end":20},"name":"AsyncSeek","qualname":"::io::async_seek::AsyncSeek","value":"AsyncSeek","parent":null,"children":[{"krate":0,"index":355},{"krate":0,"index":356}],"decl_id":null,"docs":" Seek bytes asynchronously.","sig":null,"attributes":[{"value":"/ Seek bytes asynchronously.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58150,"byte_end":58180,"line_start":6,"line_end":6,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58181,"byte_end":58184,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Seek`] trait, but integrates","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58185,"byte_end":58259,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ with the asynchronous task system. In particular, the `start_seek`","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58260,"byte_end":58330,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ method, unlike [`Seek::seek`], will not block the calling thread.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58331,"byte_end":58400,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58401,"byte_end":58404,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncSeek` values are provided by","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58405,"byte_end":58470,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/ [`AsyncSeekExt`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58471,"byte_end":58492,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58493,"byte_end":58496,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Seek`]: std::io::Seek","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58497,"byte_end":58533,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ [`Seek::seek`]: std::io::Seek::seek()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58534,"byte_end":58575,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/ [`AsyncSeekExt`]: crate::io::AsyncSeekExt","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58576,"byte_end":58621,"line_start":17,"line_end":17,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58979,"byte_end":58989,"line_start":26,"line_end":26,"column_start":8,"column_end":18},"name":"start_seek","qualname":"::io::async_seek::AsyncSeek::start_seek","value":"pub fn start_seek(Pin<&mut Self>, &mut Context, SeekFrom)\n-> Poll<io::Result<()>>","parent":{"krate":0,"index":354},"children":[],"decl_id":null,"docs":" Attempts to seek to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Attempts to seek to an offset, in bytes, in a stream.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58648,"byte_end":58705,"line_start":19,"line_end":19,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58710,"byte_end":58713,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ A seek beyond the end of a stream is allowed, but behavior is defined","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58718,"byte_end":58791,"line_start":21,"line_end":21,"column_start":5,"column_end":78}},{"value":"/ by the implementation.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58796,"byte_end":58822,"line_start":22,"line_end":22,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58827,"byte_end":58830,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ If this function returns successfully, then the job has been submitted.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58835,"byte_end":58910,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/ To find out when it completes, call `poll_complete`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58915,"byte_end":58971,"line_start":25,"line_end":25,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":59572,"byte_end":59585,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"::io::async_seek::AsyncSeek::poll_complete","value":"pub fn poll_complete(Pin<&mut Self>, &mut Context) -> Poll<io::Result<u64>>","parent":{"krate":0,"index":354},"children":[],"decl_id":null,"docs":" Waits for a seek operation to complete.","sig":null,"attributes":[{"value":"/ Waits for a seek operation to complete.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":59115,"byte_end":59158,"line_start":32,"line_end":32,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":59163,"byte_end":59166,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ If the seek operation completed successfully,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":59171,"byte_end":59220,"line_start":34,"line_end":34,"column_start":5,"column_end":54}},{"value":"/ this method returns the new position from the start of the stream.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":59225,"byte_end":59295,"line_start":35,"line_end":35,"column_start":5,"column_end":75}},{"value":"/ That position can be used later with [`SeekFrom::Start`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":59300,"byte_end":59361,"line_start":36,"line_end":36,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":59366,"byte_end":59369,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":59374,"byte_end":59386,"line_start":38,"line_end":38,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":59391,"byte_end":59394,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Seeking to a negative offset is considered an error.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":59399,"byte_end":59455,"line_start":40,"line_end":40,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":59460,"byte_end":59463,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":59468,"byte_end":59480,"line_start":42,"line_end":42,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":59485,"byte_end":59488,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Calling this method without calling `start_seek` first is an error.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":59493,"byte_end":59564,"line_start":44,"line_end":44,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":393},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63088,"byte_end":63098,"line_start":46,"line_end":46,"column_start":11,"column_end":21},"name":"AsyncWrite","qualname":"::io::async_write::AsyncWrite","value":"AsyncWrite","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397}],"decl_id":null,"docs":" Writes bytes asynchronously.","sig":null,"attributes":[{"value":"/ Writes bytes asynchronously.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61225,"byte_end":61257,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61258,"byte_end":61261,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The trait inherits from [`std::io::Write`] and indicates that an I/O object is","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61262,"byte_end":61344,"line_start":9,"line_end":9,"column_start":1,"column_end":83}},{"value":"/ **nonblocking**. All non-blocking I/O objects must return an error when","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61345,"byte_end":61420,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ bytes cannot be written instead of blocking the current thread.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61421,"byte_end":61488,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61489,"byte_end":61492,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the [`poll_write`] function will return one of","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61493,"byte_end":61573,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ the following:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61574,"byte_end":61592,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61593,"byte_end":61596,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61597,"byte_end":61668,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/   written.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61669,"byte_end":61683,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61684,"byte_end":61687,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was written from the buffer","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61688,"byte_end":61756,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/   provided. The I/O object is not currently writable but may become writable","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61757,"byte_end":61837,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61838,"byte_end":61917,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is writable**. This means that like","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61918,"byte_end":61991,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61992,"byte_end":62065,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/   writable again.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62066,"byte_end":62087,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62088,"byte_end":62091,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62092,"byte_end":62176,"line_start":26,"line_end":26,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62177,"byte_end":62201,"line_start":27,"line_end":27,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62202,"byte_end":62205,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the [`write`][stdwrite] method only works in","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62206,"byte_end":62288,"line_start":29,"line_end":29,"column_start":1,"column_end":83}},{"value":"/ the context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62289,"byte_end":62372,"line_start":30,"line_end":30,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62373,"byte_end":62376,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Note that this trait also represents that the  [`Write::flush`][stdflush] method","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62377,"byte_end":62461,"line_start":32,"line_end":32,"column_start":1,"column_end":85}},{"value":"/ works very similarly to the `write` method, notably that `Ok(())` means that the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62462,"byte_end":62546,"line_start":33,"line_end":33,"column_start":1,"column_end":85}},{"value":"/ writer has successfully been flushed, a \"would block\" error means that the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62547,"byte_end":62625,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ current task is ready to receive a notification when flushing can make more","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62626,"byte_end":62705,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/ progress, and otherwise normal errors can happen as well.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62706,"byte_end":62767,"line_start":36,"line_end":36,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62768,"byte_end":62771,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncWrite` values are provided by","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62772,"byte_end":62838,"line_start":38,"line_end":38,"column_start":1,"column_end":67}},{"value":"/ [`AsyncWriteExt`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62839,"byte_end":62861,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62862,"byte_end":62865,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Write`]: std::io::Write","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62866,"byte_end":62904,"line_start":41,"line_end":41,"column_start":1,"column_end":39}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62905,"byte_end":62949,"line_start":42,"line_end":42,"column_start":1,"column_end":45}},{"value":"/ [stdwrite]: std::io::Write::write()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62950,"byte_end":62989,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ [stdflush]: std::io::Write::flush()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62990,"byte_end":63029,"line_start":44,"line_end":44,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWriteExt`]: crate::io::AsyncWriteExt","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63030,"byte_end":63077,"line_start":45,"line_end":45,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63482,"byte_end":63492,"line_start":55,"line_end":55,"column_start":8,"column_end":18},"name":"poll_write","qualname":"::io::async_write::AsyncWrite::poll_write","value":"pub fn poll_write(Pin<&mut Self>, &mut Context, &[u8])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `buf` into the object.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63105,"byte_end":63159,"line_start":47,"line_end":47,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63164,"byte_end":63167,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63172,"byte_end":63233,"line_start":49,"line_end":49,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63238,"byte_end":63241,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63246,"byte_end":63308,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63313,"byte_end":63371,"line_start":52,"line_end":52,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63376,"byte_end":63443,"line_start":53,"line_end":53,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63448,"byte_end":63474,"line_start":54,"line_end":54,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64033,"byte_end":64043,"line_start":70,"line_end":70,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"::io::async_write::AsyncWrite::poll_flush","value":"pub fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Attempts to flush the object, ensuring that any buffered data reach\n their destination.","sig":null,"attributes":[{"value":"/ Attempts to flush the object, ensuring that any buffered data reach","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63620,"byte_end":63691,"line_start":61,"line_end":61,"column_start":5,"column_end":76}},{"value":"/ their destination.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63696,"byte_end":63718,"line_start":62,"line_end":62,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63723,"byte_end":63726,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63731,"byte_end":63777,"line_start":64,"line_end":64,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63782,"byte_end":63785,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ If flushing cannot immediately complete, this method returns","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63790,"byte_end":63854,"line_start":66,"line_end":66,"column_start":5,"column_end":69}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63859,"byte_end":63917,"line_start":67,"line_end":67,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object can make","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63922,"byte_end":63990,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/ progress towards flushing.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63995,"byte_end":64025,"line_start":69,"line_end":69,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":67329,"byte_end":67342,"line_start":130,"line_end":130,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"::io::async_write::AsyncWrite::poll_shutdown","value":"pub fn poll_shutdown(Pin<&mut Self>, &mut Context)\n-> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Initiates or attempts to shut down this writer, returning success when\n the I/O connection has completely shut down.","sig":null,"attributes":[{"value":"/ Initiates or attempts to shut down this writer, returning success when","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64125,"byte_end":64199,"line_start":72,"line_end":72,"column_start":5,"column_end":79}},{"value":"/ the I/O connection has completely shut down.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64204,"byte_end":64252,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64257,"byte_end":64260,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This method is intended to be used for asynchronous shutdown of I/O","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64265,"byte_end":64336,"line_start":75,"line_end":75,"column_start":5,"column_end":76}},{"value":"/ connections. For example this is suitable for implementing shutdown of a","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64341,"byte_end":64417,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ TLS connection or calling `TcpStream::shutdown` on a proxied connection.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64422,"byte_end":64498,"line_start":77,"line_end":77,"column_start":5,"column_end":81}},{"value":"/ Protocols sometimes need to flush out final pieces of data or otherwise","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64503,"byte_end":64578,"line_start":78,"line_end":78,"column_start":5,"column_end":80}},{"value":"/ perform a graceful shutdown handshake, reading/writing more data as","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64583,"byte_end":64654,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/ appropriate. This method is the hook for such protocols to implement the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64659,"byte_end":64735,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ graceful shutdown logic.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64740,"byte_end":64768,"line_start":81,"line_end":81,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64773,"byte_end":64776,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This `shutdown` method is required by implementers of the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64781,"byte_end":64842,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/ `AsyncWrite` trait. Wrappers typically just want to proxy this call","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64847,"byte_end":64918,"line_start":84,"line_end":84,"column_start":5,"column_end":76}},{"value":"/ through to the wrapped type, and base types will typically implement","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64923,"byte_end":64995,"line_start":85,"line_end":85,"column_start":5,"column_end":77}},{"value":"/ shutdown logic here or just return `Ok(().into())`. Note that if you're","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65000,"byte_end":65075,"line_start":86,"line_end":86,"column_start":5,"column_end":80}},{"value":"/ wrapping an underlying `AsyncWrite` a call to `shutdown` implies that","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65080,"byte_end":65153,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ transitively the entire stream has been shut down. After your wrapper's","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65158,"byte_end":65233,"line_start":88,"line_end":88,"column_start":5,"column_end":80}},{"value":"/ shutdown logic has been executed you should shut down the underlying","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65238,"byte_end":65310,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65315,"byte_end":65326,"line_start":90,"line_end":90,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65331,"byte_end":65334,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Invocation of a `shutdown` implies an invocation of `flush`. Once this","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65339,"byte_end":65413,"line_start":92,"line_end":92,"column_start":5,"column_end":79}},{"value":"/ method returns `Ready` it implies that a flush successfully happened","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65418,"byte_end":65490,"line_start":93,"line_end":93,"column_start":5,"column_end":77}},{"value":"/ before the shutdown happened. That is, callers don't need to call","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65495,"byte_end":65564,"line_start":94,"line_end":94,"column_start":5,"column_end":74}},{"value":"/ `flush` before calling `shutdown`. They can rely that by calling","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65569,"byte_end":65637,"line_start":95,"line_end":95,"column_start":5,"column_end":73}},{"value":"/ `shutdown` any pending buffered data will be written out.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65642,"byte_end":65703,"line_start":96,"line_end":96,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65708,"byte_end":65711,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65716,"byte_end":65734,"line_start":98,"line_end":98,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65739,"byte_end":65742,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This function returns a `Poll<io::Result<()>>` classified as such:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65747,"byte_end":65817,"line_start":100,"line_end":100,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65822,"byte_end":65825,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(()))` - indicates that the connection was","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65830,"byte_end":65893,"line_start":102,"line_end":102,"column_start":5,"column_end":68}},{"value":"/   successfully shut down and is now safe to deallocate/drop/close","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65898,"byte_end":65967,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/   resources associated with it. This method means that the current task","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65972,"byte_end":66047,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/   will no longer receive any notifications due to this method and the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66052,"byte_end":66125,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/   I/O object itself is likely no longer usable.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66130,"byte_end":66181,"line_start":106,"line_end":106,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66186,"byte_end":66189,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` - indicates that shutdown is initiated but could","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66194,"byte_end":66264,"line_start":108,"line_end":108,"column_start":5,"column_end":75}},{"value":"/   not complete just yet. This may mean that more I/O needs to happen to","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66269,"byte_end":66344,"line_start":109,"line_end":109,"column_start":5,"column_end":80}},{"value":"/   continue this shutdown operation. The current task is scheduled to","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66349,"byte_end":66421,"line_start":110,"line_end":110,"column_start":5,"column_end":77}},{"value":"/   receive a notification when it's otherwise ready to continue the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66426,"byte_end":66496,"line_start":111,"line_end":111,"column_start":5,"column_end":75}},{"value":"/   shutdown operation. When woken up this method should be called again.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66501,"byte_end":66576,"line_start":112,"line_end":112,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66581,"byte_end":66584,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(e))` - indicates a fatal error has happened with shutdown,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66589,"byte_end":66670,"line_start":114,"line_end":114,"column_start":5,"column_end":86}},{"value":"/   indicating that the shutdown operation did not complete successfully.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66675,"byte_end":66750,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/   This typically means that the I/O object is no longer usable.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66755,"byte_end":66822,"line_start":116,"line_end":116,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66827,"byte_end":66830,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66835,"byte_end":66847,"line_start":118,"line_end":118,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66852,"byte_end":66855,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This function can return normal I/O errors through `Err`, described","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66860,"byte_end":66931,"line_start":120,"line_end":120,"column_start":5,"column_end":76}},{"value":"/ above. Additionally this method may also render the underlying","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66936,"byte_end":67002,"line_start":121,"line_end":121,"column_start":5,"column_end":71}},{"value":"/ `Write::write` method no longer usable (e.g. will return errors in the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":67007,"byte_end":67081,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/ future). It's recommended that once `shutdown` is called the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":67086,"byte_end":67150,"line_start":123,"line_end":123,"column_start":5,"column_end":69}},{"value":"/ `write` method is no longer called.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":67155,"byte_end":67194,"line_start":124,"line_end":124,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":67199,"byte_end":67202,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":67207,"byte_end":67219,"line_start":126,"line_end":126,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":67224,"byte_end":67227,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a future's","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":67232,"byte_end":67307,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/ task.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":67312,"byte_end":67321,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":67630,"byte_end":67644,"line_start":136,"line_end":136,"column_start":8,"column_end":22},"name":"poll_write_buf","qualname":"::io::async_write::AsyncWrite::poll_write_buf","value":"pub fn poll_write_buf<B: Buf>(Pin<&mut Self>, &mut Context, &mut B)\n-> Poll<Result<usize, io::Error>> where Self: Sized","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Writes a `Buf` into this value, returning how many bytes were written.","sig":null,"attributes":[{"value":"/ Writes a `Buf` into this value, returning how many bytes were written.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":67424,"byte_end":67498,"line_start":132,"line_end":132,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":67503,"byte_end":67506,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Note that this method will advance the `buf` provided automatically by","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":67511,"byte_end":67585,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/ the number of bytes written.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":67590,"byte_end":67622,"line_start":135,"line_end":135,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1702},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12627005,"byte_end":12627016,"line_start":104,"line_end":104,"column_start":16,"column_end":27},"name":"PollEvented","qualname":"::io::poll_evented::PollEvented","value":"PollEvented {  }","parent":null,"children":[{"krate":0,"index":1704},{"krate":0,"index":1705}],"decl_id":null,"docs":" Associates an I/O resource that implements the [`std::io::Read`] and/or\n [`std::io::Write`] traits with the reactor that drives it.","sig":null,"attributes":[{"value":"cfg(feature = \"io-driver\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19308,"byte_end":19337,"line_start":131,"line_end":131,"column_start":13,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1592},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12629262,"byte_end":12629265,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"new","qualname":"<PollEvented<E>>::new","value":"pub fn new(E) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollEvented` associated with the default reactor.","sig":null,"attributes":[{"value":"/ Creates a new `PollEvented` associated with the default reactor.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12628840,"byte_end":12628908,"line_start":168,"line_end":168,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12628913,"byte_end":12628916,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12628921,"byte_end":12628933,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12628938,"byte_end":12628941,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12628946,"byte_end":12629006,"line_start":172,"line_end":172,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12629011,"byte_end":12629014,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12629019,"byte_end":12629089,"line_start":174,"line_end":174,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12629094,"byte_end":12629167,"line_start":175,"line_end":175,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12629172,"byte_end":12629250,"line_start":176,"line_end":176,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1593},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12630469,"byte_end":12630483,"line_start":205,"line_end":205,"column_start":12,"column_end":26},"name":"new_with_ready","qualname":"<PollEvented<E>>::new_with_ready","value":"pub fn new_with_ready(E, mio::Ready) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollEvented` associated with the default reactor, for specific `mio::Ready`\n state. `new_with_ready` should be used over `new` when you need control over the readiness\n state, such as when a file descriptor only allows reads. This does not add `hup` or `error`\n so if you are interested in those states, you will need to add them to the readiness state\n passed to this function.","sig":null,"attributes":[{"value":"/ Creates a new `PollEvented` associated with the default reactor, for specific `mio::Ready`","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12629365,"byte_end":12629459,"line_start":181,"line_end":181,"column_start":5,"column_end":99}},{"value":"/ state. `new_with_ready` should be used over `new` when you need control over the readiness","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12629464,"byte_end":12629558,"line_start":182,"line_end":182,"column_start":5,"column_end":99}},{"value":"/ state, such as when a file descriptor only allows reads. This does not add `hup` or `error`","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12629563,"byte_end":12629658,"line_start":183,"line_end":183,"column_start":5,"column_end":100}},{"value":"/ so if you are interested in those states, you will need to add them to the readiness state","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12629663,"byte_end":12629757,"line_start":184,"line_end":184,"column_start":5,"column_end":99}},{"value":"/ passed to this function.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12629762,"byte_end":12629790,"line_start":185,"line_end":185,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12629795,"byte_end":12629798,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ An example to listen to read only","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12629803,"byte_end":12629840,"line_start":187,"line_end":187,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12629845,"byte_end":12629848,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12629853,"byte_end":12629864,"line_start":189,"line_end":189,"column_start":5,"column_end":16}},{"value":"/ ##[cfg(unix)]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12629869,"byte_end":12629886,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/     mio::Ready::from_usize(","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12629891,"byte_end":12629922,"line_start":191,"line_end":191,"column_start":5,"column_end":36}},{"value":"/         mio::Ready::readable().as_usize()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12629927,"byte_end":12629972,"line_start":192,"line_end":192,"column_start":5,"column_end":50}},{"value":"/         | mio::unix::UnixReady::error().as_usize()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12629977,"byte_end":12630031,"line_start":193,"line_end":193,"column_start":5,"column_end":59}},{"value":"/         | mio::unix::UnixReady::hup().as_usize()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12630036,"byte_end":12630088,"line_start":194,"line_end":194,"column_start":5,"column_end":57}},{"value":"/     );","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12630093,"byte_end":12630103,"line_start":195,"line_end":195,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12630108,"byte_end":12630115,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12630120,"byte_end":12630123,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12630128,"byte_end":12630140,"line_start":198,"line_end":198,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12630145,"byte_end":12630148,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12630153,"byte_end":12630213,"line_start":200,"line_end":200,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12630218,"byte_end":12630221,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12630226,"byte_end":12630296,"line_start":202,"line_end":202,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12630301,"byte_end":12630374,"line_start":203,"line_end":203,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12630379,"byte_end":12630457,"line_start":204,"line_end":204,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1594},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12630961,"byte_end":12630968,"line_start":219,"line_end":219,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<PollEvented<E>>::get_ref","value":"pub fn get_ref(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the underlying I/O object this readiness\n stream is wrapping.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the underlying I/O object this readiness","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12630847,"byte_end":12630921,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ stream is wrapping.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12630926,"byte_end":12630949,"line_start":218,"line_end":218,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1595},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12631144,"byte_end":12631151,"line_start":225,"line_end":225,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<PollEvented<E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O object this readiness\n stream is wrapping.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O object this readiness","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12631029,"byte_end":12631104,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/ stream is wrapping.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12631109,"byte_end":12631132,"line_start":224,"line_end":224,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1596},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12631687,"byte_end":12631697,"line_start":237,"line_end":237,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollEvented<E>>::into_inner","value":"pub fn into_inner(Self) -> io::Result<E>","parent":null,"children":[],"decl_id":null,"docs":" Consumes self, returning the inner I/O object","sig":null,"attributes":[{"value":"/ Consumes self, returning the inner I/O object","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12631220,"byte_end":12631269,"line_start":229,"line_end":229,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12631274,"byte_end":12631277,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ This function will deregister the I/O resource from the reactor before","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12631282,"byte_end":12631356,"line_start":231,"line_end":231,"column_start":5,"column_end":79}},{"value":"/ returning. If the deregistration operation fails, an error is returned.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12631361,"byte_end":12631436,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12631441,"byte_end":12631444,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Note that deregistering does not guarantee that the I/O resource can be","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12631449,"byte_end":12631524,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ registered with a different reactor. Some I/O resource types can only be","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12631529,"byte_end":12631605,"line_start":235,"line_end":235,"column_start":5,"column_end":81}},{"value":"/ associated with a single reactor instance for their lifetime.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12631610,"byte_end":12631675,"line_start":236,"line_end":236,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1597},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12632854,"byte_end":12632869,"line_start":269,"line_end":269,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<PollEvented<E>>::poll_read_ready","value":"pub fn poll_read_ready(&Self, &mut Context, mio::Ready)\n-> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Checks the I/O resource's read readiness state.","sig":null,"attributes":[{"value":"/ Checks the I/O resource's read readiness state.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12631845,"byte_end":12631896,"line_start":243,"line_end":243,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12631901,"byte_end":12631904,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ The mask argument allows specifying what readiness to notify on. This","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12631909,"byte_end":12631982,"line_start":245,"line_end":245,"column_start":5,"column_end":78}},{"value":"/ can be any value, including platform specific readiness, **except**","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12631987,"byte_end":12632058,"line_start":246,"line_end":246,"column_start":5,"column_end":76}},{"value":"/ `writable`. HUP is always implicitly included on platforms that support","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12632063,"byte_end":12632138,"line_start":247,"line_end":247,"column_start":5,"column_end":80}},{"value":"/ it.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12632143,"byte_end":12632150,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12632155,"byte_end":12632158,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ If the resource is not ready for a read then `Poll::Pending` is returned","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12632163,"byte_end":12632239,"line_start":250,"line_end":250,"column_start":5,"column_end":81}},{"value":"/ and the current task is notified once a new event is received.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12632244,"byte_end":12632310,"line_start":251,"line_end":251,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12632315,"byte_end":12632318,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ The I/O resource will remain in a read-ready state until readiness is","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12632323,"byte_end":12632396,"line_start":253,"line_end":253,"column_start":5,"column_end":78}},{"value":"/ cleared by calling [`clear_read_ready`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12632401,"byte_end":12632445,"line_start":254,"line_end":254,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12632450,"byte_end":12632453,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ [`clear_read_ready`]: method@Self::clear_read_ready","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12632458,"byte_end":12632513,"line_start":256,"line_end":256,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12632518,"byte_end":12632521,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12632526,"byte_end":12632538,"line_start":258,"line_end":258,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12632543,"byte_end":12632546,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12632551,"byte_end":12632579,"line_start":260,"line_end":260,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12632584,"byte_end":12632587,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ * `ready` includes writable.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12632592,"byte_end":12632624,"line_start":262,"line_end":262,"column_start":5,"column_end":37}},{"value":"/ * called from outside of a task context.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12632629,"byte_end":12632673,"line_start":263,"line_end":263,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12632678,"byte_end":12632681,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12632686,"byte_end":12632699,"line_start":265,"line_end":265,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12632704,"byte_end":12632707,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ This method may not be called concurrently. It takes `&self` to allow","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12632712,"byte_end":12632785,"line_start":267,"line_end":267,"column_start":5,"column_end":78}},{"value":"/ calling it concurrently with `poll_write_ready`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12632790,"byte_end":12632842,"line_start":268,"line_end":268,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1598},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12633845,"byte_end":12633861,"line_start":299,"line_end":299,"column_start":12,"column_end":28},"name":"clear_read_ready","qualname":"<PollEvented<E>>::clear_read_ready","value":"pub fn clear_read_ready(&Self, &mut Context, mio::Ready) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Clears the I/O resource's read readiness state and registers the current\n task to be notified once a read readiness event is received.","sig":null,"attributes":[{"value":"/ Clears the I/O resource's read readiness state and registers the current","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12633246,"byte_end":12633322,"line_start":284,"line_end":284,"column_start":5,"column_end":81}},{"value":"/ task to be notified once a read readiness event is received.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12633327,"byte_end":12633391,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12633396,"byte_end":12633399,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ After calling this function, `poll_read_ready` will return","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12633404,"byte_end":12633466,"line_start":287,"line_end":287,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` until a new read readiness event has been received.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12633471,"byte_end":12633542,"line_start":288,"line_end":288,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12633547,"byte_end":12633550,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ The `mask` argument specifies the readiness bits to clear. This may not","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12633555,"byte_end":12633630,"line_start":290,"line_end":290,"column_start":5,"column_end":80}},{"value":"/ include `writable` or `hup`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12633635,"byte_end":12633667,"line_start":291,"line_end":291,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12633672,"byte_end":12633675,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12633680,"byte_end":12633692,"line_start":293,"line_end":293,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12633697,"byte_end":12633700,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12633705,"byte_end":12633733,"line_start":295,"line_end":295,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12633738,"byte_end":12633741,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ * `ready` includes writable or HUP","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12633746,"byte_end":12633784,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/ * called from outside of a task context.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12633789,"byte_end":12633833,"line_start":298,"line_end":298,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1599},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12635301,"byte_end":12635317,"line_start":340,"line_end":340,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<PollEvented<E>>::poll_write_ready","value":"pub fn poll_write_ready(&Self, &mut Context) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Checks the I/O resource's write readiness state.","sig":null,"attributes":[{"value":"/ Checks the I/O resource's write readiness state.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12634386,"byte_end":12634438,"line_start":316,"line_end":316,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12634443,"byte_end":12634446,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ This always checks for writable readiness and also checks for HUP","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12634451,"byte_end":12634520,"line_start":318,"line_end":318,"column_start":5,"column_end":74}},{"value":"/ readiness on platforms that support it.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12634525,"byte_end":12634568,"line_start":319,"line_end":319,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12634573,"byte_end":12634576,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ If the resource is not ready for a write then `Poll::Pending` is","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12634581,"byte_end":12634649,"line_start":321,"line_end":321,"column_start":5,"column_end":73}},{"value":"/ returned and the current task is notified once a new event is received.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12634654,"byte_end":12634729,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12634734,"byte_end":12634737,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ The I/O resource will remain in a write-ready state until readiness is","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12634742,"byte_end":12634816,"line_start":324,"line_end":324,"column_start":5,"column_end":79}},{"value":"/ cleared by calling [`clear_write_ready`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12634821,"byte_end":12634866,"line_start":325,"line_end":325,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12634871,"byte_end":12634874,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ [`clear_write_ready`]: method@Self::clear_write_ready","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12634879,"byte_end":12634936,"line_start":327,"line_end":327,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12634941,"byte_end":12634944,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12634949,"byte_end":12634961,"line_start":329,"line_end":329,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12634966,"byte_end":12634969,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12634974,"byte_end":12635002,"line_start":331,"line_end":331,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12635007,"byte_end":12635010,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ * `ready` contains bits besides `writable` and `hup`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12635015,"byte_end":12635072,"line_start":333,"line_end":333,"column_start":5,"column_end":62}},{"value":"/ * called from outside of a task context.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12635077,"byte_end":12635121,"line_start":334,"line_end":334,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12635126,"byte_end":12635129,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12635134,"byte_end":12635147,"line_start":336,"line_end":336,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12635152,"byte_end":12635155,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This method may not be called concurrently. It takes `&self` to allow","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12635160,"byte_end":12635233,"line_start":338,"line_end":338,"column_start":5,"column_end":78}},{"value":"/ calling it concurrently with `poll_read_ready`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12635238,"byte_end":12635289,"line_start":339,"line_end":339,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1600},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12636166,"byte_end":12636183,"line_start":362,"line_end":362,"column_start":12,"column_end":29},"name":"clear_write_ready","qualname":"<PollEvented<E>>::clear_write_ready","value":"pub fn clear_write_ready(&Self, &mut Context) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Resets the I/O resource's write readiness state and registers the current\n task to be notified once a write readiness event is received.","sig":null,"attributes":[{"value":"/ Resets the I/O resource's write readiness state and registers the current","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12635593,"byte_end":12635670,"line_start":350,"line_end":350,"column_start":5,"column_end":82}},{"value":"/ task to be notified once a write readiness event is received.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12635675,"byte_end":12635740,"line_start":351,"line_end":351,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12635745,"byte_end":12635748,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ This only clears writable readiness. HUP (on platforms that support HUP)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12635753,"byte_end":12635829,"line_start":353,"line_end":353,"column_start":5,"column_end":81}},{"value":"/ cannot be cleared as it is a final state.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12635834,"byte_end":12635879,"line_start":354,"line_end":354,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12635884,"byte_end":12635887,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ After calling this function, `poll_write_ready(Ready::writable())` will","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12635892,"byte_end":12635967,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ return `NotReady` until a new write readiness event has been received.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12635972,"byte_end":12636046,"line_start":357,"line_end":357,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12636051,"byte_end":12636054,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12636059,"byte_end":12636071,"line_start":359,"line_end":359,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12636076,"byte_end":12636079,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12636084,"byte_end":12636154,"line_start":361,"line_end":361,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1706},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12640425,"byte_end":12640437,"line_start":41,"line_end":41,"column_start":16,"column_end":28},"name":"Registration","qualname":"::io::registration::Registration","value":"Registration {  }","parent":null,"children":[{"krate":0,"index":1707},{"krate":0,"index":1708}],"decl_id":null,"docs":" Associates an I/O resource with the reactor instance that drives it.","sig":null,"attributes":[{"value":"cfg(feature = \"io-driver\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19308,"byte_end":19337,"line_start":131,"line_end":131,"column_start":13,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1652},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12641129,"byte_end":12641132,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Registration>::new","value":"pub fn new<T>(&T) -> io::Result<Registration> where T: Evented","parent":null,"children":[],"decl_id":null,"docs":" Registers the I/O resource with the default reactor.","sig":null,"attributes":[{"value":"/ Registers the I/O resource with the default reactor.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12640557,"byte_end":12640613,"line_start":50,"line_end":50,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12640618,"byte_end":12640621,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12640626,"byte_end":12640638,"line_start":52,"line_end":52,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12640643,"byte_end":12640646,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ - `Ok` if the registration happened successfully","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12640651,"byte_end":12640703,"line_start":54,"line_end":54,"column_start":5,"column_end":57}},{"value":"/ - `Err` if an error was encountered during registration","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12640708,"byte_end":12640767,"line_start":55,"line_end":55,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12640772,"byte_end":12640775,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12640780,"byte_end":12640783,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12640788,"byte_end":12640800,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12640805,"byte_end":12640808,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12640813,"byte_end":12640873,"line_start":60,"line_end":60,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12640878,"byte_end":12640881,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12640886,"byte_end":12640956,"line_start":62,"line_end":62,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12640961,"byte_end":12641034,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12641039,"byte_end":12641117,"line_start":64,"line_end":64,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1654},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12642535,"byte_end":12642549,"line_start":102,"line_end":102,"column_start":12,"column_end":26},"name":"new_with_ready","qualname":"<Registration>::new_with_ready","value":"pub fn new_with_ready<T>(&T, mio::Ready) -> io::Result<Registration> where\nT: Evented","parent":null,"children":[],"decl_id":null,"docs":" Registers the I/O resource with the default reactor, for a specific `mio::Ready` state.\n `new_with_ready` should be used over `new` when you need control over the readiness state,\n such as when a file descriptor only allows reads. This does not add `hup` or `error` so if\n you are interested in those states, you will need to add them to the readiness state passed\n to this function.","sig":null,"attributes":[{"value":"/ Registers the I/O resource with the default reactor, for a specific `mio::Ready` state.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12641279,"byte_end":12641370,"line_start":72,"line_end":72,"column_start":5,"column_end":96}},{"value":"/ `new_with_ready` should be used over `new` when you need control over the readiness state,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12641375,"byte_end":12641469,"line_start":73,"line_end":73,"column_start":5,"column_end":99}},{"value":"/ such as when a file descriptor only allows reads. This does not add `hup` or `error` so if","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12641474,"byte_end":12641568,"line_start":74,"line_end":74,"column_start":5,"column_end":99}},{"value":"/ you are interested in those states, you will need to add them to the readiness state passed","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12641573,"byte_end":12641668,"line_start":75,"line_end":75,"column_start":5,"column_end":100}},{"value":"/ to this function.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12641673,"byte_end":12641694,"line_start":76,"line_end":76,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12641699,"byte_end":12641702,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ An example to listen to read only","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12641707,"byte_end":12641744,"line_start":78,"line_end":78,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12641749,"byte_end":12641752,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12641757,"byte_end":12641768,"line_start":80,"line_end":80,"column_start":5,"column_end":16}},{"value":"/ ##[cfg(unix)]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12641773,"byte_end":12641790,"line_start":81,"line_end":81,"column_start":5,"column_end":22}},{"value":"/     mio::Ready::from_usize(","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12641795,"byte_end":12641826,"line_start":82,"line_end":82,"column_start":5,"column_end":36}},{"value":"/         mio::Ready::readable().as_usize()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12641831,"byte_end":12641876,"line_start":83,"line_end":83,"column_start":5,"column_end":50}},{"value":"/         | mio::unix::UnixReady::error().as_usize()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12641881,"byte_end":12641935,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/         | mio::unix::UnixReady::hup().as_usize()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12641940,"byte_end":12641992,"line_start":85,"line_end":85,"column_start":5,"column_end":57}},{"value":"/     );","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12641997,"byte_end":12642007,"line_start":86,"line_end":86,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12642012,"byte_end":12642019,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12642024,"byte_end":12642027,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12642032,"byte_end":12642044,"line_start":89,"line_end":89,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12642049,"byte_end":12642052,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ - `Ok` if the registration happened successfully","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12642057,"byte_end":12642109,"line_start":91,"line_end":91,"column_start":5,"column_end":57}},{"value":"/ - `Err` if an error was encountered during registration","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12642114,"byte_end":12642173,"line_start":92,"line_end":92,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12642178,"byte_end":12642181,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12642186,"byte_end":12642189,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12642194,"byte_end":12642206,"line_start":95,"line_end":95,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12642211,"byte_end":12642214,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12642219,"byte_end":12642279,"line_start":97,"line_end":97,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12642284,"byte_end":12642287,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12642292,"byte_end":12642362,"line_start":99,"line_end":99,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12642367,"byte_end":12642440,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12642445,"byte_end":12642523,"line_start":101,"line_end":101,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1656},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12643784,"byte_end":12643794,"line_start":135,"line_end":135,"column_start":12,"column_end":22},"name":"deregister","qualname":"<Registration>::deregister","value":"pub fn deregister<T>(&mut Self, &T) -> io::Result<()> where T: Evented","parent":null,"children":[],"decl_id":null,"docs":" Deregisters the I/O resource from the reactor it is associated with.","sig":null,"attributes":[{"value":"/ Deregisters the I/O resource from the reactor it is associated with.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12643008,"byte_end":12643080,"line_start":119,"line_end":119,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12643085,"byte_end":12643088,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ This function must be called before the I/O resource associated with the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12643093,"byte_end":12643169,"line_start":121,"line_end":121,"column_start":5,"column_end":81}},{"value":"/ registration is dropped.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12643174,"byte_end":12643202,"line_start":122,"line_end":122,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12643207,"byte_end":12643210,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Note that deregistering does not guarantee that the I/O resource can be","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12643215,"byte_end":12643290,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ registered with a different reactor. Some I/O resource types can only be","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12643295,"byte_end":12643371,"line_start":125,"line_end":125,"column_start":5,"column_end":81}},{"value":"/ associated with a single reactor instance for their lifetime.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12643376,"byte_end":12643441,"line_start":126,"line_end":126,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12643446,"byte_end":12643449,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12643454,"byte_end":12643466,"line_start":128,"line_end":128,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12643471,"byte_end":12643474,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ If the deregistration was successful, `Ok` is returned. Any calls to","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12643479,"byte_end":12643551,"line_start":130,"line_end":130,"column_start":5,"column_end":77}},{"value":"/ `Reactor::turn` that happen after a successful call to `deregister` will","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12643556,"byte_end":12643632,"line_start":131,"line_end":131,"column_start":5,"column_end":81}},{"value":"/ no longer result in notifications getting sent for this registration.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12643637,"byte_end":12643710,"line_start":132,"line_end":132,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12643715,"byte_end":12643718,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ `Err` is returned if an error is encountered.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12643723,"byte_end":12643772,"line_start":134,"line_end":134,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1658},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12645345,"byte_end":12645360,"line_start":174,"line_end":174,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<Registration>::poll_read_ready","value":"pub fn poll_read_ready(&Self, &mut Context) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for events on the I/O resource's read readiness stream.","sig":null,"attributes":[{"value":"/ Polls for events on the I/O resource's read readiness stream.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12644097,"byte_end":12644162,"line_start":146,"line_end":146,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12644167,"byte_end":12644170,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ If the I/O resource receives a new read readiness event since the last","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12644175,"byte_end":12644249,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ call to `poll_read_ready`, it is returned. If it has not, the current","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12644254,"byte_end":12644327,"line_start":149,"line_end":149,"column_start":5,"column_end":78}},{"value":"/ task is notified once a new event is received.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12644332,"byte_end":12644382,"line_start":150,"line_end":150,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12644387,"byte_end":12644390,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ All events except `HUP` are [edge-triggered]. Once `HUP` is returned,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12644395,"byte_end":12644468,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ the function will always return `Ready(HUP)`. This should be treated as","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12644473,"byte_end":12644548,"line_start":153,"line_end":153,"column_start":5,"column_end":80}},{"value":"/ the end of the readiness stream.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12644553,"byte_end":12644589,"line_start":154,"line_end":154,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12644594,"byte_end":12644597,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12644602,"byte_end":12644620,"line_start":156,"line_end":156,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12644625,"byte_end":12644628,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ There are several possible return values:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12644633,"byte_end":12644678,"line_start":158,"line_end":158,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12644683,"byte_end":12644686,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(readiness))` means that the I/O resource has received","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12644691,"byte_end":12644766,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/   a new readiness event. The readiness value is included.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12644771,"byte_end":12644832,"line_start":161,"line_end":161,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12644837,"byte_end":12644840,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` means that no new readiness events have been received","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12644845,"byte_end":12644920,"line_start":163,"line_end":163,"column_start":5,"column_end":80}},{"value":"/   since the last call to `poll_read_ready`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12644925,"byte_end":12644972,"line_start":164,"line_end":164,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12644977,"byte_end":12644980,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(err))` means that the registration has encountered an","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12644985,"byte_end":12645061,"line_start":166,"line_end":166,"column_start":5,"column_end":81}},{"value":"/   error. This could represent a permanent internal error for example.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12645066,"byte_end":12645139,"line_start":167,"line_end":167,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12645144,"byte_end":12645147,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ [edge-triggered]: struct@mio::Poll#edge-triggered-and-level-triggered","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12645152,"byte_end":12645225,"line_start":169,"line_end":169,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12645230,"byte_end":12645233,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12645238,"byte_end":12645250,"line_start":171,"line_end":171,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12645255,"byte_end":12645258,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12645263,"byte_end":12645333,"line_start":173,"line_end":173,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1660},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12646201,"byte_end":12646216,"line_start":198,"line_end":198,"column_start":12,"column_end":27},"name":"take_read_ready","qualname":"<Registration>::take_read_ready","value":"pub fn take_read_ready(&Self) -> io::Result<Option<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Consume any pending read readiness event.","sig":null,"attributes":[{"value":"/ Consume any pending read readiness event.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12645840,"byte_end":12645885,"line_start":191,"line_end":191,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12645890,"byte_end":12645893,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This function is identical to [`poll_read_ready`] **except** that it","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12645898,"byte_end":12645970,"line_start":193,"line_end":193,"column_start":5,"column_end":77}},{"value":"/ will not notify the current task when a new event is received. As such,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12645975,"byte_end":12646050,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/ it is safe to call this function from outside of a task context.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12646055,"byte_end":12646123,"line_start":195,"line_end":195,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12646128,"byte_end":12646131,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ [`poll_read_ready`]: method@Self::poll_read_ready","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12646136,"byte_end":12646189,"line_start":197,"line_end":197,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1661},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12647570,"byte_end":12647586,"line_start":230,"line_end":230,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<Registration>::poll_write_ready","value":"pub fn poll_write_ready(&Self, &mut Context) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for events on the I/O resource's write readiness stream.","sig":null,"attributes":[{"value":"/ Polls for events on the I/O resource's write readiness stream.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12646318,"byte_end":12646384,"line_start":202,"line_end":202,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12646389,"byte_end":12646392,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ If the I/O resource receives a new write readiness event since the last","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12646397,"byte_end":12646472,"line_start":204,"line_end":204,"column_start":5,"column_end":80}},{"value":"/ call to `poll_write_ready`, it is returned. If it has not, the current","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12646477,"byte_end":12646551,"line_start":205,"line_end":205,"column_start":5,"column_end":79}},{"value":"/ task is notified once a new event is received.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12646556,"byte_end":12646606,"line_start":206,"line_end":206,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12646611,"byte_end":12646614,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ All events except `HUP` are [edge-triggered]. Once `HUP` is returned,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12646619,"byte_end":12646692,"line_start":208,"line_end":208,"column_start":5,"column_end":78}},{"value":"/ the function will always return `Ready(HUP)`. This should be treated as","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12646697,"byte_end":12646772,"line_start":209,"line_end":209,"column_start":5,"column_end":80}},{"value":"/ the end of the readiness stream.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12646777,"byte_end":12646813,"line_start":210,"line_end":210,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12646818,"byte_end":12646821,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12646826,"byte_end":12646844,"line_start":212,"line_end":212,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12646849,"byte_end":12646852,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ There are several possible return values:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12646857,"byte_end":12646902,"line_start":214,"line_end":214,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12646907,"byte_end":12646910,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(readiness))` means that the I/O resource has received","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12646915,"byte_end":12646990,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/   a new readiness event. The readiness value is included.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12646995,"byte_end":12647056,"line_start":217,"line_end":217,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12647061,"byte_end":12647064,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` means that no new readiness events have been received","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12647069,"byte_end":12647144,"line_start":219,"line_end":219,"column_start":5,"column_end":80}},{"value":"/   since the last call to `poll_write_ready`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12647149,"byte_end":12647197,"line_start":220,"line_end":220,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12647202,"byte_end":12647205,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(err))` means that the registration has encountered an","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12647210,"byte_end":12647286,"line_start":222,"line_end":222,"column_start":5,"column_end":81}},{"value":"/   error. This could represent a permanent internal error for example.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12647291,"byte_end":12647364,"line_start":223,"line_end":223,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12647369,"byte_end":12647372,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ [edge-triggered]: struct@mio::Poll#edge-triggered-and-level-triggered","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12647377,"byte_end":12647450,"line_start":225,"line_end":225,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12647455,"byte_end":12647458,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12647463,"byte_end":12647475,"line_start":227,"line_end":227,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12647480,"byte_end":12647483,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12647488,"byte_end":12647558,"line_start":229,"line_end":229,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1663},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12648433,"byte_end":12648449,"line_start":254,"line_end":254,"column_start":12,"column_end":28},"name":"take_write_ready","qualname":"<Registration>::take_write_ready","value":"pub fn take_write_ready(&Self) -> io::Result<Option<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes any pending write readiness event.","sig":null,"attributes":[{"value":"/ Consumes any pending write readiness event.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12648067,"byte_end":12648114,"line_start":247,"line_end":247,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12648119,"byte_end":12648122,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This function is identical to [`poll_write_ready`] **except** that it","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12648127,"byte_end":12648200,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ will not notify the current task when a new event is received. As such,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12648205,"byte_end":12648280,"line_start":250,"line_end":250,"column_start":5,"column_end":80}},{"value":"/ it is safe to call this function from outside of a task context.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12648285,"byte_end":12648353,"line_start":251,"line_end":251,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12648358,"byte_end":12648361,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ [`poll_write_ready`]: method@Self::poll_write_ready","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12648366,"byte_end":12648421,"line_start":253,"line_end":253,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1913},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12652312,"byte_end":12652320,"line_start":21,"line_end":21,"column_start":16,"column_end":24},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":1915}],"decl_id":null,"docs":" The readable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1916},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12652449,"byte_end":12652458,"line_start":26,"line_end":26,"column_start":16,"column_end":25},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":1918}],"decl_id":null,"docs":" The writable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1919},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12652772,"byte_end":12652777,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"split","qualname":"::io::split::split","value":"pub fn split<T>(T) -> (ReadHalf<T>, WriteHalf<T>) where T: AsyncRead +\nAsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Splits a single value implementing `AsyncRead + AsyncWrite` into separate\n `AsyncRead` and `AsyncWrite` handles.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1768},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12653403,"byte_end":12653413,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<ReadHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &WriteHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if this `ReadHalf` and some `WriteHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Checks if this `ReadHalf` and some `WriteHalf` were split from the same","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12653300,"byte_end":12653375,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ stream.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12653380,"byte_end":12653391,"line_start":65,"line_end":65,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1769},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12653820,"byte_end":12653827,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"unsplit","qualname":"<ReadHalf<T>>::unsplit","value":"pub fn unsplit(Self, WriteHalf<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Reunites with a previously split `WriteHalf`.","sig":null,"attributes":[{"value":"/ Reunites with a previously split `WriteHalf`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12653496,"byte_end":12653545,"line_start":70,"line_end":70,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12653550,"byte_end":12653553,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12653558,"byte_end":12653570,"line_start":72,"line_end":72,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12653575,"byte_end":12653578,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ If this `ReadHalf` and the given `WriteHalf` do not originate from the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12653583,"byte_end":12653657,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ same `split` operation this method will panic.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12653662,"byte_end":12653712,"line_start":75,"line_end":75,"column_start":5,"column_end":55}},{"value":"/ This can be checked ahead of time by comparing the stream ID","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12653717,"byte_end":12653781,"line_start":76,"line_end":76,"column_start":5,"column_end":69}},{"value":"/ of the two halves.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12653786,"byte_end":12653808,"line_start":77,"line_end":77,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1772},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12654328,"byte_end":12654338,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<WriteHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &ReadHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this `WriteHalf` and some `ReadHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Check if this `WriteHalf` and some `ReadHalf` were split from the same","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12654226,"byte_end":12654300,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ stream.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12654305,"byte_end":12654316,"line_start":95,"line_end":95,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1921},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/seek.rs","byte_start":12657575,"byte_end":12657579,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":1924},{"krate":0,"index":1925}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/seek.rs","byte_start":12657412,"byte_end":12657478,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/seek.rs","byte_start":12657496,"byte_end":12657563,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":3275},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_buf_read_ext.rs","byte_start":12660883,"byte_end":12660898,"line_start":11,"line_end":11,"column_start":15,"column_end":30},"name":"AsyncBufReadExt","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":3276},{"krate":0,"index":3278},{"krate":0,"index":3280},{"krate":0,"index":3281}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncBufRead`] types.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3276},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_buf_read_ext.rs","byte_start":12663598,"byte_end":12663608,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"read_until","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntil where\nSelf: Unpin","parent":{"krate":0,"index":3275},"children":[],"decl_id":null,"docs":" Reads all bytes into `buf` until the delimiter `byte` or EOF is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3278},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_buf_read_ext.rs","byte_start":12666499,"byte_end":12666508,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"read_line","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLine where\nSelf: Unpin","parent":{"krate":0,"index":3275},"children":[],"decl_id":null,"docs":" Reads all bytes until a newline (the 0xA byte) is reached, and append\n them to the provided buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3280},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_buf_read_ext.rs","byte_start":12667908,"byte_end":12667913,"line_start":200,"line_end":200,"column_start":12,"column_end":17},"name":"split","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::split","value":"pub fn split(Self, u8) -> Split<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":3275},"children":[],"decl_id":null,"docs":" Returns a stream of the contents of this reader split on the byte\n `byte`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3281},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_buf_read_ext.rs","byte_start":12669763,"byte_end":12669768,"line_start":249,"line_end":249,"column_start":12,"column_end":17},"name":"lines","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Sized","parent":{"krate":0,"index":3275},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3283},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":12671947,"byte_end":12671959,"line_start":64,"line_end":64,"column_start":15,"column_end":27},"name":"AsyncReadExt","qualname":"::io::util::async_read_ext::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":3284},{"krate":0,"index":3286},{"krate":0,"index":3288},{"krate":0,"index":3291},{"krate":0,"index":3298},{"krate":0,"index":3300},{"krate":0,"index":3302},{"krate":0,"index":3304},{"krate":0,"index":3306},{"krate":0,"index":3308},{"krate":0,"index":3310},{"krate":0,"index":3312},{"krate":0,"index":3314},{"krate":0,"index":3316},{"krate":0,"index":3318},{"krate":0,"index":3320},{"krate":0,"index":3322},{"krate":0,"index":3324},{"krate":0,"index":3326},{"krate":0,"index":3328},{"krate":0,"index":3330},{"krate":0,"index":3332},{"krate":0,"index":3293},{"krate":0,"index":3295},{"krate":0,"index":3297}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3284},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":12673079,"byte_end":12673084,"line_start":94,"line_end":94,"column_start":12,"column_end":17},"name":"chain","qualname":"::io::util::async_read_ext::AsyncReadExt::chain","value":"pub fn chain<R>(Self, R) -> Chain<Self, R> where Self: Sized, R: AsyncRead","parent":{"krate":0,"index":3283},"children":[],"decl_id":null,"docs":" Creates a new `AsyncRead` instance that chains this stream with\n `next`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3286},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":12675913,"byte_end":12675917,"line_start":162,"line_end":162,"column_start":12,"column_end":16},"name":"read","qualname":"::io::util::async_read_ext::AsyncReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> Read where Self: Unpin","parent":{"krate":0,"index":3283},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n returning how many bytes were read.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3288},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":12678219,"byte_end":12678227,"line_start":226,"line_end":226,"column_start":12,"column_end":20},"name":"read_buf","qualname":"::io::util::async_read_ext::AsyncReadExt::read_buf","value":"pub fn read_buf<'a, B>(&'a mut Self, &'a mut B) -> ReadBuf where Self: Sized +\nUnpin, B: BufMut","parent":{"krate":0,"index":3283},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n advancing the buffer's internal cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3291},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":12680124,"byte_end":12680134,"line_start":280,"line_end":280,"column_start":12,"column_end":22},"name":"read_exact","qualname":"::io::util::async_read_ext::AsyncReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExact where\nSelf: Unpin","parent":{"krate":0,"index":3283},"children":[],"decl_id":null,"docs":" Reads the exact number of bytes required to fill `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3298},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":12681571,"byte_end":12681578,"line_start":324,"line_end":324,"column_start":16,"column_end":23},"name":"read_u8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u8","value":"pub fn read_u8<'a>(&'a mut Self) -> ReadU8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3283},"children":[],"decl_id":null,"docs":" Reads an unsigned 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3300},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":12682867,"byte_end":12682874,"line_start":362,"line_end":362,"column_start":16,"column_end":23},"name":"read_i8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i8","value":"pub fn read_i8<'a>(&'a mut Self) -> ReadI8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3283},"children":[],"decl_id":null,"docs":" Reads a signed 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3302},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":12684205,"byte_end":12684213,"line_start":400,"line_end":400,"column_start":16,"column_end":24},"name":"read_u16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16","value":"pub fn read_u16<'a>(&'a mut Self) -> ReadU16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3283},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3304},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":12685553,"byte_end":12685561,"line_start":438,"line_end":438,"column_start":16,"column_end":24},"name":"read_i16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16","value":"pub fn read_i16<'a>(&'a mut Self) -> ReadI16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3283},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3306},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":12686842,"byte_end":12686850,"line_start":475,"line_end":475,"column_start":16,"column_end":24},"name":"read_u32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32","value":"pub fn read_u32<'a>(&'a mut Self) -> ReadU32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3283},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3308},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":12688145,"byte_end":12688153,"line_start":513,"line_end":513,"column_start":16,"column_end":24},"name":"read_i32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32","value":"pub fn read_i32<'a>(&'a mut Self) -> ReadI32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3283},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3310},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":12689516,"byte_end":12689524,"line_start":552,"line_end":552,"column_start":16,"column_end":24},"name":"read_u64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64","value":"pub fn read_u64<'a>(&'a mut Self) -> ReadU64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3283},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3312},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":12690817,"byte_end":12690825,"line_start":589,"line_end":589,"column_start":16,"column_end":24},"name":"read_i64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64","value":"pub fn read_i64<'a>(&'a mut Self) -> ReadI64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3283},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3314},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":12692285,"byte_end":12692294,"line_start":629,"line_end":629,"column_start":16,"column_end":25},"name":"read_u128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128","value":"pub fn read_u128<'a>(&'a mut Self) -> ReadU128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3283},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3316},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":12693688,"byte_end":12693697,"line_start":669,"line_end":669,"column_start":16,"column_end":25},"name":"read_i128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128","value":"pub fn read_i128<'a>(&'a mut Self) -> ReadI128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3283},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3318},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":12695044,"byte_end":12695055,"line_start":707,"line_end":707,"column_start":16,"column_end":27},"name":"read_u16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16_le","value":"pub fn read_u16_le<'a>(&'a mut Self) -> ReadU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3283},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3320},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":12696416,"byte_end":12696427,"line_start":745,"line_end":745,"column_start":16,"column_end":27},"name":"read_i16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16_le","value":"pub fn read_i16_le<'a>(&'a mut Self) -> ReadI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3283},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3322},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":12697728,"byte_end":12697739,"line_start":782,"line_end":782,"column_start":16,"column_end":27},"name":"read_u32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32_le","value":"pub fn read_u32_le<'a>(&'a mut Self) -> ReadU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3283},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3324},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":12699051,"byte_end":12699062,"line_start":820,"line_end":820,"column_start":16,"column_end":27},"name":"read_i32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32_le","value":"pub fn read_i32_le<'a>(&'a mut Self) -> ReadI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3283},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3326},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":12700443,"byte_end":12700454,"line_start":859,"line_end":859,"column_start":16,"column_end":27},"name":"read_u64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64_le","value":"pub fn read_u64_le<'a>(&'a mut Self) -> ReadU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3283},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3328},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":12701748,"byte_end":12701759,"line_start":896,"line_end":896,"column_start":16,"column_end":27},"name":"read_i64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64_le","value":"pub fn read_i64_le<'a>(&'a mut Self) -> ReadI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3283},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3330},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":12703237,"byte_end":12703249,"line_start":936,"line_end":936,"column_start":16,"column_end":28},"name":"read_u128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128_le","value":"pub fn read_u128_le<'a>(&'a mut Self) -> ReadU128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3283},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3332},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":12704643,"byte_end":12704655,"line_start":976,"line_end":976,"column_start":16,"column_end":28},"name":"read_i128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128_le","value":"pub fn read_i128_le<'a>(&'a mut Self) -> ReadI128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3283},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3293},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":12706314,"byte_end":12706325,"line_start":1024,"line_end":1024,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEnd where\nSelf: Unpin","parent":{"krate":0,"index":3283},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, placing them into `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3295},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":12707880,"byte_end":12707894,"line_start":1071,"line_end":1071,"column_start":12,"column_end":26},"name":"read_to_string","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToString where\nSelf: Unpin","parent":{"krate":0,"index":3283},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, appending them to `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3297},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":12709186,"byte_end":12709190,"line_start":1109,"line_end":1109,"column_start":12,"column_end":16},"name":"take","qualname":"::io::util::async_read_ext::AsyncReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":3283},"children":[],"decl_id":null,"docs":" Creates an adaptor which reads at most `limit` bytes from it.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2098},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12710232,"byte_end":12710244,"line_start":35,"line_end":35,"column_start":11,"column_end":23},"name":"AsyncSeekExt","qualname":"::io::util::async_seek_ext::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":2099}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncSeek`] types.","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to [`AsyncSeek`] types.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12709457,"byte_end":12709530,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12709531,"byte_end":12709534,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ As a convenience, this trait may be imported using the [`prelude`]:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12709535,"byte_end":12709606,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12709607,"byte_end":12709610,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12709611,"byte_end":12709625,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12709626,"byte_end":12709629,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12709630,"byte_end":12709637,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ use std::io::{Cursor, SeekFrom};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12709638,"byte_end":12709674,"line_start":12,"line_end":12,"column_start":1,"column_end":37}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12709675,"byte_end":12709701,"line_start":13,"line_end":13,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12709702,"byte_end":12709705,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12709706,"byte_end":12709724,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12709725,"byte_end":12709764,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/     let mut cursor = Cursor::new(b\"abcdefg\");","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12709765,"byte_end":12709814,"line_start":17,"line_end":17,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12709815,"byte_end":12709818,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/     // the `seek` method is defined by this trait","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12709819,"byte_end":12709872,"line_start":19,"line_end":19,"column_start":1,"column_end":54}},{"value":"/     cursor.seek(SeekFrom::Start(3)).await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12709873,"byte_end":12709920,"line_start":20,"line_end":20,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12709921,"byte_end":12709924,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/     let mut buf = [0; 1];","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12709925,"byte_end":12709954,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/     let n = cursor.read(&mut buf).await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12709955,"byte_end":12710000,"line_start":23,"line_end":23,"column_start":1,"column_end":46}},{"value":"/     assert_eq!(n, 1);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12710001,"byte_end":12710026,"line_start":24,"line_end":24,"column_start":1,"column_end":26}},{"value":"/     assert_eq!(buf, [b'd']);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12710027,"byte_end":12710059,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12710060,"byte_end":12710063,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12710064,"byte_end":12710078,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12710079,"byte_end":12710084,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12710085,"byte_end":12710092,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12710093,"byte_end":12710096,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ See [module][crate::io] documentation for more details.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12710097,"byte_end":12710156,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12710157,"byte_end":12710160,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`AsyncSeek`]: AsyncSeek","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12710161,"byte_end":12710189,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ [`prelude`]: crate::prelude","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12710190,"byte_end":12710221,"line_start":34,"line_end":34,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2099},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12710961,"byte_end":12710965,"line_start":59,"line_end":59,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::util::async_seek_ext::AsyncSeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":2098},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[{"value":"/ Creates a future which will seek an IO object, and then yield the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12710262,"byte_end":12710331,"line_start":36,"line_end":36,"column_start":5,"column_end":74}},{"value":"/ new position in the object and the object itself.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12710336,"byte_end":12710389,"line_start":37,"line_end":37,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12710394,"byte_end":12710397,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12710402,"byte_end":12710479,"line_start":39,"line_end":39,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12710484,"byte_end":12710506,"line_start":40,"line_end":40,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12710511,"byte_end":12710514,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12710519,"byte_end":12710533,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12710538,"byte_end":12710541,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12710546,"byte_end":12710559,"line_start":44,"line_end":44,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12710564,"byte_end":12710588,"line_start":45,"line_end":45,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12710593,"byte_end":12710619,"line_start":46,"line_end":46,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12710624,"byte_end":12710627,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ use std::io::SeekFrom;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12710632,"byte_end":12710658,"line_start":48,"line_end":48,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12710663,"byte_end":12710666,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12710671,"byte_end":12710716,"line_start":50,"line_end":50,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12710721,"byte_end":12710769,"line_start":51,"line_end":51,"column_start":5,"column_end":53}},{"value":"/ file.seek(SeekFrom::Start(6)).await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12710774,"byte_end":12710815,"line_start":52,"line_end":52,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12710820,"byte_end":12710823,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ let mut contents = vec![0u8; 10];","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12710828,"byte_end":12710865,"line_start":54,"line_end":54,"column_start":5,"column_end":42}},{"value":"/ file.read_exact(&mut contents).await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12710870,"byte_end":12710912,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12710917,"byte_end":12710929,"line_start":56,"line_end":56,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12710934,"byte_end":12710941,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12710946,"byte_end":12710953,"line_start":58,"line_end":58,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":3335},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":12713168,"byte_end":12713181,"line_start":68,"line_end":68,"column_start":15,"column_end":28},"name":"AsyncWriteExt","qualname":"::io::util::async_write_ext::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":3336},{"krate":0,"index":3338},{"krate":0,"index":3341},{"krate":0,"index":3345},{"krate":0,"index":3347},{"krate":0,"index":3349},{"krate":0,"index":3351},{"krate":0,"index":3353},{"krate":0,"index":3355},{"krate":0,"index":3357},{"krate":0,"index":3359},{"krate":0,"index":3361},{"krate":0,"index":3363},{"krate":0,"index":3365},{"krate":0,"index":3367},{"krate":0,"index":3369},{"krate":0,"index":3371},{"krate":0,"index":3373},{"krate":0,"index":3375},{"krate":0,"index":3377},{"krate":0,"index":3379},{"krate":0,"index":3343},{"krate":0,"index":3344}],"decl_id":null,"docs":" Writes bytes to a sink.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3336},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":12715023,"byte_end":12715028,"line_start":115,"line_end":115,"column_start":12,"column_end":17},"name":"write","qualname":"::io::util::async_write_ext::AsyncWriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> Write where Self: Unpin","parent":{"krate":0,"index":3335},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, returning how many bytes were\n written.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3338},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":12717830,"byte_end":12717839,"line_start":187,"line_end":187,"column_start":12,"column_end":21},"name":"write_buf","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_buf","value":"pub fn write_buf<'a, B>(&'a mut Self, &'a mut B) -> WriteBuf where\nSelf: Sized + Unpin, B: Buf","parent":{"krate":0,"index":3335},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, advancing the buffer's internal\n cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3341},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":12719181,"byte_end":12719190,"line_start":228,"line_end":228,"column_start":12,"column_end":21},"name":"write_all","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAll where Self: Unpin","parent":{"krate":0,"index":3335},"children":[],"decl_id":null,"docs":" Attempts to write an entire buffer into this writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3345},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":12720590,"byte_end":12720598,"line_start":271,"line_end":271,"column_start":16,"column_end":24},"name":"write_u8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u8","value":"pub fn write_u8<'a>(&'a mut Self, u8) -> WriteU8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3335},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3347},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":12721859,"byte_end":12721867,"line_start":308,"line_end":308,"column_start":16,"column_end":24},"name":"write_i8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i8","value":"pub fn write_i8<'a>(&'a mut Self, i8) -> WriteI8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3335},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3349},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":12723182,"byte_end":12723191,"line_start":346,"line_end":346,"column_start":16,"column_end":25},"name":"write_u16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16","value":"pub fn write_u16<'a>(&'a mut Self, u16) -> WriteU16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3335},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3351},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":12724504,"byte_end":12724513,"line_start":384,"line_end":384,"column_start":16,"column_end":25},"name":"write_i16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16","value":"pub fn write_i16<'a>(&'a mut Self, i16) -> WriteI16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3335},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3353},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":12725853,"byte_end":12725862,"line_start":422,"line_end":422,"column_start":16,"column_end":25},"name":"write_u32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32","value":"pub fn write_u32<'a>(&'a mut Self, u32) -> WriteU32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3335},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3355},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":12727197,"byte_end":12727206,"line_start":460,"line_end":460,"column_start":16,"column_end":25},"name":"write_i32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32","value":"pub fn write_i32<'a>(&'a mut Self, i32) -> WriteI32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3335},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3357},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":12728583,"byte_end":12728592,"line_start":498,"line_end":498,"column_start":16,"column_end":25},"name":"write_u64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64","value":"pub fn write_u64<'a>(&'a mut Self, u64) -> WriteU64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3335},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3359},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":12729979,"byte_end":12729988,"line_start":536,"line_end":536,"column_start":16,"column_end":25},"name":"write_i64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64","value":"pub fn write_i64<'a>(&'a mut Self, i64) -> WriteI64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3335},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3361},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":12731443,"byte_end":12731453,"line_start":576,"line_end":576,"column_start":16,"column_end":26},"name":"write_u128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128","value":"pub fn write_u128<'a>(&'a mut Self, u128) -> WriteU128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3335},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3363},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":12732843,"byte_end":12732853,"line_start":616,"line_end":616,"column_start":16,"column_end":26},"name":"write_i128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128","value":"pub fn write_i128<'a>(&'a mut Self, i128) -> WriteI128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3335},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3365},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":12734185,"byte_end":12734197,"line_start":655,"line_end":655,"column_start":16,"column_end":28},"name":"write_u16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16_le","value":"pub fn write_u16_le<'a>(&'a mut Self, u16) -> WriteU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3335},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3367},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":12735524,"byte_end":12735536,"line_start":693,"line_end":693,"column_start":16,"column_end":28},"name":"write_i16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16_le","value":"pub fn write_i16_le<'a>(&'a mut Self, i16) -> WriteI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3335},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3369},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":12736890,"byte_end":12736902,"line_start":731,"line_end":731,"column_start":16,"column_end":28},"name":"write_u32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32_le","value":"pub fn write_u32_le<'a>(&'a mut Self, u32) -> WriteU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3335},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3371},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":12738251,"byte_end":12738263,"line_start":769,"line_end":769,"column_start":16,"column_end":28},"name":"write_i32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32_le","value":"pub fn write_i32_le<'a>(&'a mut Self, i32) -> WriteI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3335},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3373},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":12739654,"byte_end":12739666,"line_start":807,"line_end":807,"column_start":16,"column_end":28},"name":"write_u64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64_le","value":"pub fn write_u64_le<'a>(&'a mut Self, u64) -> WriteU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3335},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3375},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":12741067,"byte_end":12741079,"line_start":845,"line_end":845,"column_start":16,"column_end":28},"name":"write_i64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64_le","value":"pub fn write_i64_le<'a>(&'a mut Self, i64) -> WriteI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3335},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3377},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":12742546,"byte_end":12742559,"line_start":885,"line_end":885,"column_start":16,"column_end":29},"name":"write_u128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128_le","value":"pub fn write_u128_le<'a>(&'a mut Self, u128) -> WriteU128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":3335},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3379},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":12743961,"byte_end":12743974,"line_start":925,"line_end":925,"column_start":16,"column_end":29},"name":"write_i128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128_le","value":"pub fn write_i128_le<'a>(&'a mut Self, i128) -> WriteI128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":3335},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3343},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":12744994,"byte_end":12744999,"line_start":958,"line_end":958,"column_start":12,"column_end":17},"name":"flush","qualname":"::io::util::async_write_ext::AsyncWriteExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self> where Self: Unpin","parent":{"krate":0,"index":3335},"children":[],"decl_id":null,"docs":" Flushes this output stream, ensuring that all intermediately buffered\n contents reach their destination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3344},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":12746289,"byte_end":12746297,"line_start":997,"line_end":997,"column_start":12,"column_end":20},"name":"shutdown","qualname":"::io::util::async_write_ext::AsyncWriteExt::shutdown","value":"pub fn shutdown(&mut Self) -> Shutdown<, Self> where Self: Unpin","parent":{"krate":0,"index":3335},"children":[],"decl_id":null,"docs":" Shuts down the output stream, ensuring that the value can be dropped\n cleanly.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13213},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":12747706,"byte_end":12747715,"line_start":29,"line_end":29,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::util::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":13215},{"krate":0,"index":13216},{"krate":0,"index":13217},{"krate":0,"index":13218}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2257},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":12748051,"byte_end":12748054,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":12747909,"byte_end":12748001,"line_start":39,"line_end":39,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":12748006,"byte_end":12748039,"line_start":40,"line_end":40,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2258},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":12748216,"byte_end":12748229,"line_start":46,"line_end":46,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":12748139,"byte_end":12748204,"line_start":45,"line_end":45,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2259},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":12748905,"byte_end":12748912,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":12748768,"byte_end":12748814,"line_start":65,"line_end":65,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":12748819,"byte_end":12748822,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":12748827,"byte_end":12748893,"line_start":67,"line_end":67,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2260},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":12749104,"byte_end":12749111,"line_start":75,"line_end":75,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":12748959,"byte_end":12749013,"line_start":72,"line_end":72,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":12749018,"byte_end":12749021,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":12749026,"byte_end":12749092,"line_start":74,"line_end":74,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2261},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":12749322,"byte_end":12749333,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufReader<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":12749170,"byte_end":12749231,"line_start":79,"line_end":79,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":12749236,"byte_end":12749239,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":12749244,"byte_end":12749310,"line_start":81,"line_end":81,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2262},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":12749564,"byte_end":12749574,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufReader`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this `BufReader`, returning the underlying reader.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":12749413,"byte_end":12749476,"line_start":86,"line_end":86,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":12749481,"byte_end":12749484,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":12749489,"byte_end":12749552,"line_start":88,"line_end":88,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2263},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":12749778,"byte_end":12749784,"line_start":96,"line_end":96,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":12749618,"byte_end":12749674,"line_start":93,"line_end":93,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":12749679,"byte_end":12749682,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":12749687,"byte_end":12749766,"line_start":95,"line_end":95,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":13186},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":12754030,"byte_end":12754039,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"name":"BufStream","qualname":"::io::util::buf_stream::BufStream","value":"BufStream {  }","parent":null,"children":[{"krate":0,"index":13188}],"decl_id":null,"docs":" Wraps a type that is [`AsyncWrite`] and [`AsyncRead`], and buffers its input and output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2325},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":12754318,"byte_end":12754321,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<BufStream<RW>>::new","value":"pub fn new(RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a type in both [`BufWriter`] and [`BufReader`].","sig":null,"attributes":[{"value":"/ Wraps a type in both [`BufWriter`] and [`BufReader`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":12754164,"byte_end":12754221,"line_start":27,"line_end":27,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":12754226,"byte_end":12754229,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":12754234,"byte_end":12754306,"line_start":29,"line_end":29,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2326},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":12754653,"byte_end":12754666,"line_start":40,"line_end":40,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufStream<RW>>::with_capacity","value":"pub fn with_capacity(usize, usize, RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]\n capacity.","sig":null,"attributes":[{"value":"/ Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":12754453,"byte_end":12754538,"line_start":36,"line_end":36,"column_start":5,"column_end":90}},{"value":"/ capacity.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":12754543,"byte_end":12754556,"line_start":37,"line_end":37,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":12754561,"byte_end":12754564,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":12754569,"byte_end":12754641,"line_start":39,"line_end":39,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2327},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":12755123,"byte_end":12755130,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufStream<RW>>::get_ref","value":"pub fn get_ref(&Self) -> &RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying I/O object.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":12754978,"byte_end":12755028,"line_start":53,"line_end":53,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":12755033,"byte_end":12755036,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":12755041,"byte_end":12755111,"line_start":55,"line_end":55,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2328},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":12755350,"byte_end":12755357,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufStream<RW>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying I/O object.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":12755197,"byte_end":12755255,"line_start":60,"line_end":60,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":12755260,"byte_end":12755263,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":12755268,"byte_end":12755338,"line_start":62,"line_end":62,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2329},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":12755592,"byte_end":12755603,"line_start":70,"line_end":70,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufStream<RW>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut RW>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying I/O object.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":12755432,"byte_end":12755497,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":12755502,"byte_end":12755505,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":12755510,"byte_end":12755580,"line_start":69,"line_end":69,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2330},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":12755867,"byte_end":12755877,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufStream<RW>>::into_inner","value":"pub fn into_inner(Self) -> RW","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufStream`, returning the underlying I/O object.","sig":null,"attributes":[{"value":"/ Consumes this `BufStream`, returning the underlying I/O object.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":12755712,"byte_end":12755779,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":12755784,"byte_end":12755787,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":12755792,"byte_end":12755855,"line_start":76,"line_end":76,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":13136},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":12759696,"byte_end":12759705,"line_start":33,"line_end":33,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::util::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":13138},{"krate":0,"index":13139},{"krate":0,"index":13140}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2395},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":12760013,"byte_end":12760016,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":12759871,"byte_end":12759963,"line_start":42,"line_end":42,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":12759968,"byte_end":12760001,"line_start":43,"line_end":43,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2396},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":12760178,"byte_end":12760191,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":12760101,"byte_end":12760166,"line_start":48,"line_end":48,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2398},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":12761273,"byte_end":12761280,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":12761215,"byte_end":12761261,"line_start":85,"line_end":85,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2399},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":12761471,"byte_end":12761478,"line_start":93,"line_end":93,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":12761327,"byte_end":12761381,"line_start":90,"line_end":90,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":12761386,"byte_end":12761389,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":12761394,"byte_end":12761459,"line_start":92,"line_end":92,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2400},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":12761688,"byte_end":12761699,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufWriter<W>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut W>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying writer.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":12761537,"byte_end":12761598,"line_start":97,"line_end":97,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":12761603,"byte_end":12761606,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":12761611,"byte_end":12761676,"line_start":99,"line_end":99,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2401},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":12761930,"byte_end":12761940,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying writer.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying writer.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":12761779,"byte_end":12761842,"line_start":104,"line_end":104,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":12761847,"byte_end":12761850,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":12761855,"byte_end":12761918,"line_start":106,"line_end":106,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2402},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":12762052,"byte_end":12762058,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":12761984,"byte_end":12762040,"line_start":111,"line_end":111,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":13087},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":12764691,"byte_end":12764696,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::util::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":13090},{"krate":0,"index":13091},{"krate":0,"index":13092}],"decl_id":null,"docs":" Stream for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.12/src/lib.rs","byte_start":12429821,"byte_end":12429830,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2455},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":12765137,"byte_end":12765144,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":12765063,"byte_end":12765125,"line_start":39,"line_end":39,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2456},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":12765476,"byte_end":12765483,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":12765213,"byte_end":12765283,"line_start":44,"line_end":44,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":12765288,"byte_end":12765291,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":12765296,"byte_end":12765369,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":12765374,"byte_end":12765447,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":12765452,"byte_end":12765464,"line_start":48,"line_end":48,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2457},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":12765842,"byte_end":12765853,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":12765572,"byte_end":12765649,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":12765654,"byte_end":12765657,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":12765662,"byte_end":12765735,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":12765740,"byte_end":12765813,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":12765818,"byte_end":12765830,"line_start":57,"line_end":57,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2458},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":12766050,"byte_end":12766060,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":12765982,"byte_end":12766038,"line_start":63,"line_end":63,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":3385},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/copy.rs","byte_start":12768636,"byte_end":12768640,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Copy","qualname":"::io::util::copy::Copy","value":"Copy {  }","parent":null,"children":[{"krate":0,"index":3389},{"krate":0,"index":3390},{"krate":0,"index":3391},{"krate":0,"index":3392},{"krate":0,"index":3393},{"krate":0,"index":3394},{"krate":0,"index":3395}],"decl_id":null,"docs":" A future that asynchronously copies the entire contents of a reader into a\n writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/copy.rs","byte_start":12768553,"byte_end":12768620,"line_start":17,"line_end":17,"column_start":5,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":3381},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/copy.rs","byte_start":12769905,"byte_end":12769909,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"copy","qualname":"::io::util::copy::copy","value":"pub fn copy<'a, R: ?Sized, W: ?Sized>(&'a mut R, &'a mut W) -> Copy where\nR: AsyncRead + Unpin + ?Sized, W: AsyncWrite + Unpin + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3401},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/empty.rs","byte_start":12772666,"byte_end":12772671,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"name":"Empty","qualname":"::io::util::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":3402}],"decl_id":null,"docs":" An async reader which is always at EOF.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":3403},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/empty.rs","byte_start":12773350,"byte_end":12773355,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"empty","qualname":"::io::util::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty async reader.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3404},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/flush.rs","byte_start":12774572,"byte_end":12774577,"line_start":14,"line_end":14,"column_start":16,"column_end":21},"name":"Flush","qualname":"::io::util::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":3407}],"decl_id":null,"docs":" A future used to fully flush an I/O object.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":13048},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":12775693,"byte_end":12775698,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::util::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":13050},{"krate":0,"index":13051},{"krate":0,"index":13052},{"krate":0,"index":13053}],"decl_id":null,"docs":" Stream for the [`lines`](crate::io::AsyncBufReadExt::lines) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.12/src/lib.rs","byte_start":12429821,"byte_end":12429830,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2604},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":12776545,"byte_end":12776554,"line_start":57,"line_end":57,"column_start":18,"column_end":27},"name":"next_line","qualname":"<Lines<R>>::next_line","value":"pub async fn next_line<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next line in the stream.","sig":null,"attributes":[{"value":"/ Returns the next line in the stream.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":12776055,"byte_end":12776095,"line_start":40,"line_end":40,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":12776100,"byte_end":12776103,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":12776108,"byte_end":12776122,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":12776127,"byte_end":12776130,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":12776135,"byte_end":12776142,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":12776147,"byte_end":12776181,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":12776186,"byte_end":12776221,"line_start":46,"line_end":46,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":12776226,"byte_end":12776229,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":12776234,"byte_end":12776317,"line_start":48,"line_end":48,"column_start":5,"column_end":88}},{"value":"/ let mut lines = my_buf_read.lines();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":12776322,"byte_end":12776362,"line_start":49,"line_end":49,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":12776367,"byte_end":12776370,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ while let Some(line) = lines.next_line().await? {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":12776375,"byte_end":12776428,"line_start":51,"line_end":51,"column_start":5,"column_end":58}},{"value":"/     println!(\"length = {}\", line.len())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":12776433,"byte_end":12776476,"line_start":52,"line_end":52,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":12776481,"byte_end":12776486,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":12776491,"byte_end":12776503,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":12776508,"byte_end":12776515,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":12776520,"byte_end":12776527,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2611},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":12776781,"byte_end":12776788,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Lines<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a mutable reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a mutable reference to the underlying reader","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":12776714,"byte_end":12776769,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2612},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":12776907,"byte_end":12776914,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Lines<R>>::get_ref","value":"pub fn get_ref(&mut Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a reference to the underlying reader","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":12776848,"byte_end":12776895,"line_start":68,"line_end":68,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2613},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":12777201,"byte_end":12777211,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Lines<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `Lines<R>`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps this `Lines<R>`, returning the underlying reader.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":12776966,"byte_end":12777027,"line_start":73,"line_end":73,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":12777032,"byte_end":12777035,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":12777040,"byte_end":12777103,"line_start":75,"line_end":75,"column_start":5,"column_end":68}},{"value":"/ Therefore, a following read from the underlying reader may lead to data loss.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":12777108,"byte_end":12777189,"line_start":76,"line_end":76,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":2616},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":12777330,"byte_end":12777344,"line_start":87,"line_end":87,"column_start":12,"column_end":26},"name":"poll_next_line","qualname":"<Lines<R>>::poll_next_line","value":"pub fn poll_next_line(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<String>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3412},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12779473,"byte_end":12779485,"line_start":40,"line_end":40,"column_start":12,"column_end":24},"name":"DuplexStream","qualname":"::io::util::mem::DuplexStream","value":"DuplexStream {  }","parent":null,"children":[{"krate":0,"index":3413},{"krate":0,"index":3414}],"decl_id":null,"docs":" A bidirectional pipe to read and write bytes in memory.","sig":null,"attributes":[{"value":"/ A bidirectional pipe to read and write bytes in memory.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12778685,"byte_end":12778744,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12778745,"byte_end":12778748,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ A pair of `DuplexStream`s are created together, and they act as a \"channel\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12778749,"byte_end":12778828,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ that can be used as in-memory IO types. Writing to one of the pairs will","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12778829,"byte_end":12778905,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ allow that data to be read from the other, and vice versa.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12778906,"byte_end":12778968,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12778969,"byte_end":12778972,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12778973,"byte_end":12778986,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12778987,"byte_end":12778990,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12778991,"byte_end":12778998,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # async fn ex() -> std::io::Result<()> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12778999,"byte_end":12779043,"line_start":22,"line_end":22,"column_start":1,"column_end":45}},{"value":"/ # use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12779044,"byte_end":12779095,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ let (mut client, mut server) = tokio::io::duplex(64);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12779096,"byte_end":12779153,"line_start":24,"line_end":24,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12779154,"byte_end":12779157,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ client.write_all(b\"ping\").await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12779158,"byte_end":12779195,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12779196,"byte_end":12779199,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let mut buf = [0u8; 4];","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12779200,"byte_end":12779227,"line_start":28,"line_end":28,"column_start":1,"column_end":28}},{"value":"/ server.read_exact(&mut buf).await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12779228,"byte_end":12779267,"line_start":29,"line_end":29,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(&buf, b\"ping\");","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12779268,"byte_end":12779298,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12779299,"byte_end":12779302,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ server.write_all(b\"pong\").await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12779303,"byte_end":12779340,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12779341,"byte_end":12779344,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ client.read_exact(&mut buf).await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12779345,"byte_end":12779384,"line_start":34,"line_end":34,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(&buf, b\"pong\");","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12779385,"byte_end":12779415,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/ # Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12779416,"byte_end":12779428,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12779429,"byte_end":12779436,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12779437,"byte_end":12779444,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2659},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12780782,"byte_end":12780788,"line_start":75,"line_end":75,"column_start":8,"column_end":14},"name":"duplex","qualname":"::io::util::mem::duplex","value":"pub fn duplex(usize) -> (DuplexStream, DuplexStream)","parent":null,"children":[],"decl_id":null,"docs":" Create a new pair of `DuplexStream`s that act like a pair of connected sockets.","sig":null,"attributes":[{"value":"/ Create a new pair of `DuplexStream`s that act like a pair of connected sockets.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12780548,"byte_end":12780631,"line_start":71,"line_end":71,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12780632,"byte_end":12780635,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ The `max_buf_size` argument is the maximum amount of bytes that can be","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12780636,"byte_end":12780710,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ written to a side before the write returns `Poll::Pending`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12780711,"byte_end":12780774,"line_start":74,"line_end":74,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":3425},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read.rs","byte_start":12785717,"byte_end":12785721,"line_start":28,"line_end":28,"column_start":16,"column_end":20},"name":"Read","qualname":"::io::util::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":3428},{"krate":0,"index":3429}],"decl_id":null,"docs":" A future which can be used to easily read available number of bytes to fill\n a buffer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read.rs","byte_start":12785634,"byte_end":12785701,"line_start":27,"line_end":27,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":3434},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_buf.rs","byte_start":12786784,"byte_end":12786791,"line_start":21,"line_end":21,"column_start":16,"column_end":23},"name":"ReadBuf","qualname":"::io::util::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":3438},{"krate":0,"index":3439}],"decl_id":null,"docs":" Future returned by [`read_buf`](crate::io::AsyncReadExt::read_buf).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_buf.rs","byte_start":12786701,"byte_end":12786768,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":3445},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_exact.rs","byte_start":12788040,"byte_end":12788049,"line_start":32,"line_end":32,"column_start":16,"column_end":25},"name":"ReadExact","qualname":"::io::util::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":3448},{"krate":0,"index":3449},{"krate":0,"index":3450}],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if EOF is hit sooner.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_exact.rs","byte_start":12787957,"byte_end":12788024,"line_start":31,"line_end":31,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":13006},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":12792373,"byte_end":12792379,"line_start":112,"line_end":112,"column_start":10,"column_end":16},"name":"ReadU8","qualname":"::io::util::read_int::ReadU8","value":"ReadU8 {  }","parent":null,"children":[{"krate":0,"index":13008}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12973},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":12792395,"byte_end":12792401,"line_start":113,"line_end":113,"column_start":10,"column_end":16},"name":"ReadI8","qualname":"::io::util::read_int::ReadI8","value":"ReadI8 {  }","parent":null,"children":[{"krate":0,"index":12975}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12928},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":12792417,"byte_end":12792424,"line_start":115,"line_end":115,"column_start":9,"column_end":16},"name":"ReadU16","qualname":"::io::util::read_int::ReadU16","value":"ReadU16 {  }","parent":null,"children":[{"krate":0,"index":12930},{"krate":0,"index":12931},{"krate":0,"index":12933}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12883},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":12792449,"byte_end":12792456,"line_start":116,"line_end":116,"column_start":9,"column_end":16},"name":"ReadU32","qualname":"::io::util::read_int::ReadU32","value":"ReadU32 {  }","parent":null,"children":[{"krate":0,"index":12885},{"krate":0,"index":12886},{"krate":0,"index":12888}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12838},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":12792481,"byte_end":12792488,"line_start":117,"line_end":117,"column_start":9,"column_end":16},"name":"ReadU64","qualname":"::io::util::read_int::ReadU64","value":"ReadU64 {  }","parent":null,"children":[{"krate":0,"index":12840},{"krate":0,"index":12841},{"krate":0,"index":12843}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12793},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":12792513,"byte_end":12792521,"line_start":118,"line_end":118,"column_start":9,"column_end":17},"name":"ReadU128","qualname":"::io::util::read_int::ReadU128","value":"ReadU128 {  }","parent":null,"children":[{"krate":0,"index":12795},{"krate":0,"index":12796},{"krate":0,"index":12798}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12748},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":12792549,"byte_end":12792556,"line_start":120,"line_end":120,"column_start":9,"column_end":16},"name":"ReadI16","qualname":"::io::util::read_int::ReadI16","value":"ReadI16 {  }","parent":null,"children":[{"krate":0,"index":12750},{"krate":0,"index":12751},{"krate":0,"index":12753}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12703},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":12792581,"byte_end":12792588,"line_start":121,"line_end":121,"column_start":9,"column_end":16},"name":"ReadI32","qualname":"::io::util::read_int::ReadI32","value":"ReadI32 {  }","parent":null,"children":[{"krate":0,"index":12705},{"krate":0,"index":12706},{"krate":0,"index":12708}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12658},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":12792613,"byte_end":12792620,"line_start":122,"line_end":122,"column_start":9,"column_end":16},"name":"ReadI64","qualname":"::io::util::read_int::ReadI64","value":"ReadI64 {  }","parent":null,"children":[{"krate":0,"index":12660},{"krate":0,"index":12661},{"krate":0,"index":12663}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12613},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":12792645,"byte_end":12792653,"line_start":123,"line_end":123,"column_start":9,"column_end":17},"name":"ReadI128","qualname":"::io::util::read_int::ReadI128","value":"ReadI128 {  }","parent":null,"children":[{"krate":0,"index":12615},{"krate":0,"index":12616},{"krate":0,"index":12618}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12568},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":12792681,"byte_end":12792690,"line_start":125,"line_end":125,"column_start":9,"column_end":18},"name":"ReadU16Le","qualname":"::io::util::read_int::ReadU16Le","value":"ReadU16Le {  }","parent":null,"children":[{"krate":0,"index":12570},{"krate":0,"index":12571},{"krate":0,"index":12573}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12523},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":12792718,"byte_end":12792727,"line_start":126,"line_end":126,"column_start":9,"column_end":18},"name":"ReadU32Le","qualname":"::io::util::read_int::ReadU32Le","value":"ReadU32Le {  }","parent":null,"children":[{"krate":0,"index":12525},{"krate":0,"index":12526},{"krate":0,"index":12528}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12478},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":12792755,"byte_end":12792764,"line_start":127,"line_end":127,"column_start":9,"column_end":18},"name":"ReadU64Le","qualname":"::io::util::read_int::ReadU64Le","value":"ReadU64Le {  }","parent":null,"children":[{"krate":0,"index":12480},{"krate":0,"index":12481},{"krate":0,"index":12483}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12433},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":12792792,"byte_end":12792802,"line_start":128,"line_end":128,"column_start":9,"column_end":19},"name":"ReadU128Le","qualname":"::io::util::read_int::ReadU128Le","value":"ReadU128Le {  }","parent":null,"children":[{"krate":0,"index":12435},{"krate":0,"index":12436},{"krate":0,"index":12438}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12388},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":12792833,"byte_end":12792842,"line_start":130,"line_end":130,"column_start":9,"column_end":18},"name":"ReadI16Le","qualname":"::io::util::read_int::ReadI16Le","value":"ReadI16Le {  }","parent":null,"children":[{"krate":0,"index":12390},{"krate":0,"index":12391},{"krate":0,"index":12393}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12343},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":12792870,"byte_end":12792879,"line_start":131,"line_end":131,"column_start":9,"column_end":18},"name":"ReadI32Le","qualname":"::io::util::read_int::ReadI32Le","value":"ReadI32Le {  }","parent":null,"children":[{"krate":0,"index":12345},{"krate":0,"index":12346},{"krate":0,"index":12348}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12298},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":12792907,"byte_end":12792916,"line_start":132,"line_end":132,"column_start":9,"column_end":18},"name":"ReadI64Le","qualname":"::io::util::read_int::ReadI64Le","value":"ReadI64Le {  }","parent":null,"children":[{"krate":0,"index":12300},{"krate":0,"index":12301},{"krate":0,"index":12303}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12253},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":12792944,"byte_end":12792954,"line_start":133,"line_end":133,"column_start":9,"column_end":19},"name":"ReadI128Le","qualname":"::io::util::read_int::ReadI128Le","value":"ReadI128Le {  }","parent":null,"children":[{"krate":0,"index":12255},{"krate":0,"index":12256},{"krate":0,"index":12258}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3599},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_line.rs","byte_start":12793404,"byte_end":12793412,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"ReadLine","qualname":"::io::util::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":3602},{"krate":0,"index":3603},{"krate":0,"index":3604},{"krate":0,"index":3605}],"decl_id":null,"docs":" Future for the [`read_line`](crate::io::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_line.rs","byte_start":12793321,"byte_end":12793388,"line_start":14,"line_end":14,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":3610},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_to_end.rs","byte_start":12797367,"byte_end":12797376,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadToEnd","qualname":"::io::util::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":3613},{"krate":0,"index":3614},{"krate":0,"index":3615}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_to_end.rs","byte_start":12797237,"byte_end":12797304,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3620},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_to_string.rs","byte_start":12803511,"byte_end":12803523,"line_start":14,"line_end":14,"column_start":16,"column_end":28},"name":"ReadToString","qualname":"::io::util::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":3623},{"krate":0,"index":3624},{"krate":0,"index":3625},{"krate":0,"index":3626}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_to_string.rs","byte_start":12803428,"byte_end":12803495,"line_start":13,"line_end":13,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":3631},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_until.rs","byte_start":12806288,"byte_end":12806297,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"ReadUntil","qualname":"::io::util::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":3634},{"krate":0,"index":3635},{"krate":0,"index":3636},{"krate":0,"index":3637}],"decl_id":null,"docs":" Future for the [`read_until`](crate::io::AsyncBufReadExt::read_until) method.\n The delimeter is included in the resulting vector.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_until.rs","byte_start":12806205,"byte_end":12806272,"line_start":13,"line_end":13,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":3643},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/repeat.rs","byte_start":12808743,"byte_end":12808749,"line_start":19,"line_end":19,"column_start":16,"column_end":22},"name":"Repeat","qualname":"::io::util::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":3644}],"decl_id":null,"docs":" An async reader which yields one byte over and over and over and over and\n over and...","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":3642},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/repeat.rs","byte_start":12809435,"byte_end":12809441,"line_start":44,"line_end":44,"column_start":12,"column_end":18},"name":"repeat","qualname":"::io::util::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3647},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/shutdown.rs","byte_start":12810390,"byte_end":12810398,"line_start":14,"line_end":14,"column_start":16,"column_end":24},"name":"Shutdown","qualname":"::io::util::shutdown::Shutdown","value":"Shutdown {  }","parent":null,"children":[{"krate":0,"index":3650}],"decl_id":null,"docs":" A future used to shutdown an I/O object.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3655},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/sink.rs","byte_start":12811570,"byte_end":12811574,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Sink","qualname":"::io::util::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":3656}],"decl_id":null,"docs":" An async writer which will move data into the void.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":3657},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/sink.rs","byte_start":12812415,"byte_end":12812419,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"sink","qualname":"::io::util::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async writer which will successfully consume all\n data.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":12214},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":12813664,"byte_end":12813669,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Split","qualname":"::io::util::split::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":12216},{"krate":0,"index":12217},{"krate":0,"index":12218},{"krate":0,"index":12219}],"decl_id":null,"docs":" Stream for the [`split`](crate::io::AsyncBufReadExt::split) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.12/src/lib.rs","byte_start":12429821,"byte_end":12429830,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3085},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":12814530,"byte_end":12814542,"line_start":57,"line_end":57,"column_start":18,"column_end":30},"name":"next_segment","qualname":"<Split<R>>::next_segment","value":"pub async fn next_segment<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next segment in the stream.","sig":null,"attributes":[{"value":"/ Returns the next segment in the stream.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":12814018,"byte_end":12814061,"line_start":40,"line_end":40,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":12814066,"byte_end":12814069,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":12814074,"byte_end":12814088,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":12814093,"byte_end":12814096,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":12814101,"byte_end":12814108,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":12814113,"byte_end":12814147,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":12814152,"byte_end":12814187,"line_start":46,"line_end":46,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":12814192,"byte_end":12814195,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":12814200,"byte_end":12814283,"line_start":48,"line_end":48,"column_start":5,"column_end":88}},{"value":"/ let mut segments = my_buf_read.split(b'f');","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":12814288,"byte_end":12814335,"line_start":49,"line_end":49,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":12814340,"byte_end":12814343,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ while let Some(segment) = segments.next_segment().await? {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":12814348,"byte_end":12814410,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/     println!(\"length = {}\", segment.len())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":12814415,"byte_end":12814461,"line_start":52,"line_end":52,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":12814466,"byte_end":12814471,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":12814476,"byte_end":12814488,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":12814493,"byte_end":12814500,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":12814505,"byte_end":12814512,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3094},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":12814780,"byte_end":12814797,"line_start":69,"line_end":69,"column_start":12,"column_end":29},"name":"poll_next_segment","qualname":"<Split<R>>::poll_next_segment","value":"pub fn poll_next_segment(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<Vec<u8>>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12167},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12827591,"byte_end":12827603,"line_start":20,"line_end":20,"column_start":16,"column_end":28},"name":"StreamReader","qualname":"::io::util::stream_reader::StreamReader","value":"StreamReader {  }","parent":null,"children":[{"krate":0,"index":12170},{"krate":0,"index":12171}],"decl_id":null,"docs":" Convert a stream of byte chunks into an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3695},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12828879,"byte_end":12828892,"line_start":68,"line_end":68,"column_start":8,"column_end":21},"name":"stream_reader","qualname":"::io::util::stream_reader::stream_reader","value":"pub fn stream_reader<S, B>(S) -> StreamReader<S, B> where S: Stream<Item =\nResult<B, io::Error>>, B: Buf","parent":null,"children":[],"decl_id":null,"docs":" Convert a stream of byte chunks into an [`AsyncRead`](crate::io::AsyncRead).","sig":null,"attributes":[{"value":"/ Convert a stream of byte chunks into an [`AsyncRead`](crate::io::AsyncRead).","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12827680,"byte_end":12827760,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12827761,"byte_end":12827764,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12827765,"byte_end":12827778,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12827779,"byte_end":12827782,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12827783,"byte_end":12827790,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12827791,"byte_end":12827812,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/ use tokio::io::{stream_reader, AsyncReadExt};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12827813,"byte_end":12827862,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12827863,"byte_end":12827883,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/ # async fn main() -> std::io::Result<()> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12827884,"byte_end":12827930,"line_start":35,"line_end":35,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12827931,"byte_end":12827934,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // Create a stream from an iterator.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12827935,"byte_end":12827975,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/ let stream = tokio::stream::iter(vec![","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12827976,"byte_end":12828018,"line_start":38,"line_end":38,"column_start":1,"column_end":43}},{"value":"/     Ok(Bytes::from_static(&[0, 1, 2, 3])),","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12828019,"byte_end":12828065,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/     Ok(Bytes::from_static(&[4, 5, 6, 7])),","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12828066,"byte_end":12828112,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/     Ok(Bytes::from_static(&[8, 9, 10, 11])),","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12828113,"byte_end":12828161,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ ]);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12828162,"byte_end":12828169,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12828170,"byte_end":12828173,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // Convert it to an AsyncRead.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12828174,"byte_end":12828208,"line_start":44,"line_end":44,"column_start":1,"column_end":35}},{"value":"/ let mut read = stream_reader(stream);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12828209,"byte_end":12828250,"line_start":45,"line_end":45,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12828251,"byte_end":12828254,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ // Read five bytes from the stream.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12828255,"byte_end":12828294,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/ let mut buf = [0; 5];","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12828295,"byte_end":12828320,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"/ read.read_exact(&mut buf).await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12828321,"byte_end":12828358,"line_start":49,"line_end":49,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(buf, [0, 1, 2, 3, 4]);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12828359,"byte_end":12828396,"line_start":50,"line_end":50,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12828397,"byte_end":12828400,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ // Read the rest of the current chunk.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12828401,"byte_end":12828443,"line_start":52,"line_end":52,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 3);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12828444,"byte_end":12828490,"line_start":53,"line_end":53,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(&buf[..3], [5, 6, 7]);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12828491,"byte_end":12828528,"line_start":54,"line_end":54,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12828529,"byte_end":12828532,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // Read the next chunk.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12828533,"byte_end":12828560,"line_start":56,"line_end":56,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 4);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12828561,"byte_end":12828607,"line_start":57,"line_end":57,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(&buf[..4], [8, 9, 10, 11]);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12828608,"byte_end":12828650,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12828651,"byte_end":12828654,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ // We have now reached the end.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12828655,"byte_end":12828690,"line_start":60,"line_end":60,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 0);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12828691,"byte_end":12828737,"line_start":61,"line_end":61,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12828738,"byte_end":12828741,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12828742,"byte_end":12828754,"line_start":63,"line_end":63,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12828755,"byte_end":12828762,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12828763,"byte_end":12828770,"line_start":65,"line_end":65,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12125},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":12833281,"byte_end":12833293,"line_start":25,"line_end":25,"column_start":16,"column_end":28},"name":"ReaderStream","qualname":"::io::util::reader_stream::ReaderStream","value":"ReaderStream {  }","parent":null,"children":[{"krate":0,"index":12127},{"krate":0,"index":12128}],"decl_id":null,"docs":" Convert an [`AsyncRead`] implementor into a\n [`Stream`] of Result<[`Bytes`], std::io::Error>.\n After first error it will stop.\n Additionally, this stream is fused: after it returns None at some\n moment, it is guaranteed that further `next()`, `poll_next()` and\n similar functions will instantly return None.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3749},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":12834438,"byte_end":12834451,"line_start":63,"line_end":63,"column_start":8,"column_end":21},"name":"reader_stream","qualname":"::io::util::reader_stream::reader_stream","value":"pub fn reader_stream<R>(R) -> ReaderStream<R> where R: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Convert an [`AsyncRead`] implementor into a\n [`Stream`] of Result<[`Bytes`], std::io::Error>.","sig":null,"attributes":[{"value":"/ Convert an [`AsyncRead`] implementor into a","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":12833766,"byte_end":12833813,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/ [`Stream`] of Result<[`Bytes`], std::io::Error>.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":12833814,"byte_end":12833866,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":12833867,"byte_end":12833870,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":12833871,"byte_end":12833884,"line_start":42,"line_end":42,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":12833885,"byte_end":12833888,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":12833889,"byte_end":12833896,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":12833897,"byte_end":12833917,"line_start":45,"line_end":45,"column_start":1,"column_end":21}},{"value":"/ # async fn main() -> std::io::Result<()> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":12833918,"byte_end":12833964,"line_start":46,"line_end":46,"column_start":1,"column_end":47}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":12833965,"byte_end":12833998,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":12833999,"byte_end":12834002,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ let data: &[u8] = b\"hello, world!\";","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":12834003,"byte_end":12834042,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/ let mut stream = tokio::io::reader_stream(data);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":12834043,"byte_end":12834095,"line_start":50,"line_end":50,"column_start":1,"column_end":53}},{"value":"/ let mut stream_contents = Vec::new();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":12834096,"byte_end":12834137,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"/ while let Some(chunk) = stream.next().await {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":12834138,"byte_end":12834187,"line_start":52,"line_end":52,"column_start":1,"column_end":50}},{"value":"/    stream_contents.extend_from_slice(chunk?.as_ref());","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":12834188,"byte_end":12834246,"line_start":53,"line_end":53,"column_start":1,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":12834247,"byte_end":12834252,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(stream_contents, data);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":12834253,"byte_end":12834291,"line_start":55,"line_end":55,"column_start":1,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":12834292,"byte_end":12834304,"line_start":56,"line_end":56,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":12834305,"byte_end":12834312,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":12834313,"byte_end":12834320,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":12834321,"byte_end":12834324,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: crate::io::AsyncRead","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":12834325,"byte_end":12834364,"line_start":60,"line_end":60,"column_start":1,"column_end":40}},{"value":"/ [`Stream`]: crate::stream::Stream","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":12834365,"byte_end":12834402,"line_start":61,"line_end":61,"column_start":1,"column_end":38}},{"value":"/ [`Bytes`]: bytes::Bytes","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":12834403,"byte_end":12834430,"line_start":62,"line_end":62,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":12085},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":12816392,"byte_end":12816396,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::util::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":12087},{"krate":0,"index":12088}],"decl_id":null,"docs":" Stream for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.12/src/lib.rs","byte_start":12429821,"byte_end":12429830,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3137},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":12816986,"byte_end":12816991,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":12816683,"byte_end":12816736,"line_start":30,"line_end":30,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":12816741,"byte_end":12816787,"line_start":31,"line_end":31,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":12816792,"byte_end":12816795,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":12816800,"byte_end":12816810,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":12816815,"byte_end":12816818,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":12816823,"byte_end":12816900,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":12816905,"byte_end":12816974,"line_start":36,"line_end":36,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3138},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":12817310,"byte_end":12817319,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.\n","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":12817039,"byte_end":12817110,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":12817115,"byte_end":12817189,"line_start":42,"line_end":42,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":12817194,"byte_end":12817269,"line_start":43,"line_end":43,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":12817274,"byte_end":12817298,"line_start":44,"line_end":44,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3139},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":12817442,"byte_end":12817449,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":12817384,"byte_end":12817430,"line_start":49,"line_end":49,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3140},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":12817741,"byte_end":12817748,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":12817496,"byte_end":12817550,"line_start":54,"line_end":54,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":12817555,"byte_end":12817558,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":12817563,"byte_end":12817636,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":12817641,"byte_end":12817713,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":12817718,"byte_end":12817729,"line_start":58,"line_end":58,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3141},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":12818059,"byte_end":12818070,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Take<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":12817807,"byte_end":12817868,"line_start":63,"line_end":63,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":12817873,"byte_end":12817876,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":12817881,"byte_end":12817954,"line_start":65,"line_end":65,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":12817959,"byte_end":12818031,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":12818036,"byte_end":12818047,"line_start":67,"line_end":67,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3142},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":12818216,"byte_end":12818226,"line_start":73,"line_end":73,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.\n","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":12818150,"byte_end":12818204,"line_start":72,"line_end":72,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":3763},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write.rs","byte_start":12820156,"byte_end":12820161,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Write","qualname":"::io::util::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":3766},{"krate":0,"index":3767}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write.rs","byte_start":12820073,"byte_end":12820140,"line_start":11,"line_end":11,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":3772},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_all.rs","byte_start":12821057,"byte_end":12821065,"line_start":12,"line_end":12,"column_start":16,"column_end":24},"name":"WriteAll","qualname":"::io::util::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":3775},{"krate":0,"index":3776}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_all.rs","byte_start":12820974,"byte_end":12821041,"line_start":11,"line_end":11,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":3781},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_buf.rs","byte_start":12822448,"byte_end":12822456,"line_start":13,"line_end":13,"column_start":16,"column_end":24},"name":"WriteBuf","qualname":"::io::util::write_buf::WriteBuf","value":"WriteBuf {  }","parent":null,"children":[{"krate":0,"index":3785},{"krate":0,"index":3786}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_buf.rs","byte_start":12822365,"byte_end":12822432,"line_start":12,"line_end":12,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":12039},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":12826337,"byte_end":12826344,"line_start":111,"line_end":111,"column_start":10,"column_end":17},"name":"WriteU8","qualname":"::io::util::write_int::WriteU8","value":"WriteU8 {  }","parent":null,"children":[{"krate":0,"index":12041},{"krate":0,"index":12042}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12002},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":12826360,"byte_end":12826367,"line_start":112,"line_end":112,"column_start":10,"column_end":17},"name":"WriteI8","qualname":"::io::util::write_int::WriteI8","value":"WriteI8 {  }","parent":null,"children":[{"krate":0,"index":12004},{"krate":0,"index":12005}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11957},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":12826383,"byte_end":12826391,"line_start":114,"line_end":114,"column_start":9,"column_end":17},"name":"WriteU16","qualname":"::io::util::write_int::WriteU16","value":"WriteU16 {  }","parent":null,"children":[{"krate":0,"index":11959},{"krate":0,"index":11960},{"krate":0,"index":11962}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11912},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":12826416,"byte_end":12826424,"line_start":115,"line_end":115,"column_start":9,"column_end":17},"name":"WriteU32","qualname":"::io::util::write_int::WriteU32","value":"WriteU32 {  }","parent":null,"children":[{"krate":0,"index":11914},{"krate":0,"index":11915},{"krate":0,"index":11917}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11867},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":12826449,"byte_end":12826457,"line_start":116,"line_end":116,"column_start":9,"column_end":17},"name":"WriteU64","qualname":"::io::util::write_int::WriteU64","value":"WriteU64 {  }","parent":null,"children":[{"krate":0,"index":11869},{"krate":0,"index":11870},{"krate":0,"index":11872}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11822},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":12826482,"byte_end":12826491,"line_start":117,"line_end":117,"column_start":9,"column_end":18},"name":"WriteU128","qualname":"::io::util::write_int::WriteU128","value":"WriteU128 {  }","parent":null,"children":[{"krate":0,"index":11824},{"krate":0,"index":11825},{"krate":0,"index":11827}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11777},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":12826519,"byte_end":12826527,"line_start":119,"line_end":119,"column_start":9,"column_end":17},"name":"WriteI16","qualname":"::io::util::write_int::WriteI16","value":"WriteI16 {  }","parent":null,"children":[{"krate":0,"index":11779},{"krate":0,"index":11780},{"krate":0,"index":11782}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11732},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":12826552,"byte_end":12826560,"line_start":120,"line_end":120,"column_start":9,"column_end":17},"name":"WriteI32","qualname":"::io::util::write_int::WriteI32","value":"WriteI32 {  }","parent":null,"children":[{"krate":0,"index":11734},{"krate":0,"index":11735},{"krate":0,"index":11737}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11687},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":12826585,"byte_end":12826593,"line_start":121,"line_end":121,"column_start":9,"column_end":17},"name":"WriteI64","qualname":"::io::util::write_int::WriteI64","value":"WriteI64 {  }","parent":null,"children":[{"krate":0,"index":11689},{"krate":0,"index":11690},{"krate":0,"index":11692}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11642},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":12826618,"byte_end":12826627,"line_start":122,"line_end":122,"column_start":9,"column_end":18},"name":"WriteI128","qualname":"::io::util::write_int::WriteI128","value":"WriteI128 {  }","parent":null,"children":[{"krate":0,"index":11644},{"krate":0,"index":11645},{"krate":0,"index":11647}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11597},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":12826655,"byte_end":12826665,"line_start":124,"line_end":124,"column_start":9,"column_end":19},"name":"WriteU16Le","qualname":"::io::util::write_int::WriteU16Le","value":"WriteU16Le {  }","parent":null,"children":[{"krate":0,"index":11599},{"krate":0,"index":11600},{"krate":0,"index":11602}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11552},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":12826693,"byte_end":12826703,"line_start":125,"line_end":125,"column_start":9,"column_end":19},"name":"WriteU32Le","qualname":"::io::util::write_int::WriteU32Le","value":"WriteU32Le {  }","parent":null,"children":[{"krate":0,"index":11554},{"krate":0,"index":11555},{"krate":0,"index":11557}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11507},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":12826731,"byte_end":12826741,"line_start":126,"line_end":126,"column_start":9,"column_end":19},"name":"WriteU64Le","qualname":"::io::util::write_int::WriteU64Le","value":"WriteU64Le {  }","parent":null,"children":[{"krate":0,"index":11509},{"krate":0,"index":11510},{"krate":0,"index":11512}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11462},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":12826769,"byte_end":12826780,"line_start":127,"line_end":127,"column_start":9,"column_end":20},"name":"WriteU128Le","qualname":"::io::util::write_int::WriteU128Le","value":"WriteU128Le {  }","parent":null,"children":[{"krate":0,"index":11464},{"krate":0,"index":11465},{"krate":0,"index":11467}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11417},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":12826811,"byte_end":12826821,"line_start":129,"line_end":129,"column_start":9,"column_end":19},"name":"WriteI16Le","qualname":"::io::util::write_int::WriteI16Le","value":"WriteI16Le {  }","parent":null,"children":[{"krate":0,"index":11419},{"krate":0,"index":11420},{"krate":0,"index":11422}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11372},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":12826849,"byte_end":12826859,"line_start":130,"line_end":130,"column_start":9,"column_end":19},"name":"WriteI32Le","qualname":"::io::util::write_int::WriteI32Le","value":"WriteI32Le {  }","parent":null,"children":[{"krate":0,"index":11374},{"krate":0,"index":11375},{"krate":0,"index":11377}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11327},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":12826887,"byte_end":12826897,"line_start":131,"line_end":131,"column_start":9,"column_end":19},"name":"WriteI64Le","qualname":"::io::util::write_int::WriteI64Le","value":"WriteI64Le {  }","parent":null,"children":[{"krate":0,"index":11329},{"krate":0,"index":11330},{"krate":0,"index":11332}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11282},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":12826925,"byte_end":12826936,"line_start":132,"line_end":132,"column_start":9,"column_end":20},"name":"WriteI128Le","qualname":"::io::util::write_int::WriteI128Le","value":"WriteI128Le {  }","parent":null,"children":[{"krate":0,"index":11284},{"krate":0,"index":11285},{"krate":0,"index":11287}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":445},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":531},{"krate":0,"index":3948},{"krate":0,"index":4371},{"krate":0,"index":4374},{"krate":0,"index":4416},{"krate":0,"index":4598},{"krate":0,"index":4619},{"krate":0,"index":5247},{"krate":0,"index":5250},{"krate":0,"index":5253}],"decl_id":null,"docs":" TCP/UDP/Unix bindings for `tokio`.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":71949,"byte_end":71967,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ TCP/UDP/Unix bindings for `tokio`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":71969,"byte_end":72007,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72008,"byte_end":72011,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module contains the TCP/UDP/Unix networking types, similar to the standard","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72012,"byte_end":72095,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"/ library, which can be used to implement networking protocols.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72096,"byte_end":72161,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72162,"byte_end":72165,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72166,"byte_end":72184,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72185,"byte_end":72188,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72189,"byte_end":72277,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/ * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72278,"byte_end":72347,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ * [`UnixListener`] and [`UnixStream`] provide functionality for communication over a","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72348,"byte_end":72436,"line_start":12,"line_end":12,"column_start":1,"column_end":89}},{"value":"/ Unix Domain Stream Socket **(available on Unix only)**","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72437,"byte_end":72495,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"/ * [`UnixDatagram`] provides functionality for communication","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72496,"byte_end":72559,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/ over Unix Domain Datagram Socket **(available on Unix only)**","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72560,"byte_end":72625,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72627,"byte_end":72630,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`TcpListener`]: TcpListener","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72631,"byte_end":72663,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72664,"byte_end":72692,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ [`UdpSocket`]: UdpSocket","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72693,"byte_end":72721,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ [`UnixListener`]: UnixListener","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72722,"byte_end":72756,"line_start":21,"line_end":21,"column_start":1,"column_end":35}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72757,"byte_end":72787,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`UnixDatagram`]: UnixDatagram","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72788,"byte_end":72822,"line_start":23,"line_end":23,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":472},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":74079,"byte_end":74092,"line_start":22,"line_end":22,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs: sealed::ToSocketAddrsPriv","parent":null,"children":[],"decl_id":null,"docs":" Converts or resolves without blocking to one or more `SocketAddr` values.","sig":null,"attributes":[{"value":"/ Converts or resolves without blocking to one or more `SocketAddr` values.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73391,"byte_end":73468,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73469,"byte_end":73472,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # DNS","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73473,"byte_end":73482,"line_start":8,"line_end":8,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73483,"byte_end":73486,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Implementations of `ToSocketAddrs` for string types require a DNS lookup.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73487,"byte_end":73564,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ These implementations are only provided when Tokio is used with the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73565,"byte_end":73636,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ **`dns`** feature flag.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73637,"byte_end":73664,"line_start":12,"line_end":12,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73665,"byte_end":73668,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Calling","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73669,"byte_end":73682,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73683,"byte_end":73686,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait is only used as an argument to Tokio functions that","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73687,"byte_end":73764,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ need to reference a target socket address. To perform a `SocketAddr`","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73765,"byte_end":73837,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ conversion directly, use [`lookup_host()`](super::lookup_host()).","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73838,"byte_end":73907,"line_start":18,"line_end":18,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73908,"byte_end":73911,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and is intended to be opaque. The details of the trait","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73912,"byte_end":73991,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ will change. Stabilization is pending enhancements to the Rust language.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73992,"byte_end":74068,"line_start":21,"line_end":21,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":527},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":80099,"byte_end":80116,"line_start":250,"line_end":250,"column_start":15,"column_end":32},"name":"ToSocketAddrsPriv","qualname":"::net::addr::sealed::ToSocketAddrsPriv","value":"ToSocketAddrsPriv","parent":null,"children":[{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":528},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":80132,"byte_end":80136,"line_start":251,"line_end":251,"column_start":14,"column_end":18},"name":"Iter","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Iter","value":"type Iter: Iterator<Item = SocketAddr> + Send + 'static;","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":529},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":80197,"byte_end":80203,"line_start":252,"line_end":252,"column_start":14,"column_end":20},"name":"Future","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Future","value":"type Future: Future<Output = io::Result<Self::Iter>> + Send + 'static;","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":80275,"byte_end":80290,"line_start":254,"line_end":254,"column_start":12,"column_end":27},"name":"to_socket_addrs","qualname":"::net::addr::sealed::ToSocketAddrsPriv::to_socket_addrs","value":"pub fn to_socket_addrs(&Self) -> Self::Future","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3948},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tcp","qualname":"::net::tcp","value":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/mod.rs","parent":null,"children":[{"krate":0,"index":3949},{"krate":0,"index":4026},{"krate":0,"index":4029},{"krate":0,"index":4056},{"krate":0,"index":4059},{"krate":0,"index":4115},{"krate":0,"index":4116},{"krate":0,"index":4119},{"krate":0,"index":4122},{"krate":0,"index":4198},{"krate":0,"index":4199},{"krate":0,"index":4202},{"krate":0,"index":4205},{"krate":0,"index":4206},{"krate":0,"index":4208},{"krate":0,"index":4368}],"decl_id":null,"docs":" TCP utility types\n","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":22609,"byte_end":22632,"line_start":298,"line_end":298,"column_start":13,"column_end":36}},{"value":"/ TCP utility types","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/mod.rs","byte_start":12835647,"byte_end":12835668,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":4377},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12838268,"byte_end":12838279,"line_start":69,"line_end":69,"column_start":16,"column_end":27},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":4378}],"decl_id":null,"docs":" A TCP socket server, listening for connections.","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":22609,"byte_end":22632,"line_start":298,"line_end":298,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3990},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12840248,"byte_end":12840252,"line_start":132,"line_end":132,"column_start":18,"column_end":22},"name":"bind","qualname":"<TcpListener>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TcpListener, which will be bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new TcpListener, which will be bound to the specified address.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12838362,"byte_end":12838438,"line_start":75,"line_end":75,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12838443,"byte_end":12838446,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ The returned listener is ready for accepting connections.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12838451,"byte_end":12838512,"line_start":77,"line_end":77,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12838517,"byte_end":12838520,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12838525,"byte_end":12838600,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ to this listener. The port allocated can be queried via the `local_addr`","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12838605,"byte_end":12838681,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ method.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12838686,"byte_end":12838697,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12838702,"byte_end":12838705,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ The address type can be any implementor of the [`ToSocketAddrs`] trait.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12838710,"byte_end":12838785,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/ Note that strings only implement this trait when the **`dns`** feature","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12838790,"byte_end":12838864,"line_start":84,"line_end":84,"column_start":5,"column_end":79}},{"value":"/ is enabled, as strings may contain domain names that need to be resolved.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12838869,"byte_end":12838946,"line_start":85,"line_end":85,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12838951,"byte_end":12838954,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, bind will be attempted with each of","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12838959,"byte_end":12839035,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ the addresses until one succeeds and returns the listener. If none of","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12839040,"byte_end":12839113,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ the addresses succeed in creating a listener, the error returned from","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12839118,"byte_end":12839191,"line_start":89,"line_end":89,"column_start":5,"column_end":78}},{"value":"/ the last attempt (the last address) is returned.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12839196,"byte_end":12839248,"line_start":90,"line_end":90,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12839253,"byte_end":12839256,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ This function sets the `SO_REUSEADDR` option on the socket.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12839261,"byte_end":12839324,"line_start":92,"line_end":92,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12839329,"byte_end":12839332,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12839337,"byte_end":12839391,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12839396,"byte_end":12839399,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12839404,"byte_end":12839418,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12839423,"byte_end":12839426,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12839431,"byte_end":12839444,"line_start":98,"line_end":98,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12839449,"byte_end":12839481,"line_start":99,"line_end":99,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12839486,"byte_end":12839489,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12839494,"byte_end":12839510,"line_start":101,"line_end":101,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12839515,"byte_end":12839518,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12839523,"byte_end":12839541,"line_start":103,"line_end":103,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12839546,"byte_end":12839585,"line_start":104,"line_end":104,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:2345\").await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12839590,"byte_end":12839656,"line_start":105,"line_end":105,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12839661,"byte_end":12839664,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/     // use the listener","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12839669,"byte_end":12839696,"line_start":107,"line_end":107,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12839701,"byte_end":12839704,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/     # let _ = listener;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12839709,"byte_end":12839736,"line_start":109,"line_end":109,"column_start":5,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12839741,"byte_end":12839755,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12839760,"byte_end":12839765,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12839770,"byte_end":12839777,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12839782,"byte_end":12839785,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Without the `dns` feature:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12839790,"byte_end":12839820,"line_start":114,"line_end":114,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12839825,"byte_end":12839828,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12839833,"byte_end":12839846,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12839851,"byte_end":12839883,"line_start":117,"line_end":117,"column_start":5,"column_end":37}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12839888,"byte_end":12839915,"line_start":118,"line_end":118,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12839920,"byte_end":12839923,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12839928,"byte_end":12839944,"line_start":120,"line_end":120,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12839949,"byte_end":12839952,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12839957,"byte_end":12839975,"line_start":122,"line_end":122,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12839980,"byte_end":12840019,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind((Ipv4Addr::new(127, 0, 0, 1), 2345)).await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12840024,"byte_end":12840109,"line_start":124,"line_end":124,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12840114,"byte_end":12840117,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/     // use the listener","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12840122,"byte_end":12840149,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12840154,"byte_end":12840157,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/     # let _ = listener;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12840162,"byte_end":12840189,"line_start":128,"line_end":128,"column_start":5,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12840194,"byte_end":12840208,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12840213,"byte_end":12840218,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12840223,"byte_end":12840230,"line_start":131,"line_end":131,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3996},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12841824,"byte_end":12841830,"line_start":184,"line_end":184,"column_start":18,"column_end":24},"name":"accept","qualname":"<TcpListener>::accept","value":"pub async fn accept<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection from this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection from this listener.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12840965,"byte_end":12841022,"line_start":157,"line_end":157,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12841027,"byte_end":12841030,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ This function will yield once a new TCP connection is established. When","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12841035,"byte_end":12841110,"line_start":159,"line_end":159,"column_start":5,"column_end":80}},{"value":"/ established, the corresponding [`TcpStream`] and the remote peer's","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12841115,"byte_end":12841185,"line_start":160,"line_end":160,"column_start":5,"column_end":75}},{"value":"/ address will be returned.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12841190,"byte_end":12841219,"line_start":161,"line_end":161,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12841224,"byte_end":12841227,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12841232,"byte_end":12841279,"line_start":163,"line_end":163,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12841284,"byte_end":12841287,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12841292,"byte_end":12841306,"line_start":165,"line_end":165,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12841311,"byte_end":12841314,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12841319,"byte_end":12841332,"line_start":167,"line_end":167,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12841337,"byte_end":12841369,"line_start":168,"line_end":168,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12841374,"byte_end":12841377,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12841382,"byte_end":12841398,"line_start":170,"line_end":170,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12841403,"byte_end":12841406,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12841411,"byte_end":12841429,"line_start":172,"line_end":172,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12841434,"byte_end":12841473,"line_start":173,"line_end":173,"column_start":5,"column_end":44}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12841478,"byte_end":12841548,"line_start":174,"line_end":174,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12841553,"byte_end":12841556,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/     match listener.accept().await {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12841561,"byte_end":12841600,"line_start":176,"line_end":176,"column_start":5,"column_end":44}},{"value":"/         Ok((_socket, addr)) => println!(\"new client: {:?}\", addr),","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12841605,"byte_end":12841675,"line_start":177,"line_end":177,"column_start":5,"column_end":75}},{"value":"/         Err(e) => println!(\"couldn't get client: {:?}\", e),","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12841680,"byte_end":12841743,"line_start":178,"line_end":178,"column_start":5,"column_end":68}},{"value":"/     }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12841748,"byte_end":12841757,"line_start":179,"line_end":179,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12841762,"byte_end":12841765,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12841770,"byte_end":12841784,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12841789,"byte_end":12841794,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12841799,"byte_end":12841806,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4000},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12842157,"byte_end":12842168,"line_start":192,"line_end":192,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<TcpListener>::poll_accept","value":"pub fn poll_accept(&mut Self, &mut Context)\n-> Poll<io::Result<(TcpStream, SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to accept a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Polls to accept a new incoming connection to this listener.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12841943,"byte_end":12842006,"line_start":188,"line_end":188,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12842011,"byte_end":12842014,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ If there is no connection to accept, `Poll::Pending` is returned and","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12842019,"byte_end":12842091,"line_start":190,"line_end":190,"column_start":5,"column_end":77}},{"value":"/ the current task will be notified by a waker.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12842096,"byte_end":12842145,"line_start":191,"line_end":191,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4002},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12845030,"byte_end":12845038,"line_start":266,"line_end":266,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpListener>::from_std","value":"pub fn from_std(net::TcpListener) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TCP listener from the standard library's TCP listener.","sig":null,"attributes":[{"value":"/ Creates a new TCP listener from the standard library's TCP listener.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12843015,"byte_end":12843087,"line_start":220,"line_end":220,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12843092,"byte_end":12843095,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ This method can be used when the `Handle::tcp_listen` method isn't","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12843100,"byte_end":12843170,"line_start":222,"line_end":222,"column_start":5,"column_end":75}},{"value":"/ sufficient because perhaps some more configuration is needed in terms of","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12843175,"byte_end":12843251,"line_start":223,"line_end":223,"column_start":5,"column_end":81}},{"value":"/ before the calls to `bind` and `listen`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12843256,"byte_end":12843300,"line_start":224,"line_end":224,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12843305,"byte_end":12843308,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ This API is typically paired with the `net2` crate and the `TcpBuilder`","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12843313,"byte_end":12843388,"line_start":226,"line_end":226,"column_start":5,"column_end":80}},{"value":"/ type to build up and customize a listener before it's shipped off to the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12843393,"byte_end":12843469,"line_start":227,"line_end":227,"column_start":5,"column_end":81}},{"value":"/ backing event loop. This allows configuration of options like","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12843474,"byte_end":12843539,"line_start":228,"line_end":228,"column_start":5,"column_end":70}},{"value":"/ `SO_REUSEPORT`, binding to multiple addresses, etc.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12843544,"byte_end":12843599,"line_start":229,"line_end":229,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12843604,"byte_end":12843607,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ The `addr` argument here is one of the addresses that `listener` is","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12843612,"byte_end":12843683,"line_start":231,"line_end":231,"column_start":5,"column_end":76}},{"value":"/ bound to and the listener will only be guaranteed to accept connections","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12843688,"byte_end":12843763,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ of the same address type currently.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12843768,"byte_end":12843807,"line_start":233,"line_end":233,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12843812,"byte_end":12843815,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ The platform specific behavior of this function looks like:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12843820,"byte_end":12843883,"line_start":235,"line_end":235,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12843888,"byte_end":12843891,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ * On Unix, the socket is placed into nonblocking mode and connections","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12843896,"byte_end":12843969,"line_start":237,"line_end":237,"column_start":5,"column_end":78}},{"value":"/   can be accepted as normal","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12843974,"byte_end":12844005,"line_start":238,"line_end":238,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12844010,"byte_end":12844013,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ * On Windows, the address is stored internally and all future accepts","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12844018,"byte_end":12844091,"line_start":240,"line_end":240,"column_start":5,"column_end":78}},{"value":"/   will only be for the same IP version as `addr` specified. That is, if","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12844096,"byte_end":12844171,"line_start":241,"line_end":241,"column_start":5,"column_end":80}},{"value":"/   `addr` is an IPv4 address then all sockets accepted will be IPv4 as","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12844176,"byte_end":12844249,"line_start":242,"line_end":242,"column_start":5,"column_end":78}},{"value":"/   well (same for IPv6).","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12844254,"byte_end":12844281,"line_start":243,"line_end":243,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12844286,"byte_end":12844289,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12844294,"byte_end":12844308,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12844313,"byte_end":12844316,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12844321,"byte_end":12844339,"line_start":247,"line_end":247,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12844344,"byte_end":12844370,"line_start":248,"line_end":248,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12844375,"byte_end":12844407,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12844412,"byte_end":12844415,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12844420,"byte_end":12844438,"line_start":251,"line_end":251,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12844443,"byte_end":12844494,"line_start":252,"line_end":252,"column_start":5,"column_end":56}},{"value":"/     let std_listener = std::net::TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12844499,"byte_end":12844570,"line_start":253,"line_end":253,"column_start":5,"column_end":76}},{"value":"/     let listener = TcpListener::from_std(std_listener)?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12844575,"byte_end":12844635,"line_start":254,"line_end":254,"column_start":5,"column_end":65}},{"value":"/     Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12844640,"byte_end":12844654,"line_start":255,"line_end":255,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12844659,"byte_end":12844664,"line_start":256,"line_end":256,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12844669,"byte_end":12844676,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12844681,"byte_end":12844684,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12844689,"byte_end":12844701,"line_start":259,"line_end":259,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12844706,"byte_end":12844709,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12844714,"byte_end":12844774,"line_start":261,"line_end":261,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12844779,"byte_end":12844782,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12844787,"byte_end":12844857,"line_start":263,"line_end":263,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12844862,"byte_end":12844935,"line_start":264,"line_end":264,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12844940,"byte_end":12845018,"line_start":265,"line_end":265,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":4004},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12846122,"byte_end":12846132,"line_start":300,"line_end":300,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12845396,"byte_end":12845457,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12845462,"byte_end":12845465,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when binding to port 0 to figure out","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12845470,"byte_end":12845543,"line_start":279,"line_end":279,"column_start":5,"column_end":78}},{"value":"/ which port was actually bound.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12845548,"byte_end":12845582,"line_start":280,"line_end":280,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12845587,"byte_end":12845590,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12845595,"byte_end":12845609,"line_start":282,"line_end":282,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12845614,"byte_end":12845617,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12845622,"byte_end":12845640,"line_start":284,"line_end":284,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12845645,"byte_end":12845677,"line_start":285,"line_end":285,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12845682,"byte_end":12845685,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12845690,"byte_end":12845706,"line_start":287,"line_end":287,"column_start":5,"column_end":21}},{"value":"/ use std::net::{Ipv4Addr, SocketAddr, SocketAddrV4};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12845711,"byte_end":12845766,"line_start":288,"line_end":288,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12845771,"byte_end":12845774,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12845779,"byte_end":12845797,"line_start":290,"line_end":290,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12845802,"byte_end":12845841,"line_start":291,"line_end":291,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12845846,"byte_end":12845912,"line_start":292,"line_end":292,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12845917,"byte_end":12845920,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(listener.local_addr()?,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12845925,"byte_end":12845967,"line_start":294,"line_end":294,"column_start":5,"column_end":47}},{"value":"/                SocketAddr::V4(SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080)));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12845972,"byte_end":12846061,"line_start":295,"line_end":295,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12846066,"byte_end":12846069,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12846074,"byte_end":12846088,"line_start":297,"line_end":297,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12846093,"byte_end":12846098,"line_start":298,"line_end":298,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12846103,"byte_end":12846110,"line_start":299,"line_end":299,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4005},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12847563,"byte_end":12847571,"line_start":340,"line_end":340,"column_start":12,"column_end":20},"name":"incoming","qualname":"<TcpListener>::incoming","value":"pub fn incoming(&mut Self) -> Incoming","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the connections being received on this listener.","sig":null,"attributes":[{"value":"/ Returns a stream over the connections being received on this listener.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12846218,"byte_end":12846292,"line_start":304,"line_end":304,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12846297,"byte_end":12846300,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ Note that `TcpListener` also directly implements `Stream`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12846305,"byte_end":12846367,"line_start":306,"line_end":306,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12846372,"byte_end":12846375,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ The returned stream will never return `None` and will also not yield the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12846380,"byte_end":12846456,"line_start":308,"line_end":308,"column_start":5,"column_end":81}},{"value":"/ peer's `SocketAddr` structure. Iterating over it is equivalent to","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12846461,"byte_end":12846530,"line_start":309,"line_end":309,"column_start":5,"column_end":74}},{"value":"/ calling accept in a loop.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12846535,"byte_end":12846564,"line_start":310,"line_end":310,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12846569,"byte_end":12846572,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12846577,"byte_end":12846589,"line_start":312,"line_end":312,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12846594,"byte_end":12846597,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ Note that accepting a connection can lead to various errors and not all","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12846602,"byte_end":12846677,"line_start":314,"line_end":314,"column_start":5,"column_end":80}},{"value":"/ of them are necessarily fatal ‒ for example having too many open file","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12846682,"byte_end":12846757,"line_start":315,"line_end":315,"column_start":5,"column_end":78}},{"value":"/ descriptors or the other side closing the connection while it waits in","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12846762,"byte_end":12846836,"line_start":316,"line_end":316,"column_start":5,"column_end":79}},{"value":"/ an accept queue. These would terminate the stream if not handled in any","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12846841,"byte_end":12846916,"line_start":317,"line_end":317,"column_start":5,"column_end":80}},{"value":"/ way.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12846921,"byte_end":12846929,"line_start":318,"line_end":318,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12846934,"byte_end":12846937,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12846942,"byte_end":12846956,"line_start":320,"line_end":320,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12846961,"byte_end":12846964,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12846969,"byte_end":12846982,"line_start":322,"line_end":322,"column_start":5,"column_end":18}},{"value":"/ use tokio::{net::TcpListener, stream::StreamExt};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12846987,"byte_end":12847040,"line_start":323,"line_end":323,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12847045,"byte_end":12847048,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12847053,"byte_end":12847071,"line_start":325,"line_end":325,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12847076,"byte_end":12847097,"line_start":326,"line_end":326,"column_start":5,"column_end":26}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await.unwrap();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12847102,"byte_end":12847180,"line_start":327,"line_end":327,"column_start":5,"column_end":83}},{"value":"/     let mut incoming = listener.incoming();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12847185,"byte_end":12847232,"line_start":328,"line_end":328,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12847237,"byte_end":12847240,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/     while let Some(stream) = incoming.next().await {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12847245,"byte_end":12847301,"line_start":330,"line_end":330,"column_start":5,"column_end":61}},{"value":"/         match stream {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12847306,"byte_end":12847332,"line_start":331,"line_end":331,"column_start":5,"column_end":31}},{"value":"/             Ok(stream) => {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12847337,"byte_end":12847368,"line_start":332,"line_end":332,"column_start":5,"column_end":36}},{"value":"/                 println!(\"new client!\");","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12847373,"byte_end":12847417,"line_start":333,"line_end":333,"column_start":5,"column_end":49}},{"value":"/             }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12847422,"byte_end":12847439,"line_start":334,"line_end":334,"column_start":5,"column_end":22}},{"value":"/             Err(e) => { /* connection failed */ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12847444,"byte_end":12847497,"line_start":335,"line_end":335,"column_start":5,"column_end":58}},{"value":"/         }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12847502,"byte_end":12847515,"line_start":336,"line_end":336,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12847520,"byte_end":12847529,"line_start":337,"line_end":337,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12847534,"byte_end":12847539,"line_start":338,"line_end":338,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12847544,"byte_end":12847551,"line_start":339,"line_end":339,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4006},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12848257,"byte_end":12848260,"line_start":367,"line_end":367,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12847640,"byte_end":12847698,"line_start":344,"line_end":344,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12847703,"byte_end":12847706,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12847711,"byte_end":12847771,"line_start":346,"line_end":346,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12847776,"byte_end":12847779,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12847784,"byte_end":12847821,"line_start":348,"line_end":348,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12847826,"byte_end":12847829,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12847834,"byte_end":12847848,"line_start":350,"line_end":350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12847853,"byte_end":12847856,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12847861,"byte_end":12847874,"line_start":352,"line_end":352,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12847879,"byte_end":12847911,"line_start":353,"line_end":353,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12847916,"byte_end":12847919,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12847924,"byte_end":12847940,"line_start":355,"line_end":355,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12847945,"byte_end":12847948,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12847953,"byte_end":12847971,"line_start":357,"line_end":357,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12847976,"byte_end":12848015,"line_start":358,"line_end":358,"column_start":5,"column_end":44}},{"value":"/    let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12848020,"byte_end":12848082,"line_start":359,"line_end":359,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12848087,"byte_end":12848090,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/    listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12848095,"byte_end":12848152,"line_start":361,"line_end":361,"column_start":5,"column_end":62}},{"value":"/    assert_eq!(listener.ttl()?, 100);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12848157,"byte_end":12848197,"line_start":362,"line_end":362,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12848202,"byte_end":12848205,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/    Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12848210,"byte_end":12848223,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12848228,"byte_end":12848233,"line_start":365,"line_end":365,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12848238,"byte_end":12848245,"line_start":366,"line_end":366,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4007},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12848899,"byte_end":12848906,"line_start":392,"line_end":392,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12848332,"byte_end":12848390,"line_start":371,"line_end":371,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12848395,"byte_end":12848398,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12848403,"byte_end":12848479,"line_start":373,"line_end":373,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12848484,"byte_end":12848505,"line_start":374,"line_end":374,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12848510,"byte_end":12848513,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12848518,"byte_end":12848532,"line_start":376,"line_end":376,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12848537,"byte_end":12848540,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12848545,"byte_end":12848558,"line_start":378,"line_end":378,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12848563,"byte_end":12848595,"line_start":379,"line_end":379,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12848600,"byte_end":12848603,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12848608,"byte_end":12848624,"line_start":381,"line_end":381,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12848629,"byte_end":12848632,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12848637,"byte_end":12848655,"line_start":383,"line_end":383,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12848660,"byte_end":12848699,"line_start":384,"line_end":384,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12848704,"byte_end":12848767,"line_start":385,"line_end":385,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12848772,"byte_end":12848775,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/     listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12848780,"byte_end":12848838,"line_start":387,"line_end":387,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12848843,"byte_end":12848846,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12848851,"byte_end":12848865,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12848870,"byte_end":12848875,"line_start":390,"line_end":390,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12848880,"byte_end":12848887,"line_start":391,"line_end":391,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4379},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/incoming.rs","byte_start":12851179,"byte_end":12851187,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::tcp::incoming::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":4381}],"decl_id":null,"docs":" Stream returned by the `TcpListener::incoming` function representing the\n stream of sockets received from a listener.\n","sig":null,"attributes":[{"value":"/ Stream returned by the `TcpListener::incoming` function representing the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/incoming.rs","byte_start":12850977,"byte_end":12851053,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ stream of sockets received from a listener.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/incoming.rs","byte_start":12851054,"byte_end":12851101,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/incoming.rs","byte_start":12851102,"byte_end":12851150,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4052},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/incoming.rs","byte_start":12851602,"byte_end":12851613,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<Incoming>::poll_accept","value":"pub fn poll_accept(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<TcpStream>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to poll `TcpStream` by polling inner `TcpListener` to accept\n connection.","sig":null,"attributes":[{"value":"/ Attempts to poll `TcpStream` by polling inner `TcpListener` to accept","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/incoming.rs","byte_start":12851365,"byte_end":12851438,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ connection.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/incoming.rs","byte_start":12851443,"byte_end":12851458,"line_start":21,"line_end":21,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/incoming.rs","byte_start":12851463,"byte_end":12851466,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ If `TcpListener` isn't ready yet, `Poll::Pending` is returned and","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/incoming.rs","byte_start":12851471,"byte_end":12851540,"line_start":23,"line_end":23,"column_start":5,"column_end":74}},{"value":"/ current task will be notified by a waker.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/incoming.rs","byte_start":12851545,"byte_end":12851590,"line_start":24,"line_end":24,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":4385},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12853181,"byte_end":12853189,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::tcp::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed read half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed read half of a [`TcpStream`], created by [`split`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12852764,"byte_end":12852828,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12852829,"byte_end":12852832,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Reading from a `ReadHalf` is usually done using the convenience methods found on the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12852833,"byte_end":12852921,"line_start":24,"line_end":24,"column_start":1,"column_end":89}},{"value":"/ [`AsyncReadExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12852922,"byte_end":12852999,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12853000,"byte_end":12853003,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12853004,"byte_end":12853032,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12853033,"byte_end":12853066,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12853067,"byte_end":12853118,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12853119,"byte_end":12853152,"line_start":30,"line_end":30,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":4392},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12853887,"byte_end":12853896,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::tcp::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed write half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed write half of a [`TcpStream`], created by [`split`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12853211,"byte_end":12853276,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12853277,"byte_end":12853280,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12853281,"byte_end":12853367,"line_start":36,"line_end":36,"column_start":1,"column_end":87}},{"value":"/ shut down the TCP stream in the write direction.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12853368,"byte_end":12853420,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12853421,"byte_end":12853424,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Writing to an `WriteHalf` is usually done using the convenience methods found","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12853425,"byte_end":12853506,"line_start":39,"line_end":39,"column_start":1,"column_end":82}},{"value":"/ on the [`AsyncWriteExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12853507,"byte_end":12853592,"line_start":40,"line_end":40,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12853593,"byte_end":12853596,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12853597,"byte_end":12853625,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12853626,"byte_end":12853659,"line_start":43,"line_end":43,"column_start":1,"column_end":34}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12853660,"byte_end":12853707,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12853708,"byte_end":12853770,"line_start":45,"line_end":45,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12853771,"byte_end":12853824,"line_start":46,"line_end":46,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12853825,"byte_end":12853858,"line_start":47,"line_end":47,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":4097},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12854953,"byte_end":12854962,"line_start":85,"line_end":85,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<ReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12854070,"byte_end":12854144,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12854149,"byte_end":12854222,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12854227,"byte_end":12854241,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12854246,"byte_end":12854249,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12854254,"byte_end":12854327,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12854332,"byte_end":12854335,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12854340,"byte_end":12854354,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12854359,"byte_end":12854362,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12854367,"byte_end":12854380,"line_start":64,"line_end":64,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12854385,"byte_end":12854403,"line_start":65,"line_end":65,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12854408,"byte_end":12854438,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12854443,"byte_end":12854446,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12854451,"byte_end":12854484,"line_start":68,"line_end":68,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12854489,"byte_end":12854492,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12854497,"byte_end":12854515,"line_start":70,"line_end":70,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12854520,"byte_end":12854559,"line_start":71,"line_end":71,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12854564,"byte_end":12854633,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12854638,"byte_end":12854686,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12854691,"byte_end":12854721,"line_start":74,"line_end":74,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12854726,"byte_end":12854729,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12854734,"byte_end":12854756,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12854761,"byte_end":12854806,"line_start":77,"line_end":77,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12854811,"byte_end":12854829,"line_start":78,"line_end":78,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12854834,"byte_end":12854837,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12854842,"byte_end":12854856,"line_start":80,"line_end":80,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12854861,"byte_end":12854866,"line_start":81,"line_end":81,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12854871,"byte_end":12854878,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12854883,"byte_end":12854886,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12854891,"byte_end":12854941,"line_start":84,"line_end":84,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4098},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12856379,"byte_end":12856383,"line_start":128,"line_end":128,"column_start":18,"column_end":22},"name":"peek","qualname":"<ReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12855087,"byte_end":12855157,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12855162,"byte_end":12855231,"line_start":90,"line_end":90,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12855236,"byte_end":12855275,"line_start":91,"line_end":91,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12855280,"byte_end":12855283,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12855288,"byte_end":12855356,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12855361,"byte_end":12855364,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12855369,"byte_end":12855409,"line_start":95,"line_end":95,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12855414,"byte_end":12855417,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12855422,"byte_end":12855436,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12855441,"byte_end":12855444,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12855449,"byte_end":12855462,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12855467,"byte_end":12855497,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12855502,"byte_end":12855528,"line_start":101,"line_end":101,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12855533,"byte_end":12855559,"line_start":102,"line_end":102,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12855564,"byte_end":12855567,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12855572,"byte_end":12855590,"line_start":104,"line_end":104,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12855595,"byte_end":12855646,"line_start":105,"line_end":105,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12855651,"byte_end":12855679,"line_start":106,"line_end":106,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12855684,"byte_end":12855753,"line_start":107,"line_end":107,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12855758,"byte_end":12855806,"line_start":108,"line_end":108,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12855811,"byte_end":12855814,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12855819,"byte_end":12855848,"line_start":110,"line_end":110,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12855853,"byte_end":12855882,"line_start":111,"line_end":111,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12855887,"byte_end":12855890,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12855895,"byte_end":12855922,"line_start":113,"line_end":113,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12855927,"byte_end":12855974,"line_start":114,"line_end":114,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12855979,"byte_end":12855982,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12855987,"byte_end":12856011,"line_start":116,"line_end":116,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12856016,"byte_end":12856075,"line_start":117,"line_end":117,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12856080,"byte_end":12856119,"line_start":118,"line_end":118,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12856124,"byte_end":12856127,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12856132,"byte_end":12856146,"line_start":120,"line_end":120,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12856151,"byte_end":12856156,"line_start":121,"line_end":121,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12856161,"byte_end":12856168,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12856173,"byte_end":12856176,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12856181,"byte_end":12856246,"line_start":124,"line_end":124,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12856251,"byte_end":12856254,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12856259,"byte_end":12856305,"line_start":126,"line_end":126,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12856310,"byte_end":12856361,"line_start":127,"line_end":127,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":4399},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12858985,"byte_end":12858998,"line_start":34,"line_end":34,"column_start":12,"column_end":25},"name":"OwnedReadHalf","qualname":"::net::tcp::split_owned::OwnedReadHalf","value":"OwnedReadHalf {  }","parent":null,"children":[{"krate":0,"index":4400}],"decl_id":null,"docs":" Owned read half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned read half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12858550,"byte_end":12858616,"line_start":24,"line_end":24,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12858617,"byte_end":12858620,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Reading from an `OwnedReadHalf` is usually done using the convenience methods found","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12858621,"byte_end":12858708,"line_start":26,"line_end":26,"column_start":1,"column_end":88}},{"value":"/ on the [`AsyncReadExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12858709,"byte_end":12858793,"line_start":27,"line_end":27,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12858794,"byte_end":12858797,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12858798,"byte_end":12858826,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12858827,"byte_end":12858870,"line_start":30,"line_end":30,"column_start":1,"column_end":44}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12858871,"byte_end":12858922,"line_start":31,"line_end":31,"column_start":1,"column_end":52}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12858923,"byte_end":12858956,"line_start":32,"line_end":32,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":4403},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12859808,"byte_end":12859822,"line_start":54,"line_end":54,"column_start":12,"column_end":26},"name":"OwnedWriteHalf","qualname":"::net::tcp::split_owned::OwnedWriteHalf","value":"OwnedWriteHalf {  }","parent":null,"children":[{"krate":0,"index":4404},{"krate":0,"index":4405}],"decl_id":null,"docs":" Owned write half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned write half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12859031,"byte_end":12859098,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12859099,"byte_end":12859102,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implementation of this type, [`poll_shutdown`] will","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12859103,"byte_end":12859190,"line_start":40,"line_end":40,"column_start":1,"column_end":88}},{"value":"/ shut down the TCP stream in the write direction.  Dropping the write half","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12859191,"byte_end":12859268,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/ will also shut down the write half of the TCP stream.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12859269,"byte_end":12859326,"line_start":42,"line_end":42,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12859327,"byte_end":12859330,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods found","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12859331,"byte_end":12859417,"line_start":44,"line_end":44,"column_start":1,"column_end":87}},{"value":"/ on the [`AsyncWriteExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12859418,"byte_end":12859503,"line_start":45,"line_end":45,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12859504,"byte_end":12859507,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12859508,"byte_end":12859536,"line_start":47,"line_end":47,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12859537,"byte_end":12859580,"line_start":48,"line_end":48,"column_start":1,"column_end":44}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12859581,"byte_end":12859628,"line_start":49,"line_end":49,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12859629,"byte_end":12859691,"line_start":50,"line_end":50,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12859692,"byte_end":12859745,"line_start":51,"line_end":51,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12859746,"byte_end":12859779,"line_start":52,"line_end":52,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":4408},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12860787,"byte_end":12860799,"line_start":88,"line_end":88,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::tcp::split_owned::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating that two halves were not from the same socket, and thus could\n not be reunited.\n","sig":null,"attributes":[{"value":"/ Error indicating that two halves were not from the same socket, and thus could","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12860655,"byte_end":12860737,"line_start":85,"line_end":85,"column_start":1,"column_end":83}},{"value":"/ not be reunited.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12860738,"byte_end":12860758,"line_start":86,"line_end":86,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":4410},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12860800,"byte_end":12860817,"line_start":88,"line_end":88,"column_start":25,"column_end":42},"name":"0","qualname":"::net::tcp::split_owned::ReuniteError::0","value":"net::tcp::split_owned::OwnedReadHalf","parent":{"krate":0,"index":4408},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4411},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12860819,"byte_end":12860837,"line_start":88,"line_end":88,"column_start":44,"column_end":62},"name":"1","qualname":"::net::tcp::split_owned::ReuniteError::1","value":"net::tcp::split_owned::OwnedWriteHalf","parent":{"krate":0,"index":4408},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4174},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12861383,"byte_end":12861390,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedReadHalf>::reunite","value":"pub fn reunite(Self, OwnedWriteHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12861120,"byte_end":12861189,"line_start":102,"line_end":102,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12861194,"byte_end":12861258,"line_start":103,"line_end":103,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12861263,"byte_end":12861315,"line_start":104,"line_end":104,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12861320,"byte_end":12861323,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12861328,"byte_end":12861371,"line_start":106,"line_end":106,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":4175},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12862381,"byte_end":12862390,"line_start":140,"line_end":140,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<OwnedReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12861497,"byte_end":12861571,"line_start":111,"line_end":111,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12861576,"byte_end":12861649,"line_start":112,"line_end":112,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12861654,"byte_end":12861668,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12861673,"byte_end":12861676,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12861681,"byte_end":12861754,"line_start":115,"line_end":115,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12861759,"byte_end":12861762,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12861767,"byte_end":12861781,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12861786,"byte_end":12861789,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12861794,"byte_end":12861807,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12861812,"byte_end":12861830,"line_start":120,"line_end":120,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12861835,"byte_end":12861865,"line_start":121,"line_end":121,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12861870,"byte_end":12861873,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12861878,"byte_end":12861911,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12861916,"byte_end":12861919,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12861924,"byte_end":12861942,"line_start":125,"line_end":125,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12861947,"byte_end":12861986,"line_start":126,"line_end":126,"column_start":5,"column_end":44}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12861991,"byte_end":12862056,"line_start":127,"line_end":127,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12862061,"byte_end":12862114,"line_start":128,"line_end":128,"column_start":5,"column_end":58}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12862119,"byte_end":12862149,"line_start":129,"line_end":129,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12862154,"byte_end":12862157,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12862162,"byte_end":12862184,"line_start":131,"line_end":131,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12862189,"byte_end":12862234,"line_start":132,"line_end":132,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12862239,"byte_end":12862257,"line_start":133,"line_end":133,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12862262,"byte_end":12862265,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12862270,"byte_end":12862284,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12862289,"byte_end":12862294,"line_start":136,"line_end":136,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12862299,"byte_end":12862306,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12862311,"byte_end":12862314,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12862319,"byte_end":12862369,"line_start":139,"line_end":139,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4176},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12863812,"byte_end":12863816,"line_start":183,"line_end":183,"column_start":18,"column_end":22},"name":"peek","qualname":"<OwnedReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12862519,"byte_end":12862589,"line_start":144,"line_end":144,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12862594,"byte_end":12862663,"line_start":145,"line_end":145,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12862668,"byte_end":12862707,"line_start":146,"line_end":146,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12862712,"byte_end":12862715,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12862720,"byte_end":12862788,"line_start":148,"line_end":148,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12862793,"byte_end":12862796,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12862801,"byte_end":12862841,"line_start":150,"line_end":150,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12862846,"byte_end":12862849,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12862854,"byte_end":12862868,"line_start":152,"line_end":152,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12862873,"byte_end":12862876,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12862881,"byte_end":12862894,"line_start":154,"line_end":154,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12862899,"byte_end":12862929,"line_start":155,"line_end":155,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12862934,"byte_end":12862960,"line_start":156,"line_end":156,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12862965,"byte_end":12862991,"line_start":157,"line_end":157,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12862996,"byte_end":12862999,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12863004,"byte_end":12863022,"line_start":159,"line_end":159,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12863027,"byte_end":12863078,"line_start":160,"line_end":160,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12863083,"byte_end":12863111,"line_start":161,"line_end":161,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12863116,"byte_end":12863181,"line_start":162,"line_end":162,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12863186,"byte_end":12863239,"line_start":163,"line_end":163,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12863244,"byte_end":12863247,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12863252,"byte_end":12863281,"line_start":165,"line_end":165,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12863286,"byte_end":12863315,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12863320,"byte_end":12863323,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12863328,"byte_end":12863355,"line_start":168,"line_end":168,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12863360,"byte_end":12863407,"line_start":169,"line_end":169,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12863412,"byte_end":12863415,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12863420,"byte_end":12863444,"line_start":171,"line_end":171,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12863449,"byte_end":12863508,"line_start":172,"line_end":172,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12863513,"byte_end":12863552,"line_start":173,"line_end":173,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12863557,"byte_end":12863560,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12863565,"byte_end":12863579,"line_start":175,"line_end":175,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12863584,"byte_end":12863589,"line_start":176,"line_end":176,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12863594,"byte_end":12863601,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12863606,"byte_end":12863609,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12863614,"byte_end":12863679,"line_start":179,"line_end":179,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12863684,"byte_end":12863687,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12863692,"byte_end":12863738,"line_start":181,"line_end":181,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12863743,"byte_end":12863794,"line_start":182,"line_end":182,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":4184},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12864549,"byte_end":12864556,"line_start":208,"line_end":208,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedWriteHalf>::reunite","value":"pub fn reunite(Self, OwnedReadHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12864286,"byte_end":12864355,"line_start":203,"line_end":203,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12864360,"byte_end":12864424,"line_start":204,"line_end":204,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12864429,"byte_end":12864481,"line_start":205,"line_end":205,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12864486,"byte_end":12864489,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12864494,"byte_end":12864537,"line_start":207,"line_end":207,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":4185},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12864861,"byte_end":12864867,"line_start":215,"line_end":215,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedWriteHalf>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Destroy the write half, but don't close the write half of the stream\n until the read half is dropped. If the read half has already been\n dropped, this closes the stream.\n","sig":null,"attributes":[{"value":"/ Destroy the write half, but don't close the write half of the stream","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12864662,"byte_end":12864734,"line_start":212,"line_end":212,"column_start":5,"column_end":77}},{"value":"/ until the read half is dropped. If the read half has already been","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12864739,"byte_end":12864808,"line_start":213,"line_end":213,"column_start":5,"column_end":74}},{"value":"/ dropped, this closes the stream.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12864813,"byte_end":12864849,"line_start":214,"line_end":214,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":4414},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12868275,"byte_end":12868284,"line_start":58,"line_end":58,"column_start":16,"column_end":25},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":4415}],"decl_id":null,"docs":" A TCP stream between a local and a remote socket.","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":22609,"byte_end":22632,"line_start":298,"line_end":298,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":4294},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12870365,"byte_end":12870372,"line_start":121,"line_end":121,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpStream>::connect","value":"pub async fn connect<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a TCP connection to a remote host.","sig":null,"attributes":[{"value":"/ Opens a TCP connection to a remote host.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12868363,"byte_end":12868407,"line_start":64,"line_end":64,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12868412,"byte_end":12868415,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ `addr` is an address of the remote host. Anything which implements the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12868420,"byte_end":12868494,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ [`ToSocketAddrs`] trait can be supplied as the address. Note that","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12868499,"byte_end":12868568,"line_start":67,"line_end":67,"column_start":5,"column_end":74}},{"value":"/ strings only implement this trait when the **`dns`** feature is enabled,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12868573,"byte_end":12868649,"line_start":68,"line_end":68,"column_start":5,"column_end":81}},{"value":"/ as strings may contain domain names that need to be resolved.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12868654,"byte_end":12868719,"line_start":69,"line_end":69,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12868724,"byte_end":12868727,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, connect will be attempted with each","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12868732,"byte_end":12868808,"line_start":71,"line_end":71,"column_start":5,"column_end":81}},{"value":"/ of the addresses until a connection is successful. If none of the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12868813,"byte_end":12868882,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/ addresses result in a successful connection, the error returned from the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12868887,"byte_end":12868963,"line_start":73,"line_end":73,"column_start":5,"column_end":81}},{"value":"/ last connection attempt (the last address) is returned.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12868968,"byte_end":12869027,"line_start":74,"line_end":74,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12869032,"byte_end":12869035,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12869040,"byte_end":12869094,"line_start":76,"line_end":76,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12869099,"byte_end":12869102,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12869107,"byte_end":12869121,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12869126,"byte_end":12869129,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12869134,"byte_end":12869147,"line_start":80,"line_end":80,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12869152,"byte_end":12869182,"line_start":81,"line_end":81,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12869187,"byte_end":12869213,"line_start":82,"line_end":82,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12869218,"byte_end":12869244,"line_start":83,"line_end":83,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12869249,"byte_end":12869252,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12869257,"byte_end":12869275,"line_start":85,"line_end":85,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12869280,"byte_end":12869331,"line_start":86,"line_end":86,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12869336,"byte_end":12869364,"line_start":87,"line_end":87,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12869369,"byte_end":12869438,"line_start":88,"line_end":88,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12869443,"byte_end":12869446,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/     // Write some data.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12869451,"byte_end":12869478,"line_start":90,"line_end":90,"column_start":5,"column_end":32}},{"value":"/     stream.write_all(b\"hello world!\").await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12869483,"byte_end":12869532,"line_start":91,"line_end":91,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12869537,"byte_end":12869540,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12869545,"byte_end":12869559,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12869564,"byte_end":12869569,"line_start":94,"line_end":94,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12869574,"byte_end":12869581,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12869586,"byte_end":12869589,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ Without the `dns` feature:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12869594,"byte_end":12869624,"line_start":97,"line_end":97,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12869629,"byte_end":12869632,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12869637,"byte_end":12869650,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12869655,"byte_end":12869685,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12869690,"byte_end":12869716,"line_start":101,"line_end":101,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12869721,"byte_end":12869747,"line_start":102,"line_end":102,"column_start":5,"column_end":31}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12869752,"byte_end":12869779,"line_start":103,"line_end":103,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12869784,"byte_end":12869787,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12869792,"byte_end":12869810,"line_start":105,"line_end":105,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12869815,"byte_end":12869866,"line_start":106,"line_end":106,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12869871,"byte_end":12869899,"line_start":107,"line_end":107,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect((Ipv4Addr::new(127, 0, 0, 1), 8080)).await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12869904,"byte_end":12869992,"line_start":108,"line_end":108,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12869997,"byte_end":12870000,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/     // Write some data.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12870005,"byte_end":12870032,"line_start":110,"line_end":110,"column_start":5,"column_end":32}},{"value":"/     stream.write_all(b\"hello world!\").await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12870037,"byte_end":12870086,"line_start":111,"line_end":111,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12870091,"byte_end":12870094,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12870099,"byte_end":12870113,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12870118,"byte_end":12870123,"line_start":114,"line_end":114,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12870128,"byte_end":12870135,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12870140,"byte_end":12870143,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12870148,"byte_end":12870219,"line_start":117,"line_end":117,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12870224,"byte_end":12870227,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12870232,"byte_end":12870289,"line_start":119,"line_end":119,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12870294,"byte_end":12870347,"line_start":120,"line_end":120,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4304},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12872805,"byte_end":12872813,"line_start":192,"line_end":192,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpStream>::from_std","value":"pub fn from_std(net::TcpStream) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `TcpStream` from a `std::net::TcpStream`.","sig":null,"attributes":[{"value":"/ Creates new `TcpStream` from a `std::net::TcpStream`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12871838,"byte_end":12871895,"line_start":166,"line_end":166,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12871900,"byte_end":12871903,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ This function will convert a TCP stream created by the standard library","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12871908,"byte_end":12871983,"line_start":168,"line_end":168,"column_start":5,"column_end":80}},{"value":"/ to a TCP stream ready to be used with the provided event loop handle.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12871988,"byte_end":12872061,"line_start":169,"line_end":169,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12872066,"byte_end":12872069,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12872074,"byte_end":12872088,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12872093,"byte_end":12872096,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12872101,"byte_end":12872119,"line_start":173,"line_end":173,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12872124,"byte_end":12872150,"line_start":174,"line_end":174,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12872155,"byte_end":12872185,"line_start":175,"line_end":175,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12872190,"byte_end":12872193,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12872198,"byte_end":12872216,"line_start":177,"line_end":177,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12872221,"byte_end":12872272,"line_start":178,"line_end":178,"column_start":5,"column_end":56}},{"value":"/     let std_stream = std::net::TcpStream::connect(\"127.0.0.1:34254\")?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12872277,"byte_end":12872351,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/     let stream = TcpStream::from_std(std_stream)?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12872356,"byte_end":12872410,"line_start":180,"line_end":180,"column_start":5,"column_end":59}},{"value":"/     Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12872415,"byte_end":12872429,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12872434,"byte_end":12872439,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12872444,"byte_end":12872451,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12872456,"byte_end":12872459,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12872464,"byte_end":12872476,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12872481,"byte_end":12872484,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12872489,"byte_end":12872549,"line_start":187,"line_end":187,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12872554,"byte_end":12872557,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12872562,"byte_end":12872632,"line_start":189,"line_end":189,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12872637,"byte_end":12872710,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12872715,"byte_end":12872793,"line_start":191,"line_end":191,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":4305},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12873210,"byte_end":12873221,"line_start":202,"line_end":202,"column_start":18,"column_end":29},"name":"connect_std","qualname":"<TcpStream>::connect_std","value":"pub async fn connect_std<'_>(net::TcpStream, &'_ SocketAddr) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4309},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12874369,"byte_end":12874379,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this stream is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this stream is bound to.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12873970,"byte_end":12874029,"line_start":222,"line_end":222,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12874034,"byte_end":12874037,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12874042,"byte_end":12874056,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12874061,"byte_end":12874064,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12874069,"byte_end":12874082,"line_start":226,"line_end":226,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12874087,"byte_end":12874117,"line_start":227,"line_end":227,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12874122,"byte_end":12874125,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12874130,"byte_end":12874194,"line_start":229,"line_end":229,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12874199,"byte_end":12874260,"line_start":230,"line_end":230,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12874265,"byte_end":12874268,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.local_addr()?);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12874273,"byte_end":12874316,"line_start":232,"line_end":232,"column_start":5,"column_end":48}},{"value":"/ # Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12874321,"byte_end":12874333,"line_start":233,"line_end":233,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12874338,"byte_end":12874345,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12874350,"byte_end":12874357,"line_start":235,"line_end":235,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4310},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12874868,"byte_end":12874877,"line_start":254,"line_end":254,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address that this stream is connected to.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12874465,"byte_end":12874529,"line_start":240,"line_end":240,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12874534,"byte_end":12874537,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12874542,"byte_end":12874556,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12874561,"byte_end":12874564,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12874569,"byte_end":12874582,"line_start":244,"line_end":244,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12874587,"byte_end":12874617,"line_start":245,"line_end":245,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12874622,"byte_end":12874625,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12874630,"byte_end":12874694,"line_start":247,"line_end":247,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12874699,"byte_end":12874760,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12874765,"byte_end":12874768,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.peer_addr()?);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12874773,"byte_end":12874815,"line_start":250,"line_end":250,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12874820,"byte_end":12874832,"line_start":251,"line_end":251,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12874837,"byte_end":12874844,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12874849,"byte_end":12874856,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4311},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12876035,"byte_end":12876044,"line_start":294,"line_end":294,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<TcpStream>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempts to receive data on the socket, without removing that data from","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12874962,"byte_end":12875037,"line_start":258,"line_end":258,"column_start":5,"column_end":80}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12875042,"byte_end":12875115,"line_start":259,"line_end":259,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12875120,"byte_end":12875134,"line_start":260,"line_end":260,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12875139,"byte_end":12875142,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12875147,"byte_end":12875165,"line_start":262,"line_end":262,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12875170,"byte_end":12875173,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12875178,"byte_end":12875203,"line_start":264,"line_end":264,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12875208,"byte_end":12875211,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if data is not yet available.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12875216,"byte_end":12875267,"line_start":266,"line_end":266,"column_start":5,"column_end":56}},{"value":"/ * `Poll::Ready(Ok(n))` if data is available. `n` is the number of bytes peeked.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12875272,"byte_end":12875355,"line_start":267,"line_end":267,"column_start":5,"column_end":88}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12875360,"byte_end":12875415,"line_start":268,"line_end":268,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12875420,"byte_end":12875423,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12875428,"byte_end":12875440,"line_start":270,"line_end":270,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12875445,"byte_end":12875448,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12875453,"byte_end":12875528,"line_start":272,"line_end":272,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12875533,"byte_end":12875536,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12875541,"byte_end":12875555,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12875560,"byte_end":12875563,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12875568,"byte_end":12875581,"line_start":276,"line_end":276,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12875586,"byte_end":12875604,"line_start":277,"line_end":277,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12875609,"byte_end":12875639,"line_start":278,"line_end":278,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12875644,"byte_end":12875647,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12875652,"byte_end":12875685,"line_start":280,"line_end":280,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12875690,"byte_end":12875693,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12875698,"byte_end":12875716,"line_start":282,"line_end":282,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12875721,"byte_end":12875760,"line_start":283,"line_end":283,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12875765,"byte_end":12875834,"line_start":284,"line_end":284,"column_start":5,"column_end":74}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12875839,"byte_end":12875869,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12875874,"byte_end":12875877,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12875882,"byte_end":12875904,"line_start":287,"line_end":287,"column_start":5,"column_end":27}},{"value":"/         stream.poll_peek(cx, &mut buf)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12875909,"byte_end":12875951,"line_start":288,"line_end":288,"column_start":5,"column_end":47}},{"value":"/     }).await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12875956,"byte_end":12875974,"line_start":289,"line_end":289,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12875979,"byte_end":12875982,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12875987,"byte_end":12876001,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12876006,"byte_end":12876011,"line_start":292,"line_end":292,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12876016,"byte_end":12876023,"line_start":293,"line_end":293,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4313},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12877956,"byte_end":12877960,"line_start":352,"line_end":352,"column_start":18,"column_end":22},"name":"peek","qualname":"<TcpStream>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12876705,"byte_end":12876775,"line_start":315,"line_end":315,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12876780,"byte_end":12876849,"line_start":316,"line_end":316,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12876854,"byte_end":12876893,"line_start":317,"line_end":317,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12876898,"byte_end":12876901,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12876906,"byte_end":12876980,"line_start":319,"line_end":319,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying recv system call.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12876985,"byte_end":12877045,"line_start":320,"line_end":320,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12877050,"byte_end":12877053,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12877058,"byte_end":12877072,"line_start":322,"line_end":322,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12877077,"byte_end":12877080,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12877085,"byte_end":12877098,"line_start":324,"line_end":324,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12877103,"byte_end":12877133,"line_start":325,"line_end":325,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12877138,"byte_end":12877164,"line_start":326,"line_end":326,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12877169,"byte_end":12877195,"line_start":327,"line_end":327,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12877200,"byte_end":12877203,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12877208,"byte_end":12877226,"line_start":329,"line_end":329,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12877231,"byte_end":12877282,"line_start":330,"line_end":330,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12877287,"byte_end":12877315,"line_start":331,"line_end":331,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12877320,"byte_end":12877389,"line_start":332,"line_end":332,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12877394,"byte_end":12877397,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12877402,"byte_end":12877431,"line_start":334,"line_end":334,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12877436,"byte_end":12877465,"line_start":335,"line_end":335,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12877470,"byte_end":12877473,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12877478,"byte_end":12877505,"line_start":337,"line_end":337,"column_start":5,"column_end":32}},{"value":"/     let n = stream.peek(&mut b1).await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12877510,"byte_end":12877554,"line_start":338,"line_end":338,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12877559,"byte_end":12877562,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12877567,"byte_end":12877591,"line_start":340,"line_end":340,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, stream.read(&mut b2[..n]).await?);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12877596,"byte_end":12877652,"line_start":341,"line_end":341,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12877657,"byte_end":12877696,"line_start":342,"line_end":342,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12877701,"byte_end":12877704,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12877709,"byte_end":12877723,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12877728,"byte_end":12877733,"line_start":345,"line_end":345,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12877738,"byte_end":12877745,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12877750,"byte_end":12877753,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12877758,"byte_end":12877823,"line_start":348,"line_end":348,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12877828,"byte_end":12877831,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12877836,"byte_end":12877882,"line_start":350,"line_end":350,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12877887,"byte_end":12877938,"line_start":351,"line_end":351,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":4317},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12878829,"byte_end":12878837,"line_start":380,"line_end":380,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12878074,"byte_end":12878140,"line_start":356,"line_end":356,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12878145,"byte_end":12878148,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O on the specified","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12878153,"byte_end":12878225,"line_start":358,"line_end":358,"column_start":5,"column_end":77}},{"value":"/ portions to return immediately with an appropriate value (see the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12878230,"byte_end":12878299,"line_start":359,"line_end":359,"column_start":5,"column_end":74}},{"value":"/ documentation of `Shutdown`).","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12878304,"byte_end":12878337,"line_start":360,"line_end":360,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12878342,"byte_end":12878345,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12878350,"byte_end":12878364,"line_start":362,"line_end":362,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12878369,"byte_end":12878372,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12878377,"byte_end":12878390,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12878395,"byte_end":12878425,"line_start":365,"line_end":365,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12878430,"byte_end":12878456,"line_start":366,"line_end":366,"column_start":5,"column_end":31}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12878461,"byte_end":12878488,"line_start":367,"line_end":367,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12878493,"byte_end":12878496,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12878501,"byte_end":12878519,"line_start":369,"line_end":369,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12878524,"byte_end":12878575,"line_start":370,"line_end":370,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12878580,"byte_end":12878608,"line_start":371,"line_end":371,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12878613,"byte_end":12878678,"line_start":372,"line_end":372,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12878683,"byte_end":12878686,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/     // Shutdown the stream","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12878691,"byte_end":12878721,"line_start":374,"line_end":374,"column_start":5,"column_end":35}},{"value":"/     stream.shutdown(Shutdown::Write)?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12878726,"byte_end":12878768,"line_start":375,"line_end":375,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12878773,"byte_end":12878776,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12878781,"byte_end":12878795,"line_start":377,"line_end":377,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12878800,"byte_end":12878805,"line_start":378,"line_end":378,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12878810,"byte_end":12878817,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4318},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12879463,"byte_end":12879470,"line_start":402,"line_end":402,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"pub fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12878931,"byte_end":12878993,"line_start":384,"line_end":384,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12878998,"byte_end":12879001,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12879006,"byte_end":12879070,"line_start":386,"line_end":386,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12879075,"byte_end":12879078,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ [`set_nodelay`]: TcpStream::set_nodelay","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12879083,"byte_end":12879126,"line_start":388,"line_end":388,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12879131,"byte_end":12879134,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12879139,"byte_end":12879153,"line_start":390,"line_end":390,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12879158,"byte_end":12879161,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12879166,"byte_end":12879179,"line_start":392,"line_end":392,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12879184,"byte_end":12879214,"line_start":393,"line_end":393,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12879219,"byte_end":12879222,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12879227,"byte_end":12879291,"line_start":395,"line_end":395,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12879296,"byte_end":12879357,"line_start":396,"line_end":396,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12879362,"byte_end":12879365,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.nodelay()?);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12879370,"byte_end":12879410,"line_start":398,"line_end":398,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12879415,"byte_end":12879427,"line_start":399,"line_end":399,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12879432,"byte_end":12879439,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12879444,"byte_end":12879451,"line_start":401,"line_end":401,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4319},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12880277,"byte_end":12880288,"line_start":426,"line_end":426,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"pub fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12879547,"byte_end":12879609,"line_start":406,"line_end":406,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12879614,"byte_end":12879617,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12879622,"byte_end":12879691,"line_start":408,"line_end":408,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12879696,"byte_end":12879769,"line_start":409,"line_end":409,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12879774,"byte_end":12879847,"line_start":410,"line_end":410,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12879852,"byte_end":12879927,"line_start":411,"line_end":411,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12879932,"byte_end":12879950,"line_start":412,"line_end":412,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12879955,"byte_end":12879958,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12879963,"byte_end":12879977,"line_start":414,"line_end":414,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12879982,"byte_end":12879985,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12879990,"byte_end":12880003,"line_start":416,"line_end":416,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12880008,"byte_end":12880038,"line_start":417,"line_end":417,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12880043,"byte_end":12880046,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12880051,"byte_end":12880115,"line_start":419,"line_end":419,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12880120,"byte_end":12880181,"line_start":420,"line_end":420,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12880186,"byte_end":12880189,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12880194,"byte_end":12880224,"line_start":422,"line_end":422,"column_start":5,"column_end":35}},{"value":"/ # Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12880229,"byte_end":12880241,"line_start":423,"line_end":423,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12880246,"byte_end":12880253,"line_start":424,"line_end":424,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12880258,"byte_end":12880265,"line_start":425,"line_end":425,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4320},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12880955,"byte_end":12880971,"line_start":448,"line_end":448,"column_start":12,"column_end":28},"name":"recv_buffer_size","qualname":"<TcpStream>::recv_buffer_size","value":"pub fn recv_buffer_size(&Self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_RCVBUF` option on this socket.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12880389,"byte_end":12880449,"line_start":430,"line_end":430,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12880454,"byte_end":12880457,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_recv_buffer_size`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12880462,"byte_end":12880535,"line_start":432,"line_end":432,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12880540,"byte_end":12880543,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ [`set_recv_buffer_size`]: TcpStream::set_recv_buffer_size","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12880548,"byte_end":12880609,"line_start":434,"line_end":434,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12880614,"byte_end":12880617,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12880622,"byte_end":12880636,"line_start":436,"line_end":436,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12880641,"byte_end":12880644,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12880649,"byte_end":12880662,"line_start":438,"line_end":438,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12880667,"byte_end":12880697,"line_start":439,"line_end":439,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12880702,"byte_end":12880705,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12880710,"byte_end":12880774,"line_start":441,"line_end":441,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12880779,"byte_end":12880840,"line_start":442,"line_end":442,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12880845,"byte_end":12880848,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.recv_buffer_size()?);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12880853,"byte_end":12880902,"line_start":444,"line_end":444,"column_start":5,"column_end":54}},{"value":"/ # Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12880907,"byte_end":12880919,"line_start":445,"line_end":445,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12880924,"byte_end":12880931,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12880936,"byte_end":12880943,"line_start":447,"line_end":447,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4321},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12881563,"byte_end":12881583,"line_start":469,"line_end":469,"column_start":12,"column_end":32},"name":"set_recv_buffer_size","qualname":"<TcpStream>::set_recv_buffer_size","value":"pub fn set_recv_buffer_size(&Self, usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_RCVBUF` option on this socket.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12881058,"byte_end":12881118,"line_start":452,"line_end":452,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12881123,"byte_end":12881126,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's receive buffer associated","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12881131,"byte_end":12881203,"line_start":454,"line_end":454,"column_start":5,"column_end":77}},{"value":"/ with the socket.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12881208,"byte_end":12881228,"line_start":455,"line_end":455,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12881233,"byte_end":12881236,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12881241,"byte_end":12881255,"line_start":457,"line_end":457,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12881260,"byte_end":12881263,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12881268,"byte_end":12881281,"line_start":459,"line_end":459,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12881286,"byte_end":12881316,"line_start":460,"line_end":460,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12881321,"byte_end":12881324,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12881329,"byte_end":12881393,"line_start":462,"line_end":462,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12881398,"byte_end":12881459,"line_start":463,"line_end":463,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12881464,"byte_end":12881467,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ stream.set_recv_buffer_size(100)?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12881472,"byte_end":12881510,"line_start":465,"line_end":465,"column_start":5,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12881515,"byte_end":12881527,"line_start":466,"line_end":466,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12881532,"byte_end":12881539,"line_start":467,"line_end":467,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12881544,"byte_end":12881551,"line_start":468,"line_end":468,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4322},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12882254,"byte_end":12882270,"line_start":491,"line_end":491,"column_start":12,"column_end":28},"name":"send_buffer_size","qualname":"<TcpStream>::send_buffer_size","value":"pub fn send_buffer_size(&Self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_SNDBUF` option on this socket.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12881688,"byte_end":12881748,"line_start":473,"line_end":473,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12881753,"byte_end":12881756,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_send_buffer_size`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12881761,"byte_end":12881834,"line_start":475,"line_end":475,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12881839,"byte_end":12881842,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ [`set_send_buffer_size`]: TcpStream::set_send_buffer_size","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12881847,"byte_end":12881908,"line_start":477,"line_end":477,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12881913,"byte_end":12881916,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12881921,"byte_end":12881935,"line_start":479,"line_end":479,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12881940,"byte_end":12881943,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12881948,"byte_end":12881961,"line_start":481,"line_end":481,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12881966,"byte_end":12881996,"line_start":482,"line_end":482,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12882001,"byte_end":12882004,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12882009,"byte_end":12882073,"line_start":484,"line_end":484,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12882078,"byte_end":12882139,"line_start":485,"line_end":485,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12882144,"byte_end":12882147,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.send_buffer_size()?);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12882152,"byte_end":12882201,"line_start":487,"line_end":487,"column_start":5,"column_end":54}},{"value":"/ # Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12882206,"byte_end":12882218,"line_start":488,"line_end":488,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12882223,"byte_end":12882230,"line_start":489,"line_end":489,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12882235,"byte_end":12882242,"line_start":490,"line_end":490,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4323},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12882859,"byte_end":12882879,"line_start":512,"line_end":512,"column_start":12,"column_end":32},"name":"set_send_buffer_size","qualname":"<TcpStream>::set_send_buffer_size","value":"pub fn set_send_buffer_size(&Self, usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_SNDBUF` option on this socket.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12882357,"byte_end":12882417,"line_start":495,"line_end":495,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12882422,"byte_end":12882425,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's send buffer associated with","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12882430,"byte_end":12882504,"line_start":497,"line_end":497,"column_start":5,"column_end":79}},{"value":"/ the socket.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12882509,"byte_end":12882524,"line_start":498,"line_end":498,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12882529,"byte_end":12882532,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12882537,"byte_end":12882551,"line_start":500,"line_end":500,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12882556,"byte_end":12882559,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12882564,"byte_end":12882577,"line_start":502,"line_end":502,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12882582,"byte_end":12882612,"line_start":503,"line_end":503,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12882617,"byte_end":12882620,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12882625,"byte_end":12882689,"line_start":505,"line_end":505,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12882694,"byte_end":12882755,"line_start":506,"line_end":506,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12882760,"byte_end":12882763,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ stream.set_send_buffer_size(100)?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12882768,"byte_end":12882806,"line_start":508,"line_end":508,"column_start":5,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12882811,"byte_end":12882823,"line_start":509,"line_end":509,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12882828,"byte_end":12882835,"line_start":510,"line_end":510,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12882840,"byte_end":12882847,"line_start":511,"line_end":511,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4324},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12883581,"byte_end":12883590,"line_start":535,"line_end":535,"column_start":12,"column_end":21},"name":"keepalive","qualname":"<TcpStream>::keepalive","value":"pub fn keepalive(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Returns whether keepalive messages are enabled on this socket, and if so\n the duration of time between them.","sig":null,"attributes":[{"value":"/ Returns whether keepalive messages are enabled on this socket, and if so","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12882984,"byte_end":12883060,"line_start":516,"line_end":516,"column_start":5,"column_end":81}},{"value":"/ the duration of time between them.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12883065,"byte_end":12883103,"line_start":517,"line_end":517,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12883108,"byte_end":12883111,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_keepalive`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12883116,"byte_end":12883182,"line_start":519,"line_end":519,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12883187,"byte_end":12883190,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ [`set_keepalive`]: TcpStream::set_keepalive","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12883195,"byte_end":12883242,"line_start":521,"line_end":521,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12883247,"byte_end":12883250,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12883255,"byte_end":12883269,"line_start":523,"line_end":523,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12883274,"byte_end":12883277,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12883282,"byte_end":12883295,"line_start":525,"line_end":525,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12883300,"byte_end":12883330,"line_start":526,"line_end":526,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12883335,"byte_end":12883338,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12883343,"byte_end":12883407,"line_start":528,"line_end":528,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12883412,"byte_end":12883473,"line_start":529,"line_end":529,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12883478,"byte_end":12883481,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.keepalive()?);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12883486,"byte_end":12883528,"line_start":531,"line_end":531,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12883533,"byte_end":12883545,"line_start":532,"line_end":532,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12883550,"byte_end":12883557,"line_start":533,"line_end":533,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12883562,"byte_end":12883569,"line_start":534,"line_end":534,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4325},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12884621,"byte_end":12884634,"line_start":564,"line_end":564,"column_start":12,"column_end":25},"name":"set_keepalive","qualname":"<TcpStream>::set_keepalive","value":"pub fn set_keepalive(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether keepalive messages are enabled to be sent on this socket.","sig":null,"attributes":[{"value":"/ Sets whether keepalive messages are enabled to be sent on this socket.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12883681,"byte_end":12883755,"line_start":539,"line_end":539,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12883760,"byte_end":12883763,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ On Unix, this option will set the `SO_KEEPALIVE` as well as the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12883768,"byte_end":12883835,"line_start":541,"line_end":541,"column_start":5,"column_end":72}},{"value":"/ `TCP_KEEPALIVE` or `TCP_KEEPIDLE` option (depending on your platform).","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12883840,"byte_end":12883914,"line_start":542,"line_end":542,"column_start":5,"column_end":79}},{"value":"/ On Windows, this will set the `SIO_KEEPALIVE_VALS` option.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12883919,"byte_end":12883981,"line_start":543,"line_end":543,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12883986,"byte_end":12883989,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ If `None` is specified then keepalive messages are disabled, otherwise","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12883994,"byte_end":12884068,"line_start":545,"line_end":545,"column_start":5,"column_end":79}},{"value":"/ the duration specified will be the time to remain idle before sending a","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12884073,"byte_end":12884148,"line_start":546,"line_end":546,"column_start":5,"column_end":80}},{"value":"/ TCP keepalive probe.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12884153,"byte_end":12884177,"line_start":547,"line_end":547,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12884182,"byte_end":12884185,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Some platforms specify this value in seconds, so sub-second","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12884190,"byte_end":12884253,"line_start":549,"line_end":549,"column_start":5,"column_end":68}},{"value":"/ specifications may be omitted.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12884258,"byte_end":12884292,"line_start":550,"line_end":550,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12884297,"byte_end":12884300,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12884305,"byte_end":12884319,"line_start":552,"line_end":552,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12884324,"byte_end":12884327,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12884332,"byte_end":12884345,"line_start":554,"line_end":554,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12884350,"byte_end":12884380,"line_start":555,"line_end":555,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12884385,"byte_end":12884388,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12884393,"byte_end":12884457,"line_start":557,"line_end":557,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12884462,"byte_end":12884523,"line_start":558,"line_end":558,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12884528,"byte_end":12884531,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ stream.set_keepalive(None)?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12884536,"byte_end":12884568,"line_start":560,"line_end":560,"column_start":5,"column_end":37}},{"value":"/ # Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12884573,"byte_end":12884585,"line_start":561,"line_end":561,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12884590,"byte_end":12884597,"line_start":562,"line_end":562,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12884602,"byte_end":12884609,"line_start":563,"line_end":563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4326},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12885265,"byte_end":12885268,"line_start":586,"line_end":586,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12884753,"byte_end":12884811,"line_start":568,"line_end":568,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12884816,"byte_end":12884819,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12884824,"byte_end":12884884,"line_start":570,"line_end":570,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12884889,"byte_end":12884892,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: TcpStream::set_ttl","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12884897,"byte_end":12884932,"line_start":572,"line_end":572,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12884937,"byte_end":12884940,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12884945,"byte_end":12884959,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12884964,"byte_end":12884967,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12884972,"byte_end":12884985,"line_start":576,"line_end":576,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12884990,"byte_end":12885020,"line_start":577,"line_end":577,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12885025,"byte_end":12885028,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12885033,"byte_end":12885097,"line_start":579,"line_end":579,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12885102,"byte_end":12885163,"line_start":580,"line_end":580,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12885168,"byte_end":12885171,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.ttl()?);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12885176,"byte_end":12885212,"line_start":582,"line_end":582,"column_start":5,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12885217,"byte_end":12885229,"line_start":583,"line_end":583,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12885234,"byte_end":12885241,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12885246,"byte_end":12885253,"line_start":585,"line_end":585,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4327},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12885835,"byte_end":12885842,"line_start":607,"line_end":607,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12885340,"byte_end":12885398,"line_start":590,"line_end":590,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12885403,"byte_end":12885406,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12885411,"byte_end":12885487,"line_start":592,"line_end":592,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12885492,"byte_end":12885513,"line_start":593,"line_end":593,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12885518,"byte_end":12885521,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12885526,"byte_end":12885540,"line_start":595,"line_end":595,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12885545,"byte_end":12885548,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12885553,"byte_end":12885566,"line_start":597,"line_end":597,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12885571,"byte_end":12885601,"line_start":598,"line_end":598,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12885606,"byte_end":12885609,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12885614,"byte_end":12885678,"line_start":600,"line_end":600,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12885683,"byte_end":12885744,"line_start":601,"line_end":601,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12885749,"byte_end":12885752,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(123)?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12885757,"byte_end":12885782,"line_start":603,"line_end":603,"column_start":5,"column_end":30}},{"value":"/ # Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12885787,"byte_end":12885799,"line_start":604,"line_end":604,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12885804,"byte_end":12885811,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12885816,"byte_end":12885823,"line_start":606,"line_end":606,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4328},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12886484,"byte_end":12886490,"line_start":630,"line_end":630,"column_start":12,"column_end":18},"name":"linger","qualname":"<TcpStream>::linger","value":"pub fn linger(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Reads the linger duration for this socket by getting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Reads the linger duration for this socket by getting the `SO_LINGER`","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12885930,"byte_end":12886002,"line_start":611,"line_end":611,"column_start":5,"column_end":77}},{"value":"/ option.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12886007,"byte_end":12886018,"line_start":612,"line_end":612,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12886023,"byte_end":12886026,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_linger`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12886031,"byte_end":12886094,"line_start":614,"line_end":614,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12886099,"byte_end":12886102,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ [`set_linger`]: TcpStream::set_linger","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12886107,"byte_end":12886148,"line_start":616,"line_end":616,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12886153,"byte_end":12886156,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12886161,"byte_end":12886175,"line_start":618,"line_end":618,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12886180,"byte_end":12886183,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12886188,"byte_end":12886201,"line_start":620,"line_end":620,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12886206,"byte_end":12886236,"line_start":621,"line_end":621,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12886241,"byte_end":12886244,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12886249,"byte_end":12886313,"line_start":623,"line_end":623,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12886318,"byte_end":12886379,"line_start":624,"line_end":624,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12886384,"byte_end":12886387,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.linger()?);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12886392,"byte_end":12886431,"line_start":626,"line_end":626,"column_start":5,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12886436,"byte_end":12886448,"line_start":627,"line_end":627,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12886453,"byte_end":12886460,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12886465,"byte_end":12886472,"line_start":629,"line_end":629,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4329},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12887432,"byte_end":12887442,"line_start":658,"line_end":658,"column_start":12,"column_end":22},"name":"set_linger","qualname":"<TcpStream>::set_linger","value":"pub fn set_linger(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the linger duration of this socket by setting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Sets the linger duration of this socket by setting the `SO_LINGER`","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12886578,"byte_end":12886648,"line_start":634,"line_end":634,"column_start":5,"column_end":75}},{"value":"/ option.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12886653,"byte_end":12886664,"line_start":635,"line_end":635,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12886669,"byte_end":12886672,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ This option controls the action taken when a stream has unsent messages","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12886677,"byte_end":12886752,"line_start":637,"line_end":637,"column_start":5,"column_end":80}},{"value":"/ and the stream is closed. If `SO_LINGER` is set, the system","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12886757,"byte_end":12886820,"line_start":638,"line_end":638,"column_start":5,"column_end":68}},{"value":"/ shall block the process until it can transmit the data or until the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12886825,"byte_end":12886896,"line_start":639,"line_end":639,"column_start":5,"column_end":76}},{"value":"/ time expires.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12886901,"byte_end":12886918,"line_start":640,"line_end":640,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12886923,"byte_end":12886926,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ If `SO_LINGER` is not specified, and the stream is closed, the system","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12886931,"byte_end":12887004,"line_start":642,"line_end":642,"column_start":5,"column_end":78}},{"value":"/ handles the call in a way that allows the process to continue as quickly","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12887009,"byte_end":12887085,"line_start":643,"line_end":643,"column_start":5,"column_end":81}},{"value":"/ as possible.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12887090,"byte_end":12887106,"line_start":644,"line_end":644,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12887111,"byte_end":12887114,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12887119,"byte_end":12887133,"line_start":646,"line_end":646,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12887138,"byte_end":12887141,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12887146,"byte_end":12887159,"line_start":648,"line_end":648,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12887164,"byte_end":12887194,"line_start":649,"line_end":649,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12887199,"byte_end":12887202,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12887207,"byte_end":12887271,"line_start":651,"line_end":651,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12887276,"byte_end":12887337,"line_start":652,"line_end":652,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12887342,"byte_end":12887345,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ stream.set_linger(None)?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12887350,"byte_end":12887379,"line_start":654,"line_end":654,"column_start":5,"column_end":34}},{"value":"/ # Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12887384,"byte_end":12887396,"line_start":655,"line_end":655,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12887401,"byte_end":12887408,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12887413,"byte_end":12887420,"line_start":657,"line_end":657,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4330},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12888060,"byte_end":12888065,"line_start":672,"line_end":672,"column_start":12,"column_end":17},"name":"split","qualname":"<TcpStream>::split","value":"pub fn split<'a>(&'a mut Self) -> (ReadHalf, WriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12887683,"byte_end":12887719,"line_start":664,"line_end":664,"column_start":5,"column_end":41}},{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12887724,"byte_end":12887801,"line_start":665,"line_end":665,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12887806,"byte_end":12887852,"line_start":666,"line_end":666,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12887857,"byte_end":12887860,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ This method is more efficient than [`into_split`], but the halves cannot be","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12887865,"byte_end":12887944,"line_start":668,"line_end":668,"column_start":5,"column_end":84}},{"value":"/ moved into independently spawned tasks.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12887949,"byte_end":12887992,"line_start":669,"line_end":669,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12887997,"byte_end":12888000,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12888005,"byte_end":12888048,"line_start":671,"line_end":671,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":4332},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12888721,"byte_end":12888731,"line_start":687,"line_end":687,"column_start":12,"column_end":22},"name":"into_split","qualname":"<TcpStream>::into_split","value":"pub fn into_split(Self) -> (OwnedReadHalf, OwnedWriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12888150,"byte_end":12888227,"line_start":676,"line_end":676,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12888232,"byte_end":12888278,"line_start":677,"line_end":677,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12888283,"byte_end":12888286,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ Unlike [`split`], the owned halves can be moved to separate tasks, however","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12888291,"byte_end":12888369,"line_start":679,"line_end":679,"column_start":5,"column_end":83}},{"value":"/ this comes at the cost of a heap allocation.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12888374,"byte_end":12888422,"line_start":680,"line_end":680,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12888427,"byte_end":12888430,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ **Note:** Dropping the write half will shut down the write half of the TCP","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12888435,"byte_end":12888513,"line_start":682,"line_end":682,"column_start":5,"column_end":83}},{"value":"/ stream. This is equivalent to calling [`shutdown(Write)`] on the `TcpStream`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12888518,"byte_end":12888599,"line_start":683,"line_end":683,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12888604,"byte_end":12888607,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12888612,"byte_end":12888645,"line_start":685,"line_end":685,"column_start":5,"column_end":38}},{"value":"/ [`shutdown(Write)`]: fn@crate::net::TcpStream::shutdown","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12888650,"byte_end":12888709,"line_start":686,"line_end":686,"column_start":5,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":4416},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"udp","qualname":"::net::udp","value":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/mod.rs","parent":null,"children":[{"krate":0,"index":4417},{"krate":0,"index":4534},{"krate":0,"index":4537},{"krate":0,"index":4588},{"krate":0,"index":4589},{"krate":0,"index":4592},{"krate":0,"index":4593},{"krate":0,"index":4595}],"decl_id":null,"docs":" UDP utility types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"udp\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":23445,"byte_end":23468,"line_start":340,"line_end":340,"column_start":13,"column_end":36}},{"value":"/ UDP utility types.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/mod.rs","byte_start":12895984,"byte_end":12896006,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4601},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12896462,"byte_end":12896471,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"UdpSocket","qualname":"::net::udp::socket::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":4602}],"decl_id":null,"docs":" A UDP socket\n","sig":null,"attributes":[{"value":"cfg(feature = \"udp\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":23445,"byte_end":23468,"line_start":340,"line_end":340,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":4467},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12896669,"byte_end":12896673,"line_start":22,"line_end":22,"column_start":18,"column_end":22},"name":"bind","qualname":"<UdpSocket>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" This function will create a new UDP socket and attempt to bind it to\n the `addr` provided.\n","sig":null,"attributes":[{"value":"/ This function will create a new UDP socket and attempt to bind it to","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12896550,"byte_end":12896622,"line_start":20,"line_end":20,"column_start":5,"column_end":77}},{"value":"/ the `addr` provided.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12896627,"byte_end":12896651,"line_start":21,"line_end":21,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4474},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12898376,"byte_end":12898384,"line_start":68,"line_end":68,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UdpSocket>::from_std","value":"pub fn from_std(net::UdpSocket) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UdpSocket` from the previously bound socket provided.","sig":null,"attributes":[{"value":"/ Creates a new `UdpSocket` from the previously bound socket provided.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12897508,"byte_end":12897580,"line_start":51,"line_end":51,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12897585,"byte_end":12897588,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ The socket given will be registered with the event loop that `handle`","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12897593,"byte_end":12897666,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ is associated with. This function requires that `socket` has previously","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12897671,"byte_end":12897746,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ been bound to an address to work correctly.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12897751,"byte_end":12897798,"line_start":55,"line_end":55,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12897803,"byte_end":12897806,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This can be used in conjunction with net2's `UdpBuilder` interface to","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12897811,"byte_end":12897884,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ configure a socket before it's handed off, such as setting options like","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12897889,"byte_end":12897964,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ `reuse_address` or binding to multiple addresses.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12897969,"byte_end":12898022,"line_start":59,"line_end":59,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12898027,"byte_end":12898030,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12898035,"byte_end":12898047,"line_start":61,"line_end":61,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12898052,"byte_end":12898055,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12898060,"byte_end":12898120,"line_start":63,"line_end":63,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12898125,"byte_end":12898128,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12898133,"byte_end":12898203,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12898208,"byte_end":12898281,"line_start":66,"line_end":66,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12898286,"byte_end":12898364,"line_start":67,"line_end":67,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":4475},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12898768,"byte_end":12898773,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"split","qualname":"<UdpSocket>::split","value":"pub fn split(Self) -> (RecvHalf, SendHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits the `UdpSocket` into a receive half and a send half. The two parts\n can be used to receive and send datagrams concurrently, even from two\n different tasks.\n","sig":null,"attributes":[{"value":"/ Splits the `UdpSocket` into a receive half and a send half. The two parts","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12898576,"byte_end":12898653,"line_start":74,"line_end":74,"column_start":5,"column_end":82}},{"value":"/ can be used to receive and send datagrams concurrently, even from two","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12898658,"byte_end":12898731,"line_start":75,"line_end":75,"column_start":5,"column_end":78}},{"value":"/ different tasks.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12898736,"byte_end":12898756,"line_start":76,"line_end":76,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":4476},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12898908,"byte_end":12898918,"line_start":82,"line_end":82,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.\n","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12898837,"byte_end":12898896,"line_start":81,"line_end":81,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":4477},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12899190,"byte_end":12899197,"line_start":89,"line_end":89,"column_start":18,"column_end":25},"name":"connect","qualname":"<UdpSocket>::connect","value":"pub async fn connect<A: ToSocketAddrs, '_>(&'_ Self, A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket setting the default destination for send() and\n limiting packets that are read via recv from the address specified in\n `addr`.\n","sig":null,"attributes":[{"value":"/ Connects the UDP socket setting the default destination for send() and","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12899004,"byte_end":12899078,"line_start":86,"line_end":86,"column_start":5,"column_end":79}},{"value":"/ limiting packets that are read via recv from the address specified in","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12899083,"byte_end":12899156,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ `addr`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12899161,"byte_end":12899172,"line_start":88,"line_end":88,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4482},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12900134,"byte_end":12900138,"line_start":115,"line_end":115,"column_start":18,"column_end":22},"name":"send","qualname":"<UdpSocket>::send","value":"pub async fn send<'_, '_>(&'_ mut Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the remote address to which it is connected.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the remote address to which it is connected.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12899731,"byte_end":12899829,"line_start":108,"line_end":108,"column_start":5,"column_end":103}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12899834,"byte_end":12899905,"line_start":109,"line_end":109,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12899910,"byte_end":12899913,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12899918,"byte_end":12900001,"line_start":111,"line_end":111,"column_start":5,"column_end":88}},{"value":"/ will resolve to an error if the socket is not connected.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12900006,"byte_end":12900066,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12900071,"byte_end":12900074,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12900079,"byte_end":12900116,"line_start":114,"line_end":114,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4486},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12900644,"byte_end":12900652,"line_start":129,"line_end":129,"column_start":12,"column_end":20},"name":"try_send","qualname":"<UdpSocket>::try_send","value":"pub fn try_send(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to send data on the socket to the remote address to which it is\n connected.","sig":null,"attributes":[{"value":"/ Try to send data on the socket to the remote address to which it is","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12900248,"byte_end":12900319,"line_start":119,"line_end":119,"column_start":5,"column_end":76}},{"value":"/ connected.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12900324,"byte_end":12900338,"line_start":120,"line_end":120,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12900343,"byte_end":12900346,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12900351,"byte_end":12900364,"line_start":122,"line_end":122,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12900369,"byte_end":12900372,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ If successfull, the number of bytes sent is returned. Users","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12900377,"byte_end":12900440,"line_start":124,"line_end":124,"column_start":5,"column_end":68}},{"value":"/ should ensure that when the remote cannot receive, the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12900445,"byte_end":12900503,"line_start":125,"line_end":125,"column_start":5,"column_end":63}},{"value":"/ [`ErrorKind::WouldBlock`] is properly handled.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12900508,"byte_end":12900558,"line_start":126,"line_end":126,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12900563,"byte_end":12900566,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ [`ErrorKind::WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12900571,"byte_end":12900632,"line_start":128,"line_end":128,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4487},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12901359,"byte_end":12901368,"line_start":144,"line_end":144,"column_start":12,"column_end":21},"name":"poll_send","qualname":"<UdpSocket>::poll_send","value":"pub fn poll_send(&Self, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4488},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12902386,"byte_end":12902390,"line_start":168,"line_end":168,"column_start":18,"column_end":22},"name":"recv","qualname":"<UdpSocket>::recv","value":"pub async fn recv<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram message on the socket from\n the remote address to which it is connected. On success, the future will resolve\n to the number of bytes read.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram message on the socket from","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12901746,"byte_end":12901825,"line_start":156,"line_end":156,"column_start":5,"column_end":84}},{"value":"/ the remote address to which it is connected. On success, the future will resolve","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12901830,"byte_end":12901914,"line_start":157,"line_end":157,"column_start":5,"column_end":89}},{"value":"/ to the number of bytes read.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12901919,"byte_end":12901951,"line_start":158,"line_end":158,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12901956,"byte_end":12901959,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size to","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12901964,"byte_end":12902045,"line_start":160,"line_end":160,"column_start":5,"column_end":86}},{"value":"/ hold the message bytes. If a message is too long to fit in the supplied buffer,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12902050,"byte_end":12902133,"line_start":161,"line_end":161,"column_start":5,"column_end":88}},{"value":"/ excess bytes may be discarded.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12902138,"byte_end":12902172,"line_start":162,"line_end":162,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12902177,"byte_end":12902180,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12902185,"byte_end":12902268,"line_start":164,"line_end":164,"column_start":5,"column_end":88}},{"value":"/ will fail if the socket is not connected.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12902273,"byte_end":12902318,"line_start":165,"line_end":165,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12902323,"byte_end":12902326,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12902331,"byte_end":12902368,"line_start":167,"line_end":167,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4492},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12902530,"byte_end":12902539,"line_start":173,"line_end":173,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UdpSocket>::poll_recv","value":"pub fn poll_recv(&Self, &mut Context, &mut [u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4493},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12903258,"byte_end":12903265,"line_start":190,"line_end":190,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"pub async fn send_to<A: ToSocketAddrs, '_, '_>(&'_ mut Self, &'_ [u8], A)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the given address.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the given address.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12902967,"byte_end":12903039,"line_start":185,"line_end":185,"column_start":5,"column_end":77}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12903044,"byte_end":12903115,"line_start":186,"line_end":186,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12903120,"byte_end":12903123,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ The future will resolve to an error if the IP version of the socket does","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12903128,"byte_end":12903204,"line_start":188,"line_end":188,"column_start":5,"column_end":81}},{"value":"/ not match that of `target`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12903209,"byte_end":12903240,"line_start":189,"line_end":189,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":4498},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12904161,"byte_end":12904172,"line_start":213,"line_end":213,"column_start":12,"column_end":23},"name":"try_send_to","qualname":"<UdpSocket>::try_send_to","value":"pub fn try_send_to(&Self, &[u8], SocketAddr) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to send data on the socket to the given address.","sig":null,"attributes":[{"value":"/ Try to send data on the socket to the given address.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12903683,"byte_end":12903739,"line_start":202,"line_end":202,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12903744,"byte_end":12903747,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12903752,"byte_end":12903765,"line_start":204,"line_end":204,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12903770,"byte_end":12903773,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ If successfull, the future resolves to the number of bytes sent.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12903778,"byte_end":12903846,"line_start":206,"line_end":206,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12903851,"byte_end":12903854,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ Users should ensure that when the remote cannot receive, the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12903859,"byte_end":12903923,"line_start":208,"line_end":208,"column_start":5,"column_end":69}},{"value":"/ [`ErrorKind::WouldBlock`] is properly handled. An error can also occur","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12903928,"byte_end":12904002,"line_start":209,"line_end":209,"column_start":5,"column_end":79}},{"value":"/ if the IP version of the socket does not match that of `target`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12904007,"byte_end":12904075,"line_start":210,"line_end":210,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12904080,"byte_end":12904083,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ [`ErrorKind::WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12904088,"byte_end":12904149,"line_start":212,"line_end":212,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4499},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12904348,"byte_end":12904360,"line_start":219,"line_end":219,"column_start":12,"column_end":24},"name":"poll_send_to","qualname":"<UdpSocket>::poll_send_to","value":"pub fn poll_send_to(&Self, &mut Context, &[u8], &SocketAddr)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4500},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12905199,"byte_end":12905208,"line_start":242,"line_end":242,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram on the socket. On success,\n the future resolves to the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram on the socket. On success,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12904809,"byte_end":12904888,"line_start":236,"line_end":236,"column_start":5,"column_end":84}},{"value":"/ the future resolves to the number of bytes read and the origin.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12904893,"byte_end":12904960,"line_start":237,"line_end":237,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12904965,"byte_end":12904968,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12904973,"byte_end":12905051,"line_start":239,"line_end":239,"column_start":5,"column_end":83}},{"value":"/ to hold the message bytes. If a message is too long to fit in the supplied","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12905056,"byte_end":12905134,"line_start":240,"line_end":240,"column_start":5,"column_end":83}},{"value":"/ buffer, excess bytes may be discarded.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12905139,"byte_end":12905181,"line_start":241,"line_end":241,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4504},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12905367,"byte_end":12905381,"line_start":247,"line_end":247,"column_start":12,"column_end":26},"name":"poll_recv_from","qualname":"<UdpSocket>::poll_recv_from","value":"pub fn poll_recv_from(&Self, &mut Context, &mut [u8])\n-> Poll<Result<(usize, SocketAddr), io::Error>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4505},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12906083,"byte_end":12906092,"line_start":268,"line_end":268,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"pub fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12905866,"byte_end":12905930,"line_start":263,"line_end":263,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12905935,"byte_end":12905938,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_broadcast`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12905943,"byte_end":12906009,"line_start":265,"line_end":265,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12906014,"byte_end":12906017,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ [`set_broadcast`]: method@Self::set_broadcast","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12906022,"byte_end":12906071,"line_start":267,"line_end":267,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4506},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12906348,"byte_end":12906361,"line_start":276,"line_end":276,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"pub fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12906171,"byte_end":12906235,"line_start":272,"line_end":272,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12906240,"byte_end":12906243,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12906248,"byte_end":12906319,"line_start":274,"line_end":274,"column_start":5,"column_end":76}},{"value":"/ address.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12906324,"byte_end":12906336,"line_start":275,"line_end":275,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":4507},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12906700,"byte_end":12906717,"line_start":285,"line_end":285,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"pub fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12906454,"byte_end":12906523,"line_start":280,"line_end":280,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12906528,"byte_end":12906531,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v4`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12906536,"byte_end":12906610,"line_start":282,"line_end":282,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12906615,"byte_end":12906618,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v4`]: method@Self::set_multicast_loop_v4","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12906623,"byte_end":12906688,"line_start":284,"line_end":284,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":4508},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12907057,"byte_end":12907078,"line_start":296,"line_end":296,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"pub fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12906804,"byte_end":12906873,"line_start":289,"line_end":289,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12906878,"byte_end":12906881,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12906886,"byte_end":12906960,"line_start":291,"line_end":291,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12906965,"byte_end":12906968,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12906973,"byte_end":12906983,"line_start":293,"line_end":293,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12906988,"byte_end":12906991,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12906996,"byte_end":12907045,"line_start":295,"line_end":295,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4509},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12907421,"byte_end":12907437,"line_start":305,"line_end":305,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"pub fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12907179,"byte_end":12907247,"line_start":300,"line_end":300,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12907252,"byte_end":12907255,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_ttl_v4`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12907260,"byte_end":12907333,"line_start":302,"line_end":302,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12907338,"byte_end":12907341,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_ttl_v4`]: method@Self::set_multicast_ttl_v4","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12907346,"byte_end":12907409,"line_start":304,"line_end":304,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":4510},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12907916,"byte_end":12907936,"line_start":318,"line_end":318,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"pub fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12907522,"byte_end":12907590,"line_start":309,"line_end":309,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12907595,"byte_end":12907598,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12907603,"byte_end":12907673,"line_start":311,"line_end":311,"column_start":5,"column_end":75}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12907678,"byte_end":12907752,"line_start":312,"line_end":312,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12907757,"byte_end":12907819,"line_start":313,"line_end":313,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12907824,"byte_end":12907827,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12907832,"byte_end":12907842,"line_start":315,"line_end":315,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12907847,"byte_end":12907850,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12907855,"byte_end":12907904,"line_start":317,"line_end":317,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4511},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12908285,"byte_end":12908302,"line_start":327,"line_end":327,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"pub fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12908037,"byte_end":12908108,"line_start":322,"line_end":322,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12908113,"byte_end":12908116,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v6`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12908121,"byte_end":12908195,"line_start":324,"line_end":324,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12908200,"byte_end":12908203,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v6`]: method@Self::set_multicast_loop_v6","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12908208,"byte_end":12908273,"line_start":326,"line_end":326,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":4512},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12908646,"byte_end":12908667,"line_start":338,"line_end":338,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"pub fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12908389,"byte_end":12908460,"line_start":331,"line_end":331,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12908465,"byte_end":12908468,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12908473,"byte_end":12908549,"line_start":333,"line_end":333,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12908554,"byte_end":12908557,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12908562,"byte_end":12908572,"line_start":335,"line_end":335,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12908577,"byte_end":12908580,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv4 sockets.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12908585,"byte_end":12908634,"line_start":337,"line_end":337,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4513},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12908961,"byte_end":12908964,"line_start":347,"line_end":347,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12908768,"byte_end":12908826,"line_start":342,"line_end":342,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12908831,"byte_end":12908834,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12908839,"byte_end":12908899,"line_start":344,"line_end":344,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12908904,"byte_end":12908907,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12908912,"byte_end":12908949,"line_start":346,"line_end":346,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4514},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12909221,"byte_end":12909228,"line_start":355,"line_end":355,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12909036,"byte_end":12909094,"line_start":351,"line_end":351,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12909099,"byte_end":12909102,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12909107,"byte_end":12909183,"line_start":353,"line_end":353,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12909188,"byte_end":12909209,"line_start":354,"line_end":354,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4515},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12909746,"byte_end":12909763,"line_start":366,"line_end":366,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"pub fn join_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12909316,"byte_end":12909374,"line_start":359,"line_end":359,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12909379,"byte_end":12909382,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12909387,"byte_end":12909461,"line_start":361,"line_end":361,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12909466,"byte_end":12909539,"line_start":362,"line_end":362,"column_start":5,"column_end":78}},{"value":"/ address of the local interface with which the system should join the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12909544,"byte_end":12909616,"line_start":363,"line_end":363,"column_start":5,"column_end":77}},{"value":"/ multicast group. If it's equal to `INADDR_ANY` then an appropriate","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12909621,"byte_end":12909691,"line_start":364,"line_end":364,"column_start":5,"column_end":75}},{"value":"/ interface is chosen by the system.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12909696,"byte_end":12909734,"line_start":365,"line_end":365,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":4516},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12910228,"byte_end":12910245,"line_start":375,"line_end":375,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"pub fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12909912,"byte_end":12909972,"line_start":370,"line_end":370,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12909977,"byte_end":12909980,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12909985,"byte_end":12910059,"line_start":372,"line_end":372,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12910064,"byte_end":12910137,"line_start":373,"line_end":373,"column_start":5,"column_end":78}},{"value":"/ index of the interface to join/leave (or 0 to indicate any interface).","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12910142,"byte_end":12910216,"line_start":374,"line_end":374,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":4517},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12910612,"byte_end":12910630,"line_start":384,"line_end":384,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"pub fn leave_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12910388,"byte_end":12910447,"line_start":379,"line_end":379,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12910452,"byte_end":12910455,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v4`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12910460,"byte_end":12910530,"line_start":381,"line_end":381,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12910535,"byte_end":12910538,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v4`]: method@Self::join_multicast_v4","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12910543,"byte_end":12910600,"line_start":383,"line_end":383,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4518},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12911006,"byte_end":12911024,"line_start":393,"line_end":393,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"pub fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12910780,"byte_end":12910841,"line_start":388,"line_end":388,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12910846,"byte_end":12910849,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v6`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12910854,"byte_end":12910924,"line_start":390,"line_end":390,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12910929,"byte_end":12910932,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v6`]: method@Self::join_multicast_v6","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12910937,"byte_end":12910994,"line_start":392,"line_end":392,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":4603},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12913659,"byte_end":12913667,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"SendHalf","qualname":"::net::udp::split::SendHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" The send half after [`split`](super::UdpSocket::split).","sig":null,"attributes":[{"value":"/ The send half after [`split`](super::UdpSocket::split).","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12913471,"byte_end":12913530,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12913531,"byte_end":12913534,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Use [`send_to`](method@Self::send_to) or [`send`](method@Self::send) to send","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12913535,"byte_end":12913615,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ datagrams.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12913616,"byte_end":12913630,"line_start":27,"line_end":27,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4608},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12913881,"byte_end":12913889,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"RecvHalf","qualname":"::net::udp::split::RecvHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" The recv half after [`split`](super::UdpSocket::split).","sig":null,"attributes":[{"value":"/ The recv half after [`split`](super::UdpSocket::split).","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12913686,"byte_end":12913745,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12913746,"byte_end":12913749,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Use [`recv_from`](method@Self::recv_from) or [`recv`](method@Self::recv) to receive","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12913750,"byte_end":12913837,"line_start":33,"line_end":33,"column_start":1,"column_end":88}},{"value":"/ datagrams.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12913838,"byte_end":12913852,"line_start":34,"line_end":34,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4613},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12914236,"byte_end":12914248,"line_start":48,"line_end":48,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::udp::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating that two halves were not from the same socket, and thus could\n not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating that two halves were not from the same socket, and thus could","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12914102,"byte_end":12914184,"line_start":45,"line_end":45,"column_start":1,"column_end":83}},{"value":"/ not be `reunite`d.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12914185,"byte_end":12914207,"line_start":46,"line_end":46,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":4615},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12914249,"byte_end":12914261,"line_start":48,"line_end":48,"column_start":25,"column_end":37},"name":"0","qualname":"::net::udp::split::ReuniteError::0","value":"net::udp::split::SendHalf","parent":{"krate":0,"index":4613},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4616},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12914263,"byte_end":12914275,"line_start":48,"line_end":48,"column_start":39,"column_end":51},"name":"1","qualname":"::net::udp::split::ReuniteError::1","value":"net::udp::split::RecvHalf","parent":{"krate":0,"index":4613},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4565},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12915285,"byte_end":12915292,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"reunite","qualname":"<RecvHalf>::reunite","value":"pub fn reunite(Self, SendHalf) -> Result<UdpSocket, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `UdpSocket` back together and\n recover the original socket. Succeeds only if the two \"halves\"\n originated from the same call to `UdpSocket::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `UdpSocket` back together and","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12915070,"byte_end":12915141,"line_start":75,"line_end":75,"column_start":5,"column_end":76}},{"value":"/ recover the original socket. Succeeds only if the two \"halves\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12915146,"byte_end":12915212,"line_start":76,"line_end":76,"column_start":5,"column_end":71}},{"value":"/ originated from the same call to `UdpSocket::split`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12915217,"byte_end":12915273,"line_start":77,"line_end":77,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4566},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12915783,"byte_end":12915792,"line_start":88,"line_end":88,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<RecvHalf>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram on the socket. On success,\n the future resolves to the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram on the socket. On success,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12915393,"byte_end":12915472,"line_start":82,"line_end":82,"column_start":5,"column_end":84}},{"value":"/ the future resolves to the number of bytes read and the origin.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12915477,"byte_end":12915544,"line_start":83,"line_end":83,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12915549,"byte_end":12915552,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12915557,"byte_end":12915635,"line_start":85,"line_end":85,"column_start":5,"column_end":83}},{"value":"/ to hold the message bytes. If a message is too long to fit in the supplied","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12915640,"byte_end":12915718,"line_start":86,"line_end":86,"column_start":5,"column_end":83}},{"value":"/ buffer, excess bytes may be discarded.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12915723,"byte_end":12915765,"line_start":87,"line_end":87,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4570},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12916572,"byte_end":12916576,"line_start":104,"line_end":104,"column_start":18,"column_end":22},"name":"recv","qualname":"<RecvHalf>::recv","value":"pub async fn recv<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram message on the socket from\n the remote address to which it is connected. On success, the future will resolve\n to the number of bytes read.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram message on the socket from","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12915927,"byte_end":12916006,"line_start":92,"line_end":92,"column_start":5,"column_end":84}},{"value":"/ the remote address to which it is connected. On success, the future will resolve","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12916011,"byte_end":12916095,"line_start":93,"line_end":93,"column_start":5,"column_end":89}},{"value":"/ to the number of bytes read.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12916100,"byte_end":12916132,"line_start":94,"line_end":94,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12916137,"byte_end":12916140,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size to","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12916145,"byte_end":12916226,"line_start":96,"line_end":96,"column_start":5,"column_end":86}},{"value":"/ hold the message bytes. If a message is too long to fit in the supplied buffer,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12916231,"byte_end":12916314,"line_start":97,"line_end":97,"column_start":5,"column_end":88}},{"value":"/ excess bytes may be discarded.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12916319,"byte_end":12916353,"line_start":98,"line_end":98,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12916358,"byte_end":12916361,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12916366,"byte_end":12916449,"line_start":100,"line_end":100,"column_start":5,"column_end":88}},{"value":"/ will fail if the socket is not connected.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12916454,"byte_end":12916499,"line_start":101,"line_end":101,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12916504,"byte_end":12916507,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: super::UdpSocket::connect","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12916512,"byte_end":12916554,"line_start":103,"line_end":103,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4575},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12916925,"byte_end":12916932,"line_start":113,"line_end":113,"column_start":12,"column_end":19},"name":"reunite","qualname":"<SendHalf>::reunite","value":"pub fn reunite(Self, RecvHalf) -> Result<UdpSocket, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `UdpSocket` back together and\n recover the original socket. Succeeds only if the two \"halves\"\n originated from the same call to `UdpSocket::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `UdpSocket` back together and","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12916710,"byte_end":12916781,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ recover the original socket. Succeeds only if the two \"halves\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12916786,"byte_end":12916852,"line_start":111,"line_end":111,"column_start":5,"column_end":71}},{"value":"/ originated from the same call to `UdpSocket::split`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12916857,"byte_end":12916913,"line_start":112,"line_end":112,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4576},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12917324,"byte_end":12917331,"line_start":122,"line_end":122,"column_start":18,"column_end":25},"name":"send_to","qualname":"<SendHalf>::send_to","value":"pub async fn send_to<'_, '_, '_>(&'_ mut Self, &'_ [u8], &'_ SocketAddr)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the given address.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the given address.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12917033,"byte_end":12917105,"line_start":117,"line_end":117,"column_start":5,"column_end":77}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12917110,"byte_end":12917181,"line_start":118,"line_end":118,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12917186,"byte_end":12917189,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ The future will resolve to an error if the IP version of the socket does","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12917194,"byte_end":12917270,"line_start":120,"line_end":120,"column_start":5,"column_end":81}},{"value":"/ not match that of `target`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12917275,"byte_end":12917306,"line_start":121,"line_end":121,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":4580},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12917883,"byte_end":12917887,"line_start":133,"line_end":133,"column_start":18,"column_end":22},"name":"send","qualname":"<SendHalf>::send","value":"pub async fn send<'_, '_>(&'_ mut Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the remote address to which it is connected.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the remote address to which it is connected.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12917475,"byte_end":12917573,"line_start":126,"line_end":126,"column_start":5,"column_end":103}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12917578,"byte_end":12917649,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12917654,"byte_end":12917657,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12917662,"byte_end":12917745,"line_start":129,"line_end":129,"column_start":5,"column_end":88}},{"value":"/ will resolve to an error if the socket is not connected.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12917750,"byte_end":12917810,"line_start":130,"line_end":130,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12917815,"byte_end":12917818,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: super::UdpSocket::connect","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12917823,"byte_end":12917865,"line_start":132,"line_end":132,"column_start":5,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":4619},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::net::unix","value":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/mod.rs","parent":null,"children":[{"krate":0,"index":4620},{"krate":0,"index":4855},{"krate":0,"index":4882},{"krate":0,"index":4885},{"krate":0,"index":4961},{"krate":0,"index":4964},{"krate":0,"index":5006},{"krate":0,"index":5007},{"krate":0,"index":5010},{"krate":0,"index":5013},{"krate":0,"index":5076},{"krate":0,"index":5077},{"krate":0,"index":5080},{"krate":0,"index":5083},{"krate":0,"index":5084},{"krate":0,"index":5086},{"krate":0,"index":5213},{"krate":0,"index":5216},{"krate":0,"index":5244}],"decl_id":null,"docs":" Unix domain socket utility types\n","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":23638,"byte_end":23672,"line_start":350,"line_end":350,"column_start":13,"column_end":47}},{"value":"/ Unix domain socket utility types","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/mod.rs","byte_start":12918195,"byte_end":12918231,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":4620},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"datagram","qualname":"::net::unix::datagram","value":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/mod.rs","parent":null,"children":[{"krate":0,"index":4621},{"krate":0,"index":4736},{"krate":0,"index":4776},{"krate":0,"index":4838},{"krate":0,"index":4839},{"krate":0,"index":4842},{"krate":0,"index":4845},{"krate":0,"index":4846},{"krate":0,"index":4849},{"krate":0,"index":4852},{"krate":0,"index":4853}],"decl_id":null,"docs":" Unix datagram types.\n","sig":null,"attributes":[{"value":"/ Unix datagram types.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/mod.rs","byte_start":12918589,"byte_end":12918613,"line_start":1,"line_end":1,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":5256},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12919311,"byte_end":12919323,"line_start":17,"line_end":17,"column_start":16,"column_end":28},"name":"UnixDatagram","qualname":"::net::unix::datagram::socket::UnixDatagram","value":"UnixDatagram {  }","parent":null,"children":[{"krate":0,"index":5257}],"decl_id":null,"docs":" An I/O object representing a Unix datagram socket.\n","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":23638,"byte_end":23672,"line_start":350,"line_end":350,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4685},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12919480,"byte_end":12919484,"line_start":24,"line_end":24,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixDatagram>::bind","value":"pub fn bind<P>(P) -> io::Result<UnixDatagram> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` bound to the specified path.\n","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` bound to the specified path.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12919407,"byte_end":12919468,"line_start":23,"line_end":23,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4687},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12919947,"byte_end":12919951,"line_start":37,"line_end":37,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixDatagram>::pair","value":"pub fn pair() -> io::Result<(UnixDatagram, UnixDatagram)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12919667,"byte_end":12919716,"line_start":32,"line_end":32,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12919721,"byte_end":12919724,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This function will create a pair of interconnected Unix sockets for","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12919729,"byte_end":12919800,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ communicating back and forth between one another. Each socket will","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12919805,"byte_end":12919875,"line_start":35,"line_end":35,"column_start":5,"column_end":75}},{"value":"/ be associated with the default event loop's handle.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12919880,"byte_end":12919935,"line_start":36,"line_end":36,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4688},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12920777,"byte_end":12920785,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixDatagram>::from_std","value":"pub fn from_std(net::UnixDatagram) -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a `UnixDatagram` in the standard library and returns a\n nonblocking `UnixDatagram` from this crate.","sig":null,"attributes":[{"value":"/ Consumes a `UnixDatagram` in the standard library and returns a","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12920162,"byte_end":12920229,"line_start":45,"line_end":45,"column_start":5,"column_end":72}},{"value":"/ nonblocking `UnixDatagram` from this crate.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12920234,"byte_end":12920281,"line_start":46,"line_end":46,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12920286,"byte_end":12920289,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ The returned datagram will be associated with the given event loop","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12920294,"byte_end":12920364,"line_start":48,"line_end":48,"column_start":5,"column_end":75}},{"value":"/ specified by `handle` and is ready to perform I/O.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12920369,"byte_end":12920423,"line_start":49,"line_end":49,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12920428,"byte_end":12920431,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12920436,"byte_end":12920448,"line_start":51,"line_end":51,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12920453,"byte_end":12920456,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12920461,"byte_end":12920521,"line_start":53,"line_end":53,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12920526,"byte_end":12920529,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12920534,"byte_end":12920604,"line_start":55,"line_end":55,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12920609,"byte_end":12920682,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12920687,"byte_end":12920765,"line_start":57,"line_end":57,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":4690},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12921236,"byte_end":12921243,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"unbound","qualname":"<UnixDatagram>::unbound","value":"pub fn unbound() -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` which is not bound to any address.\n","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` which is not bound to any address.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12921157,"byte_end":12921224,"line_start":69,"line_end":69,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":4691},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12921596,"byte_end":12921603,"line_start":79,"line_end":79,"column_start":12,"column_end":19},"name":"connect","qualname":"<UnixDatagram>::connect","value":"pub fn connect<P: AsRef<Path>>(&Self, P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the socket to the specified address.","sig":null,"attributes":[{"value":"/ Connects the socket to the specified address.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12921377,"byte_end":12921426,"line_start":75,"line_end":75,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12921431,"byte_end":12921434,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ The `send` method may be used to send data to the specified address.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12921439,"byte_end":12921511,"line_start":77,"line_end":77,"column_start":5,"column_end":77}},{"value":"/ `recv` and `recv_from` will only receive data from that address.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12921516,"byte_end":12921584,"line_start":78,"line_end":78,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":4693},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12921775,"byte_end":12921779,"line_start":84,"line_end":84,"column_start":18,"column_end":22},"name":"send","qualname":"<UnixDatagram>::send","value":"pub async fn send<'_, '_>(&'_ mut Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the socket's peer.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12921707,"byte_end":12921757,"line_start":83,"line_end":83,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4697},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12922623,"byte_end":12922631,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"try_send","qualname":"<UnixDatagram>::try_send","value":"pub fn try_send(&mut Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to send a datagram to the peer without waiting.","sig":null,"attributes":[{"value":"/ Try to send a datagram to the peer without waiting.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12921894,"byte_end":12921949,"line_start":88,"line_end":88,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12921954,"byte_end":12921957,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12921962,"byte_end":12921969,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12921974,"byte_end":12921994,"line_start":91,"line_end":91,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12921999,"byte_end":12922064,"line_start":92,"line_end":92,"column_start":5,"column_end":70}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12922069,"byte_end":12922102,"line_start":93,"line_end":93,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12922107,"byte_end":12922110,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let bytes = b\"bytes\";","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12922115,"byte_end":12922140,"line_start":95,"line_end":95,"column_start":5,"column_end":30}},{"value":"/ // We use a socket pair so that they are assigned","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12922145,"byte_end":12922198,"line_start":96,"line_end":96,"column_start":5,"column_end":58}},{"value":"/ // each other as a peer.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12922203,"byte_end":12922231,"line_start":97,"line_end":97,"column_start":5,"column_end":33}},{"value":"/ let (mut first, mut second) = UnixDatagram::pair()?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12922236,"byte_end":12922292,"line_start":98,"line_end":98,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12922297,"byte_end":12922300,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ let size = first.try_send(bytes)?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12922305,"byte_end":12922343,"line_start":100,"line_end":100,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(size, bytes.len());","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12922348,"byte_end":12922382,"line_start":101,"line_end":101,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12922387,"byte_end":12922390,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = vec![0u8; 24];","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12922395,"byte_end":12922430,"line_start":103,"line_end":103,"column_start":5,"column_end":40}},{"value":"/ let size = second.try_recv(&mut buffer)?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12922435,"byte_end":12922480,"line_start":104,"line_end":104,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12922485,"byte_end":12922488,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ let dgram = &buffer.as_slice()[..size];","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12922493,"byte_end":12922536,"line_start":106,"line_end":106,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(dgram, bytes);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12922541,"byte_end":12922570,"line_start":107,"line_end":107,"column_start":5,"column_end":34}},{"value":"/ # Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12922575,"byte_end":12922587,"line_start":108,"line_end":108,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12922592,"byte_end":12922599,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12922604,"byte_end":12922611,"line_start":110,"line_end":110,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4698},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12923855,"byte_end":12923866,"line_start":148,"line_end":148,"column_start":12,"column_end":23},"name":"try_send_to","qualname":"<UnixDatagram>::try_send_to","value":"pub fn try_send_to<P>(&mut Self, &[u8], P) -> io::Result<usize> where\nP: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Try to send a datagram to the peer without waiting.","sig":null,"attributes":[{"value":"/ Try to send a datagram to the peer without waiting.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12922725,"byte_end":12922780,"line_start":115,"line_end":115,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12922785,"byte_end":12922788,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12922793,"byte_end":12922800,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12922805,"byte_end":12922825,"line_start":118,"line_end":118,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12922830,"byte_end":12922895,"line_start":119,"line_end":119,"column_start":5,"column_end":70}},{"value":"/ use {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12922900,"byte_end":12922909,"line_start":120,"line_end":120,"column_start":5,"column_end":14}},{"value":"/     tokio::net::UnixDatagram,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12922914,"byte_end":12922947,"line_start":121,"line_end":121,"column_start":5,"column_end":38}},{"value":"/     tempfile::tempdir,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12922952,"byte_end":12922978,"line_start":122,"line_end":122,"column_start":5,"column_end":31}},{"value":"/ };","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12922983,"byte_end":12922989,"line_start":123,"line_end":123,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12922994,"byte_end":12922997,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let bytes = b\"bytes\";","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12923002,"byte_end":12923027,"line_start":125,"line_end":125,"column_start":5,"column_end":30}},{"value":"/ // We use a temporary directory so that the socket","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12923032,"byte_end":12923086,"line_start":126,"line_end":126,"column_start":5,"column_end":59}},{"value":"/ // files left by the bound sockets will get cleaned up.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12923091,"byte_end":12923150,"line_start":127,"line_end":127,"column_start":5,"column_end":64}},{"value":"/ let tmp = tempdir().unwrap();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12923155,"byte_end":12923188,"line_start":128,"line_end":128,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12923193,"byte_end":12923196,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ let server_path = tmp.path().join(\"server\");","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12923201,"byte_end":12923249,"line_start":130,"line_end":130,"column_start":5,"column_end":53}},{"value":"/ let mut server = UnixDatagram::bind(&server_path)?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12923254,"byte_end":12923309,"line_start":131,"line_end":131,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12923314,"byte_end":12923317,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let client_path = tmp.path().join(\"client\");","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12923322,"byte_end":12923370,"line_start":133,"line_end":133,"column_start":5,"column_end":53}},{"value":"/ let mut client = UnixDatagram::bind(&client_path)?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12923375,"byte_end":12923430,"line_start":134,"line_end":134,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12923435,"byte_end":12923438,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ let size = client.try_send_to(bytes, &server_path)?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12923443,"byte_end":12923499,"line_start":136,"line_end":136,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(size, bytes.len());","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12923504,"byte_end":12923538,"line_start":137,"line_end":137,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12923543,"byte_end":12923546,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = vec![0u8; 24];","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12923551,"byte_end":12923586,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/ let (size, addr) = server.try_recv_from(&mut buffer)?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12923591,"byte_end":12923649,"line_start":140,"line_end":140,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12923654,"byte_end":12923657,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ let dgram = &buffer.as_slice()[..size];","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12923662,"byte_end":12923705,"line_start":142,"line_end":142,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(dgram, bytes);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12923710,"byte_end":12923739,"line_start":143,"line_end":143,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(addr.as_pathname().unwrap(), &client_path);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12923744,"byte_end":12923802,"line_start":144,"line_end":144,"column_start":5,"column_end":63}},{"value":"/ # Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12923807,"byte_end":12923819,"line_start":145,"line_end":145,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12923824,"byte_end":12923831,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12923836,"byte_end":12923843,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4701},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12925103,"byte_end":12925107,"line_start":182,"line_end":182,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnixDatagram>::recv","value":"pub async fn recv<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12925051,"byte_end":12925085,"line_start":181,"line_end":181,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":4705},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12925298,"byte_end":12925306,"line_start":187,"line_end":187,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<UnixDatagram>::try_recv","value":"pub fn try_recv(&mut Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive a datagram from the peer without waiting.\n","sig":null,"attributes":[{"value":"/ Try to receive a datagram from the peer without waiting.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12925226,"byte_end":12925286,"line_start":186,"line_end":186,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":4707},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12925963,"byte_end":12925970,"line_start":208,"line_end":208,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UnixDatagram>::send_to","value":"pub async fn send_to<P, '_, '_>(&'_ mut Self, &'_ [u8], P) -> /*impl Trait*/\nwhere P: AsRef<Path> + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the specified address.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12925891,"byte_end":12925945,"line_start":207,"line_end":207,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":4713},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12926691,"byte_end":12926700,"line_start":233,"line_end":233,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UnixDatagram>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12926639,"byte_end":12926673,"line_start":232,"line_end":232,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":4717},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12926906,"byte_end":12926919,"line_start":238,"line_end":238,"column_start":12,"column_end":25},"name":"try_recv_from","qualname":"<UnixDatagram>::try_recv_from","value":"pub fn try_recv_from(&mut Self, &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive data from the socket without waiting.\n","sig":null,"attributes":[{"value":"/ Try to receive data from the socket without waiting.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12926838,"byte_end":12926894,"line_start":237,"line_end":237,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4719},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12927625,"byte_end":12927635,"line_start":259,"line_end":259,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixDatagram>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.\n","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12927554,"byte_end":12927613,"line_start":258,"line_end":258,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":4720},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12927851,"byte_end":12927860,"line_start":266,"line_end":266,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixDatagram>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket's peer.","sig":null,"attributes":[{"value":"/ Returns the address of this socket's peer.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12927721,"byte_end":12927767,"line_start":263,"line_end":263,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12927772,"byte_end":12927775,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ The `connect` method will connect the socket to a peer.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12927780,"byte_end":12927839,"line_start":265,"line_end":265,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":4721},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12928004,"byte_end":12928014,"line_start":271,"line_end":271,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixDatagram>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12927945,"byte_end":12927992,"line_start":270,"line_end":270,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4722},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12928388,"byte_end":12928396,"line_start":280,"line_end":280,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixDatagram>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12928107,"byte_end":12928173,"line_start":275,"line_end":275,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12928178,"byte_end":12928181,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12928186,"byte_end":12928254,"line_start":277,"line_end":277,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12928259,"byte_end":12928329,"line_start":278,"line_end":278,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12928334,"byte_end":12928376,"line_start":279,"line_end":279,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4723},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12929028,"byte_end":12929033,"line_start":294,"line_end":294,"column_start":12,"column_end":17},"name":"split","qualname":"<UnixDatagram>::split","value":"pub fn split<'a>(&'a mut Self) -> (RecvHalf, SendHalf)","parent":null,"children":[],"decl_id":null,"docs":" Split a `UnixDatagram` into a receive half and a send half, which can be used\n to receive and send the datagram concurrently.","sig":null,"attributes":[{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12928627,"byte_end":12928663,"line_start":286,"line_end":286,"column_start":5,"column_end":41}},{"value":"/ Split a `UnixDatagram` into a receive half and a send half, which can be used","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12928668,"byte_end":12928749,"line_start":287,"line_end":287,"column_start":5,"column_end":86}},{"value":"/ to receive and send the datagram concurrently.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12928754,"byte_end":12928804,"line_start":288,"line_end":288,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12928809,"byte_end":12928812,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ This method is more efficient than [`into_split`], but the halves cannot","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12928817,"byte_end":12928893,"line_start":290,"line_end":290,"column_start":5,"column_end":81}},{"value":"/ be moved into independently spawned tasks.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12928898,"byte_end":12928944,"line_start":291,"line_end":291,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12928949,"byte_end":12928952,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: fn@crate::net::UnixDatagram::into_split","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12928957,"byte_end":12929016,"line_start":293,"line_end":293,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":4725},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12929693,"byte_end":12929703,"line_start":309,"line_end":309,"column_start":12,"column_end":22},"name":"into_split","qualname":"<UnixDatagram>::into_split","value":"pub fn into_split(Self) -> (OwnedRecvHalf, OwnedSendHalf)","parent":null,"children":[],"decl_id":null,"docs":" Split a `UnixDatagram` into a receive half and a send half, which can be used\n to receive and send the datagram concurrently.","sig":null,"attributes":[{"value":"/ Split a `UnixDatagram` into a receive half and a send half, which can be used","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12929117,"byte_end":12929198,"line_start":298,"line_end":298,"column_start":5,"column_end":86}},{"value":"/ to receive and send the datagram concurrently.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12929203,"byte_end":12929253,"line_start":299,"line_end":299,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12929258,"byte_end":12929261,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ Unlike [`split`], the owned halves can be moved to separate tasks,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12929266,"byte_end":12929336,"line_start":301,"line_end":301,"column_start":5,"column_end":75}},{"value":"/ however this comes at the cost of a heap allocation.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12929341,"byte_end":12929397,"line_start":302,"line_end":302,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12929402,"byte_end":12929405,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ **Note:** Dropping the write half will shut down the write half of the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12929410,"byte_end":12929484,"line_start":304,"line_end":304,"column_start":5,"column_end":79}},{"value":"/ datagram. This is equivalent to calling [`shutdown(Write)`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12929489,"byte_end":12929553,"line_start":305,"line_end":305,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12929558,"byte_end":12929561,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ [`split`]: fn@crate::net::UnixDatagram::split","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12929566,"byte_end":12929615,"line_start":307,"line_end":307,"column_start":5,"column_end":54}},{"value":"/ [`shutdown(Write)`]:fn@crate::net::UnixDatagram::shutdown","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12929620,"byte_end":12929681,"line_start":308,"line_end":308,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":5258},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":12931318,"byte_end":12931326,"line_start":18,"line_end":18,"column_start":12,"column_end":20},"name":"RecvHalf","qualname":"::net::unix::datagram::split::RecvHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed receive half of a [`UnixDatagram`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed receive half of a [`UnixDatagram`], created by [`split`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":12931131,"byte_end":12931201,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":12931202,"byte_end":12931205,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`UnixDatagram`]: UnixDatagram","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":12931206,"byte_end":12931240,"line_start":15,"line_end":15,"column_start":1,"column_end":35}},{"value":"/ [`split`]: crate::net::UnixDatagram::split()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":12931241,"byte_end":12931289,"line_start":16,"line_end":16,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":5265},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":12931535,"byte_end":12931543,"line_start":25,"line_end":25,"column_start":12,"column_end":20},"name":"SendHalf","qualname":"::net::unix::datagram::split::SendHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed send half of a [`UnixDatagram`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed send half of a [`UnixDatagram`], created by [`split`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":12931351,"byte_end":12931418,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":12931419,"byte_end":12931422,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`UnixDatagram`]: UnixDatagram","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":12931423,"byte_end":12931457,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/ [`split`]: crate::net::UnixDatagram::split()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":12931458,"byte_end":12931506,"line_start":23,"line_end":23,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4754},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":12931773,"byte_end":12931782,"line_start":33,"line_end":33,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<RecvHalf>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":12931721,"byte_end":12931755,"line_start":32,"line_end":32,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":4758},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":12931974,"byte_end":12931978,"line_start":38,"line_end":38,"column_start":18,"column_end":22},"name":"recv","qualname":"<RecvHalf>::recv","value":"pub async fn recv<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":12931922,"byte_end":12931956,"line_start":37,"line_end":37,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":4763},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":12932193,"byte_end":12932200,"line_start":45,"line_end":45,"column_start":18,"column_end":25},"name":"send_to","qualname":"<SendHalf>::send_to","value":"pub async fn send_to<P, '_, '_>(&'_ mut Self, &'_ [u8], P) -> /*impl Trait*/\nwhere P: AsRef<Path> + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the specified address.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":12932121,"byte_end":12932175,"line_start":44,"line_end":44,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":4768},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":12932465,"byte_end":12932469,"line_start":53,"line_end":53,"column_start":18,"column_end":22},"name":"send","qualname":"<SendHalf>::send","value":"pub async fn send<'_, '_>(&'_ mut Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the socket's peer.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":12932397,"byte_end":12932447,"line_start":52,"line_end":52,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":5272},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12933684,"byte_end":12933697,"line_start":34,"line_end":34,"column_start":12,"column_end":25},"name":"OwnedSendHalf","qualname":"::net::unix::datagram::split_owned::OwnedSendHalf","value":"OwnedSendHalf {  }","parent":null,"children":[{"krate":0,"index":5273},{"krate":0,"index":5274}],"decl_id":null,"docs":" Owned send half of a [`UnixDatagram`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned send half of a [`UnixDatagram`], created by [`into_split`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12933500,"byte_end":12933569,"line_start":29,"line_end":29,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12933570,"byte_end":12933573,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ [`UnixDatagram`]: UnixDatagram","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12933574,"byte_end":12933608,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ [`into_split`]: UnixDatagram::into_split()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12933609,"byte_end":12933655,"line_start":32,"line_end":32,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":5277},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12933948,"byte_end":12933961,"line_start":44,"line_end":44,"column_start":12,"column_end":25},"name":"OwnedRecvHalf","qualname":"::net::unix::datagram::split_owned::OwnedRecvHalf","value":"OwnedRecvHalf {  }","parent":null,"children":[{"krate":0,"index":5278}],"decl_id":null,"docs":" Owned receive half of a [`UnixDatagram`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned receive half of a [`UnixDatagram`], created by [`into_split`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12933761,"byte_end":12933833,"line_start":39,"line_end":39,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12933834,"byte_end":12933837,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [`UnixDatagram`]: UnixDatagram","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12933838,"byte_end":12933872,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/ [`into_split`]: UnixDatagram::into_split()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12933873,"byte_end":12933919,"line_start":42,"line_end":42,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":5281},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12934131,"byte_end":12934143,"line_start":51,"line_end":51,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::unix::datagram::split_owned::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating that two halves were not from the same socket, and thus could\n not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating that two halves were not from the same socket, and thus could","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12933997,"byte_end":12934079,"line_start":48,"line_end":48,"column_start":1,"column_end":83}},{"value":"/ not be `reunite`d.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12934080,"byte_end":12934102,"line_start":49,"line_end":49,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":5283},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12934144,"byte_end":12934161,"line_start":51,"line_end":51,"column_start":25,"column_end":42},"name":"0","qualname":"::net::unix::datagram::split_owned::ReuniteError::0","value":"net::unix::datagram::split_owned::OwnedSendHalf","parent":{"krate":0,"index":5281},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5284},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12934163,"byte_end":12934180,"line_start":51,"line_end":51,"column_start":44,"column_end":61},"name":"1","qualname":"::net::unix::datagram::split_owned::ReuniteError::1","value":"net::unix::datagram::split_owned::OwnedRecvHalf","parent":{"krate":0,"index":5281},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4811},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12935290,"byte_end":12935297,"line_start":83,"line_end":83,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedRecvHalf>::reunite","value":"pub fn reunite(Self, OwnedSendHalf) -> Result<UnixDatagram, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `UnixDatagram` back together and\n recover the original socket. Succeeds only if the two \"halves\"\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `UnixDatagram` back together and","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12935017,"byte_end":12935091,"line_start":78,"line_end":78,"column_start":5,"column_end":79}},{"value":"/ recover the original socket. Succeeds only if the two \"halves\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12935096,"byte_end":12935162,"line_start":79,"line_end":79,"column_start":5,"column_end":71}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12935167,"byte_end":12935219,"line_start":80,"line_end":80,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12935224,"byte_end":12935227,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: UnixDatagram::into_split()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12935232,"byte_end":12935278,"line_start":82,"line_end":82,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":4812},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12935458,"byte_end":12935467,"line_start":88,"line_end":88,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<OwnedRecvHalf>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12935406,"byte_end":12935440,"line_start":87,"line_end":87,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":4816},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12935663,"byte_end":12935667,"line_start":93,"line_end":93,"column_start":18,"column_end":22},"name":"recv","qualname":"<OwnedRecvHalf>::recv","value":"pub async fn recv<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12935611,"byte_end":12935645,"line_start":92,"line_end":92,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":4821},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12936088,"byte_end":12936095,"line_start":104,"line_end":104,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedSendHalf>::reunite","value":"pub fn reunite(Self, OwnedRecvHalf) -> Result<UnixDatagram, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `UnixDatagram` back together and\n recover the original socket. Succeeds only if the two \"halves\"\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `UnixDatagram` back together and","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12935815,"byte_end":12935889,"line_start":99,"line_end":99,"column_start":5,"column_end":79}},{"value":"/ recover the original socket. Succeeds only if the two \"halves\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12935894,"byte_end":12935960,"line_start":100,"line_end":100,"column_start":5,"column_end":71}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12935965,"byte_end":12936017,"line_start":101,"line_end":101,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12936022,"byte_end":12936025,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: UnixDatagram::into_split()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12936030,"byte_end":12936076,"line_start":103,"line_end":103,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":4822},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12936276,"byte_end":12936283,"line_start":109,"line_end":109,"column_start":18,"column_end":25},"name":"send_to","qualname":"<OwnedSendHalf>::send_to","value":"pub async fn send_to<P, '_, '_>(&'_ mut Self, &'_ [u8], P) -> /*impl Trait*/\nwhere P: AsRef<Path> + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the specified address.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12936204,"byte_end":12936258,"line_start":108,"line_end":108,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":4827},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12936552,"byte_end":12936556,"line_start":117,"line_end":117,"column_start":18,"column_end":22},"name":"send","qualname":"<OwnedSendHalf>::send","value":"pub async fn send<'_, '_>(&'_ mut Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the socket's peer.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12936484,"byte_end":12936534,"line_start":116,"line_end":116,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4831},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12936877,"byte_end":12936883,"line_start":124,"line_end":124,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedSendHalf>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Destroy the send half, but don't close the send half of the stream\n until the receive half is dropped. If the read half has already been\n dropped, this closes the stream.\n","sig":null,"attributes":[{"value":"/ Destroy the send half, but don't close the send half of the stream","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12936677,"byte_end":12936747,"line_start":121,"line_end":121,"column_start":5,"column_end":75}},{"value":"/ until the receive half is dropped. If the read half has already been","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12936752,"byte_end":12936824,"line_start":122,"line_end":122,"column_start":5,"column_end":77}},{"value":"/ dropped, this closes the stream.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12936829,"byte_end":12936865,"line_start":123,"line_end":123,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":5287},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/incoming.rs","byte_start":12937576,"byte_end":12937584,"line_start":10,"line_end":10,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::unix::incoming::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":5289}],"decl_id":null,"docs":" Stream of listeners\n","sig":null,"attributes":[{"value":"/ Stream of listeners","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/incoming.rs","byte_start":12937475,"byte_end":12937498,"line_start":7,"line_end":7,"column_start":1,"column_end":24}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/incoming.rs","byte_start":12937516,"byte_end":12937564,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4878},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/incoming.rs","byte_start":12938093,"byte_end":12938104,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<Incoming>::poll_accept","value":"pub fn poll_accept(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<UnixStream>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to poll `UnixStream` by polling inner `UnixListener` to accept\n connection.","sig":null,"attributes":[{"value":"/ Attempts to poll `UnixStream` by polling inner `UnixListener` to accept","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/incoming.rs","byte_start":12937764,"byte_end":12937839,"line_start":19,"line_end":19,"column_start":5,"column_end":80}},{"value":"/ connection.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/incoming.rs","byte_start":12937844,"byte_end":12937859,"line_start":20,"line_end":20,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/incoming.rs","byte_start":12937864,"byte_end":12937867,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ If `UnixListener` isn't ready yet, `Poll::Pending` is returned and","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/incoming.rs","byte_start":12937872,"byte_end":12937942,"line_start":22,"line_end":22,"column_start":5,"column_end":75}},{"value":"/ current task will be notified by a waker.  Otherwise `Poll::Ready` with","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/incoming.rs","byte_start":12937947,"byte_end":12938022,"line_start":23,"line_end":23,"column_start":5,"column_end":80}},{"value":"/ `Result` containing `UnixStream` will be returned.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/incoming.rs","byte_start":12938027,"byte_end":12938081,"line_start":24,"line_end":24,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":5293},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12940430,"byte_end":12940442,"line_start":49,"line_end":49,"column_start":16,"column_end":28},"name":"UnixListener","qualname":"::net::unix::listener::UnixListener","value":"UnixListener {  }","parent":null,"children":[{"krate":0,"index":5294}],"decl_id":null,"docs":" A Unix socket which can accept connections from other Unix sockets.","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":23638,"byte_end":23672,"line_start":350,"line_end":350,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4936},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12940941,"byte_end":12940945,"line_start":64,"line_end":64,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixListener>::bind","value":"pub fn bind<P>(P) -> io::Result<UnixListener> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixListener` bound to the specified path.","sig":null,"attributes":[{"value":"/ Creates a new `UnixListener` bound to the specified path.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12940526,"byte_end":12940587,"line_start":55,"line_end":55,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12940592,"byte_end":12940595,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12940600,"byte_end":12940612,"line_start":57,"line_end":57,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12940617,"byte_end":12940620,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12940625,"byte_end":12940685,"line_start":59,"line_end":59,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12940690,"byte_end":12940693,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12940698,"byte_end":12940768,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12940773,"byte_end":12940846,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12940851,"byte_end":12940929,"line_start":63,"line_end":63,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":4938},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12941789,"byte_end":12941797,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixListener>::from_std","value":"pub fn from_std(net::UnixListener) -> io::Result<UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a `UnixListener` in the standard library and returns a\n nonblocking `UnixListener` from this crate.","sig":null,"attributes":[{"value":"/ Consumes a `UnixListener` in the standard library and returns a","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12941174,"byte_end":12941241,"line_start":73,"line_end":73,"column_start":5,"column_end":72}},{"value":"/ nonblocking `UnixListener` from this crate.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12941246,"byte_end":12941293,"line_start":74,"line_end":74,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12941298,"byte_end":12941301,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ The returned listener will be associated with the given event loop","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12941306,"byte_end":12941376,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ specified by `handle` and is ready to perform I/O.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12941381,"byte_end":12941435,"line_start":77,"line_end":77,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12941440,"byte_end":12941443,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12941448,"byte_end":12941460,"line_start":79,"line_end":79,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12941465,"byte_end":12941468,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12941473,"byte_end":12941533,"line_start":81,"line_end":81,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12941538,"byte_end":12941541,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12941546,"byte_end":12941616,"line_start":83,"line_end":83,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12941621,"byte_end":12941694,"line_start":84,"line_end":84,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12941699,"byte_end":12941777,"line_start":85,"line_end":85,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":4939},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12942084,"byte_end":12942094,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.\n","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12942018,"byte_end":12942072,"line_start":92,"line_end":92,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":4940},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12942239,"byte_end":12942249,"line_start":98,"line_end":98,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixListener>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12942180,"byte_end":12942227,"line_start":97,"line_end":97,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4941},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12942415,"byte_end":12942421,"line_start":103,"line_end":103,"column_start":18,"column_end":24},"name":"accept","qualname":"<UnixListener>::accept","value":"pub async fn accept<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.\n","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12942342,"byte_end":12942397,"line_start":102,"line_end":102,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4945},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12942749,"byte_end":12942760,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<UnixListener>::poll_accept","value":"pub fn poll_accept(&mut Self, &mut Context)\n-> Poll<io::Result<(UnixStream, SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to accept a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Polls to accept a new incoming connection to this listener.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12942535,"byte_end":12942598,"line_start":107,"line_end":107,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12942603,"byte_end":12942606,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ If there is no connection to accept, `Poll::Pending` is returned and","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12942611,"byte_end":12942683,"line_start":109,"line_end":109,"column_start":5,"column_end":77}},{"value":"/ the current task will be notified by a waker.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12942688,"byte_end":12942737,"line_start":110,"line_end":110,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4947},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12945090,"byte_end":12945098,"line_start":178,"line_end":178,"column_start":12,"column_end":20},"name":"incoming","qualname":"<UnixListener>::incoming","value":"pub fn incoming(&mut Self) -> Incoming","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the connections being received on this listener.","sig":null,"attributes":[{"value":"/ Returns a stream over the connections being received on this listener.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12943726,"byte_end":12943800,"line_start":141,"line_end":141,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12943805,"byte_end":12943808,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Note that `UnixListener` also directly implements `Stream`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12943813,"byte_end":12943876,"line_start":143,"line_end":143,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12943881,"byte_end":12943884,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ The returned stream will never return `None` and will also not yield the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12943889,"byte_end":12943965,"line_start":145,"line_end":145,"column_start":5,"column_end":81}},{"value":"/ peer's `SocketAddr` structure. Iterating over it is equivalent to","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12943970,"byte_end":12944039,"line_start":146,"line_end":146,"column_start":5,"column_end":74}},{"value":"/ calling accept in a loop.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12944044,"byte_end":12944073,"line_start":147,"line_end":147,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12944078,"byte_end":12944081,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12944086,"byte_end":12944098,"line_start":149,"line_end":149,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12944103,"byte_end":12944106,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ Note that accepting a connection can lead to various errors and not all","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12944111,"byte_end":12944186,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/ of them are necessarily fatal ‒ for example having too many open file","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12944191,"byte_end":12944266,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ descriptors or the other side closing the connection while it waits in","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12944271,"byte_end":12944345,"line_start":153,"line_end":153,"column_start":5,"column_end":79}},{"value":"/ an accept queue. These would terminate the stream if not handled in any","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12944350,"byte_end":12944425,"line_start":154,"line_end":154,"column_start":5,"column_end":80}},{"value":"/ way.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12944430,"byte_end":12944438,"line_start":155,"line_end":155,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12944443,"byte_end":12944446,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12944451,"byte_end":12944465,"line_start":157,"line_end":157,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12944470,"byte_end":12944473,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12944478,"byte_end":12944491,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixListener;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12944496,"byte_end":12944529,"line_start":160,"line_end":160,"column_start":5,"column_end":38}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12944534,"byte_end":12944567,"line_start":161,"line_end":161,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12944572,"byte_end":12944575,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12944580,"byte_end":12944598,"line_start":163,"line_end":163,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12944603,"byte_end":12944624,"line_start":164,"line_end":164,"column_start":5,"column_end":26}},{"value":"/     let mut listener = UnixListener::bind(\"/path/to/the/socket\").unwrap();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12944629,"byte_end":12944707,"line_start":165,"line_end":165,"column_start":5,"column_end":83}},{"value":"/     let mut incoming = listener.incoming();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12944712,"byte_end":12944759,"line_start":166,"line_end":166,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12944764,"byte_end":12944767,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/     while let Some(stream) = incoming.next().await {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12944772,"byte_end":12944828,"line_start":168,"line_end":168,"column_start":5,"column_end":61}},{"value":"/         match stream {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12944833,"byte_end":12944859,"line_start":169,"line_end":169,"column_start":5,"column_end":31}},{"value":"/             Ok(stream) => {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12944864,"byte_end":12944895,"line_start":170,"line_end":170,"column_start":5,"column_end":36}},{"value":"/                 println!(\"new client!\");","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12944900,"byte_end":12944944,"line_start":171,"line_end":171,"column_start":5,"column_end":49}},{"value":"/             }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12944949,"byte_end":12944966,"line_start":172,"line_end":172,"column_start":5,"column_end":22}},{"value":"/             Err(e) => { /* connection failed */ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12944971,"byte_end":12945024,"line_start":173,"line_end":173,"column_start":5,"column_end":58}},{"value":"/         }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12945029,"byte_end":12945042,"line_start":174,"line_end":174,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12945047,"byte_end":12945056,"line_start":175,"line_end":175,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12945061,"byte_end":12945066,"line_start":176,"line_end":176,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12945071,"byte_end":12945078,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5295},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":12947569,"byte_end":12947577,"line_start":30,"line_end":30,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::unix::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed read half of a [`UnixStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed read half of a [`UnixStream`], created by [`split`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":12947148,"byte_end":12947213,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":12947214,"byte_end":12947217,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Reading from a `ReadHalf` is usually done using the convenience methods found on the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":12947218,"byte_end":12947306,"line_start":22,"line_end":22,"column_start":1,"column_end":89}},{"value":"/ [`AsyncReadExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":12947307,"byte_end":12947384,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":12947385,"byte_end":12947388,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":12947389,"byte_end":12947419,"line_start":25,"line_end":25,"column_start":1,"column_end":31}},{"value":"/ [`split`]: UnixStream::split()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":12947420,"byte_end":12947454,"line_start":26,"line_end":26,"column_start":1,"column_end":35}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":12947455,"byte_end":12947506,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":12947507,"byte_end":12947540,"line_start":28,"line_end":28,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":5302},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":12948287,"byte_end":12948296,"line_start":47,"line_end":47,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::unix::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed write half of a [`UnixStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed write half of a [`UnixStream`], created by [`split`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":12947600,"byte_end":12947666,"line_start":32,"line_end":32,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":12947667,"byte_end":12947670,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":12947671,"byte_end":12947757,"line_start":34,"line_end":34,"column_start":1,"column_end":87}},{"value":"/ shut down the UnixStream stream in the write direction.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":12947758,"byte_end":12947817,"line_start":35,"line_end":35,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":12947818,"byte_end":12947821,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Writing to an `WriteHalf` is usually done using the convenience methods found","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":12947822,"byte_end":12947903,"line_start":37,"line_end":37,"column_start":1,"column_end":82}},{"value":"/ on the [`AsyncWriteExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":12947904,"byte_end":12947989,"line_start":38,"line_end":38,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":12947990,"byte_end":12947993,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":12947994,"byte_end":12948024,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/ [`split`]: UnixStream::split()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":12948025,"byte_end":12948059,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":12948060,"byte_end":12948107,"line_start":42,"line_end":42,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":12948108,"byte_end":12948170,"line_start":43,"line_end":43,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":12948171,"byte_end":12948224,"line_start":44,"line_end":44,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":12948225,"byte_end":12948258,"line_start":45,"line_end":45,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":5309},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12950596,"byte_end":12950609,"line_start":32,"line_end":32,"column_start":12,"column_end":25},"name":"OwnedReadHalf","qualname":"::net::unix::split_owned::OwnedReadHalf","value":"OwnedReadHalf {  }","parent":null,"children":[{"krate":0,"index":5310}],"decl_id":null,"docs":" Owned read half of a [`UnixStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned read half of a [`UnixStream`], created by [`into_split`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12950133,"byte_end":12950200,"line_start":22,"line_end":22,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12950201,"byte_end":12950204,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Reading from an `OwnedReadHalf` is usually done using the convenience methods found","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12950205,"byte_end":12950292,"line_start":24,"line_end":24,"column_start":1,"column_end":88}},{"value":"/ on the [`AsyncReadExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12950293,"byte_end":12950377,"line_start":25,"line_end":25,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12950378,"byte_end":12950381,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`UnixStream`]: crate::net::UnixStream","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12950382,"byte_end":12950424,"line_start":27,"line_end":27,"column_start":1,"column_end":43}},{"value":"/ [`into_split`]: crate::net::UnixStream::into_split()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12950425,"byte_end":12950481,"line_start":28,"line_end":28,"column_start":1,"column_end":57}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12950482,"byte_end":12950533,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12950534,"byte_end":12950567,"line_start":30,"line_end":30,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":5313},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12951443,"byte_end":12951457,"line_start":53,"line_end":53,"column_start":12,"column_end":26},"name":"OwnedWriteHalf","qualname":"::net::unix::split_owned::OwnedWriteHalf","value":"OwnedWriteHalf {  }","parent":null,"children":[{"krate":0,"index":5314},{"krate":0,"index":5315}],"decl_id":null,"docs":" Owned write half of a [`UnixStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned write half of a [`UnixStream`], created by [`into_split`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12950643,"byte_end":12950711,"line_start":36,"line_end":36,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12950712,"byte_end":12950715,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implementation of this type,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12950716,"byte_end":12950780,"line_start":38,"line_end":38,"column_start":1,"column_end":65}},{"value":"/ [`poll_shutdown`] will shut down the stream in the write direction.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12950781,"byte_end":12950852,"line_start":39,"line_end":39,"column_start":1,"column_end":72}},{"value":"/ Dropping the write half will also shut down the write half of the stream.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12950853,"byte_end":12950930,"line_start":40,"line_end":40,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12950931,"byte_end":12950934,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12950935,"byte_end":12951015,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/ found on the [`AsyncWriteExt`] trait. Examples import this trait through","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12951016,"byte_end":12951092,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ [the prelude].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12951093,"byte_end":12951111,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12951112,"byte_end":12951115,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ [`UnixStream`]: crate::net::UnixStream","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12951116,"byte_end":12951158,"line_start":46,"line_end":46,"column_start":1,"column_end":43}},{"value":"/ [`into_split`]: crate::net::UnixStream::into_split()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12951159,"byte_end":12951215,"line_start":47,"line_end":47,"column_start":1,"column_end":57}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12951216,"byte_end":12951263,"line_start":48,"line_end":48,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12951264,"byte_end":12951326,"line_start":49,"line_end":49,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12951327,"byte_end":12951380,"line_start":50,"line_end":50,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12951381,"byte_end":12951414,"line_start":51,"line_end":51,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":5318},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12952426,"byte_end":12952438,"line_start":87,"line_end":87,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::unix::split_owned::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating that two halves were not from the same socket, and thus could\n not be reunited.\n","sig":null,"attributes":[{"value":"/ Error indicating that two halves were not from the same socket, and thus could","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12952294,"byte_end":12952376,"line_start":84,"line_end":84,"column_start":1,"column_end":83}},{"value":"/ not be reunited.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12952377,"byte_end":12952397,"line_start":85,"line_end":85,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":5320},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12952439,"byte_end":12952456,"line_start":87,"line_end":87,"column_start":25,"column_end":42},"name":"0","qualname":"::net::unix::split_owned::ReuniteError::0","value":"net::unix::split_owned::OwnedReadHalf","parent":{"krate":0,"index":5318},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5321},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12952458,"byte_end":12952476,"line_start":87,"line_end":87,"column_start":44,"column_end":62},"name":"1","qualname":"::net::unix::split_owned::ReuniteError::1","value":"net::unix::split_owned::OwnedWriteHalf","parent":{"krate":0,"index":5318},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5059},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12953036,"byte_end":12953043,"line_start":106,"line_end":106,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedReadHalf>::reunite","value":"pub fn reunite(Self, OwnedWriteHalf) -> Result<UnixStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `UnixStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `UnixStream` back together and","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12952759,"byte_end":12952829,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12952834,"byte_end":12952898,"line_start":102,"line_end":102,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12952903,"byte_end":12952955,"line_start":103,"line_end":103,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12952960,"byte_end":12952963,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: crate::net::UnixStream::into_split()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12952968,"byte_end":12953024,"line_start":105,"line_end":105,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":5064},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12953784,"byte_end":12953791,"line_start":131,"line_end":131,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedWriteHalf>::reunite","value":"pub fn reunite(Self, OwnedReadHalf) -> Result<UnixStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `UnixStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `UnixStream` back together and","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12953507,"byte_end":12953577,"line_start":126,"line_end":126,"column_start":5,"column_end":75}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12953582,"byte_end":12953646,"line_start":127,"line_end":127,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12953651,"byte_end":12953703,"line_start":128,"line_end":128,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12953708,"byte_end":12953711,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: crate::net::UnixStream::into_split()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12953716,"byte_end":12953772,"line_start":130,"line_end":130,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":5065},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12954097,"byte_end":12954103,"line_start":138,"line_end":138,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedWriteHalf>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Destroy the write half, but don't close the write half of the stream\n until the read half is dropped. If the read half has already been\n dropped, this closes the stream.\n","sig":null,"attributes":[{"value":"/ Destroy the write half, but don't close the write half of the stream","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12953898,"byte_end":12953970,"line_start":135,"line_end":135,"column_start":5,"column_end":77}},{"value":"/ until the read half is dropped. If the read half has already been","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12953975,"byte_end":12954044,"line_start":136,"line_end":136,"column_start":5,"column_end":74}},{"value":"/ dropped, this closes the stream.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12954049,"byte_end":12954085,"line_start":137,"line_end":137,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":5324},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12956193,"byte_end":12956203,"line_start":24,"line_end":24,"column_start":16,"column_end":26},"name":"UnixStream","qualname":"::net::unix::stream::UnixStream","value":"UnixStream {  }","parent":null,"children":[{"krate":0,"index":5325}],"decl_id":null,"docs":" A structure representing a connected Unix socket.","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":23638,"byte_end":23672,"line_start":350,"line_end":350,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":5177},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12956525,"byte_end":12956532,"line_start":35,"line_end":35,"column_start":18,"column_end":25},"name":"connect","qualname":"<UnixStream>::connect","value":"pub async fn connect<P>(P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Connects to the socket named by `path`.","sig":null,"attributes":[{"value":"/ Connects to the socket named by `path`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12956283,"byte_end":12956326,"line_start":30,"line_end":30,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12956331,"byte_end":12956334,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ This function will create a new Unix socket and connect to the path","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12956339,"byte_end":12956410,"line_start":32,"line_end":32,"column_start":5,"column_end":76}},{"value":"/ specified, associating the returned stream with the default event loop's","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12956415,"byte_end":12956491,"line_start":33,"line_end":33,"column_start":5,"column_end":81}},{"value":"/ handle.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12956496,"byte_end":12956507,"line_start":34,"line_end":34,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5182},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12957417,"byte_end":12957425,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixStream>::from_std","value":"pub fn from_std(net::UnixStream) -> io::Result<UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a `UnixStream` in the standard library and returns a\n nonblocking `UnixStream` from this crate.","sig":null,"attributes":[{"value":"/ Consumes a `UnixStream` in the standard library and returns a","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12956808,"byte_end":12956873,"line_start":46,"line_end":46,"column_start":5,"column_end":70}},{"value":"/ nonblocking `UnixStream` from this crate.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12956878,"byte_end":12956923,"line_start":47,"line_end":47,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12956928,"byte_end":12956931,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be associated with the given event loop","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12956936,"byte_end":12957004,"line_start":49,"line_end":49,"column_start":5,"column_end":73}},{"value":"/ specified by `handle` and is ready to perform I/O.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12957009,"byte_end":12957063,"line_start":50,"line_end":50,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12957068,"byte_end":12957071,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12957076,"byte_end":12957088,"line_start":52,"line_end":52,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12957093,"byte_end":12957096,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12957101,"byte_end":12957161,"line_start":54,"line_end":54,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12957166,"byte_end":12957169,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12957174,"byte_end":12957244,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12957249,"byte_end":12957322,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12957327,"byte_end":12957405,"line_start":58,"line_end":58,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":5183},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12957909,"byte_end":12957913,"line_start":71,"line_end":71,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixStream>::pair","value":"pub fn pair() -> io::Result<(UnixStream, UnixStream)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12957629,"byte_end":12957678,"line_start":66,"line_end":66,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12957683,"byte_end":12957686,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This function will create a pair of interconnected Unix sockets for","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12957691,"byte_end":12957762,"line_start":68,"line_end":68,"column_start":5,"column_end":76}},{"value":"/ communicating back and forth between one another. Each socket will","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12957767,"byte_end":12957837,"line_start":69,"line_end":69,"column_start":5,"column_end":75}},{"value":"/ be associated with the default event loop's handle.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12957842,"byte_end":12957897,"line_start":70,"line_end":70,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5185},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12958354,"byte_end":12958364,"line_start":85,"line_end":85,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this connection.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12958274,"byte_end":12958342,"line_start":84,"line_end":84,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":5186},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12958531,"byte_end":12958540,"line_start":90,"line_end":90,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote half of this connection.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12958450,"byte_end":12958519,"line_start":89,"line_end":89,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":5187},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12958719,"byte_end":12958728,"line_start":95,"line_end":95,"column_start":12,"column_end":21},"name":"peer_cred","qualname":"<UnixStream>::peer_cred","value":"pub fn peer_cred(&Self) -> io::Result<UCred>","parent":null,"children":[],"decl_id":null,"docs":" Returns effective credentials of the process which called `connect` or `pair`.\n","sig":null,"attributes":[{"value":"/ Returns effective credentials of the process which called `connect` or `pair`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12958625,"byte_end":12958707,"line_start":94,"line_end":94,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":5188},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12958864,"byte_end":12958874,"line_start":100,"line_end":100,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixStream>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12958805,"byte_end":12958852,"line_start":99,"line_end":99,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":5189},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12959248,"byte_end":12959256,"line_start":109,"line_end":109,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixStream>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12958967,"byte_end":12959033,"line_start":104,"line_end":104,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12959038,"byte_end":12959041,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12959046,"byte_end":12959114,"line_start":106,"line_end":106,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12959119,"byte_end":12959189,"line_start":107,"line_end":107,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12959194,"byte_end":12959236,"line_start":108,"line_end":108,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":5190},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12959859,"byte_end":12959864,"line_start":123,"line_end":123,"column_start":12,"column_end":17},"name":"split","qualname":"<UnixStream>::split","value":"pub fn split<'a>(&'a mut Self) -> (ReadHalf, WriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Split a `UnixStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12959487,"byte_end":12959523,"line_start":115,"line_end":115,"column_start":5,"column_end":41}},{"value":"/ Split a `UnixStream` into a read half and a write half, which can be used","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12959528,"byte_end":12959605,"line_start":116,"line_end":116,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12959610,"byte_end":12959656,"line_start":117,"line_end":117,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12959661,"byte_end":12959664,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This method is more efficient than [`into_split`], but the halves cannot be","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12959669,"byte_end":12959748,"line_start":119,"line_end":119,"column_start":5,"column_end":84}},{"value":"/ moved into independently spawned tasks.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12959753,"byte_end":12959796,"line_start":120,"line_end":120,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12959801,"byte_end":12959804,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: Self::into_split()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12959809,"byte_end":12959847,"line_start":122,"line_end":122,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":5192},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12960496,"byte_end":12960506,"line_start":138,"line_end":138,"column_start":12,"column_end":22},"name":"into_split","qualname":"<UnixStream>::into_split","value":"pub fn into_split(Self) -> (OwnedReadHalf, OwnedWriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `UnixStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `UnixStream` into a read half and a write half, which can be used","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12959949,"byte_end":12960027,"line_start":127,"line_end":127,"column_start":5,"column_end":83}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12960032,"byte_end":12960078,"line_start":128,"line_end":128,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12960083,"byte_end":12960086,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ Unlike [`split`], the owned halves can be moved to separate tasks, however","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12960091,"byte_end":12960169,"line_start":130,"line_end":130,"column_start":5,"column_end":83}},{"value":"/ this comes at the cost of a heap allocation.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12960174,"byte_end":12960222,"line_start":131,"line_end":131,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12960227,"byte_end":12960230,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ **Note:** Dropping the write half will shut down the write half of the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12960235,"byte_end":12960309,"line_start":133,"line_end":133,"column_start":5,"column_end":79}},{"value":"/ stream. This is equivalent to calling [`shutdown(Write)`] on the `UnixStream`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12960314,"byte_end":12960396,"line_start":134,"line_end":134,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12960401,"byte_end":12960404,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ [`split`]: Self::split()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12960409,"byte_end":12960437,"line_start":136,"line_end":136,"column_start":5,"column_end":33}},{"value":"/ [`shutdown(Write)`]: fn@Self::shutdown","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12960442,"byte_end":12960484,"line_start":137,"line_end":137,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":5326},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/ucred.rs","byte_start":12964090,"byte_end":12964095,"line_start":5,"line_end":5,"column_start":12,"column_end":17},"name":"UCred","qualname":"::net::unix::ucred::UCred","value":"UCred { uid, gid }","parent":null,"children":[{"krate":0,"index":5327},{"krate":0,"index":5328}],"decl_id":null,"docs":" Credentials of a process\n","sig":null,"attributes":[{"value":"/ Credentials of a process","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/ucred.rs","byte_start":12963999,"byte_end":12964027,"line_start":3,"line_end":3,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":5327},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/ucred.rs","byte_start":12964143,"byte_end":12964146,"line_start":7,"line_end":7,"column_start":9,"column_end":12},"name":"uid","qualname":"::net::unix::ucred::UCred::uid","value":"u32","parent":{"krate":0,"index":5326},"children":[],"decl_id":null,"docs":" UID (user ID) of the process\n","sig":null,"attributes":[{"value":"/ UID (user ID) of the process","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/ucred.rs","byte_start":12964102,"byte_end":12964134,"line_start":6,"line_end":6,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":5328},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/ucred.rs","byte_start":12964201,"byte_end":12964204,"line_start":9,"line_end":9,"column_start":9,"column_end":12},"name":"gid","qualname":"::net::unix::ucred::UCred::gid","value":"u32","parent":{"krate":0,"index":5326},"children":[],"decl_id":null,"docs":" GID (group ID) of the process\n","sig":null,"attributes":[{"value":"/ GID (group ID) of the process","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/ucred.rs","byte_start":12964159,"byte_end":12964192,"line_start":8,"line_end":8,"column_start":5,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":810},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/mod.rs","byte_start":93907,"byte_end":93913,"line_start":55,"line_end":55,"column_start":10,"column_end":16},"name":"Unpark","qualname":"::park::Park::Unpark","value":"type Unpark: Unpark;","parent":{"krate":0,"index":809},"children":[],"decl_id":null,"docs":" Unpark handle type for the `Park` implementation.\n","sig":null,"attributes":[{"value":"/ Unpark handle type for the `Park` implementation.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/mod.rs","byte_start":93844,"byte_end":93897,"line_start":54,"line_end":54,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":811},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/mod.rs","byte_start":93966,"byte_end":93971,"line_start":58,"line_end":58,"column_start":10,"column_end":15},"name":"Error","qualname":"::park::Park::Error","value":"type Error;","parent":{"krate":0,"index":809},"children":[],"decl_id":null,"docs":" Error returned by `park`\n","sig":null,"attributes":[{"value":"/ Error returned by `park`","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/mod.rs","byte_start":93928,"byte_end":93956,"line_start":57,"line_end":57,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":822},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","parent":null,"children":[{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":827},{"krate":0,"index":830},{"krate":0,"index":833},{"krate":0,"index":5473},{"krate":0,"index":5474},{"krate":0,"index":5477},{"krate":0,"index":5480},{"krate":0,"index":5483}],"decl_id":null,"docs":" A \"prelude\" for users of the `tokio` crate.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":105933,"byte_end":105951,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ A \"prelude\" for users of the `tokio` crate.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":105953,"byte_end":106000,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106001,"byte_end":106004,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This prelude is similar to the standard library's prelude in that you'll","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106005,"byte_end":106081,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ almost always want to import its entire contents, but unlike the standard","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106082,"byte_end":106159,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ library's prelude you'll have to do so manually:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106160,"byte_end":106212,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106213,"byte_end":106216,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106217,"byte_end":106224,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # #![allow(warnings)]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106225,"byte_end":106250,"line_start":10,"line_end":10,"column_start":1,"column_end":26}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106251,"byte_end":106277,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106278,"byte_end":106285,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106286,"byte_end":106289,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The prelude may grow over time as additional items see ubiquitous use.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106290,"byte_end":106364,"line_start":14,"line_end":14,"column_start":1,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":836},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"runtime","qualname":"::runtime","value":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","parent":null,"children":[{"krate":0,"index":837},{"krate":0,"index":5496},{"krate":0,"index":5625},{"krate":0,"index":5628},{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":860},{"krate":0,"index":926},{"krate":0,"index":929},{"krate":0,"index":955},{"krate":0,"index":958},{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":1000},{"krate":0,"index":1003},{"krate":0,"index":1025},{"krate":0,"index":1066},{"krate":0,"index":1069},{"krate":0,"index":1072},{"krate":0,"index":1075},{"krate":0,"index":6394},{"krate":0,"index":1096},{"krate":0,"index":1099},{"krate":0,"index":6397},{"krate":0,"index":6401},{"krate":0,"index":6403},{"krate":0,"index":6410},{"krate":0,"index":1102},{"krate":0,"index":1103}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"/ The Tokio runtime.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":106576,"byte_end":106598,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":106599,"byte_end":106602,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Unlike other Rust programs, asynchronous applications require","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":106603,"byte_end":106668,"line_start":3,"line_end":3,"column_start":1,"column_end":66}},{"value":"/ runtime support. In particular, the following runtime services are","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":106669,"byte_end":106739,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/ necessary:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":106740,"byte_end":106754,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":106755,"byte_end":106758,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ * An **I/O event loop**, called the driver, which drives I/O resources and","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":106759,"byte_end":106837,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/   dispatches I/O events to tasks that depend on them.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":106838,"byte_end":106895,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"/ * A **scheduler** to execute [tasks] that use these I/O resources.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":106896,"byte_end":106966,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ * A **timer** for scheduling work to run after a set period of time.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":106967,"byte_end":107039,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107040,"byte_end":107043,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Tokio's [`Runtime`] bundles all of these services as a single type, allowing","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107044,"byte_end":107124,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ them to be started, shut down, and configured together. However, most","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107125,"byte_end":107198,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/ applications won't need to use [`Runtime`] directly. Instead, they can","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107199,"byte_end":107273,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ use the [`tokio::main`] attribute macro, which creates a [`Runtime`] under","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107274,"byte_end":107352,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ the hood.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107353,"byte_end":107366,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107367,"byte_end":107370,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107371,"byte_end":107382,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107383,"byte_end":107386,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Most applications will use the [`tokio::main`] attribute macro.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107387,"byte_end":107454,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107455,"byte_end":107458,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107459,"byte_end":107472,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107473,"byte_end":107505,"line_start":23,"line_end":23,"column_start":1,"column_end":33}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107506,"byte_end":107532,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107533,"byte_end":107536,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107537,"byte_end":107555,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107556,"byte_end":107619,"line_start":27,"line_end":27,"column_start":1,"column_end":64}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107620,"byte_end":107690,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107691,"byte_end":107694,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107695,"byte_end":107709,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107710,"byte_end":107769,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107770,"byte_end":107773,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107774,"byte_end":107811,"line_start":33,"line_end":33,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107812,"byte_end":107852,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107853,"byte_end":107856,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107857,"byte_end":107937,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107938,"byte_end":107960,"line_start":37,"line_end":37,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107961,"byte_end":108024,"line_start":38,"line_end":38,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108025,"byte_end":108065,"line_start":39,"line_end":39,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108066,"byte_end":108116,"line_start":40,"line_end":40,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108117,"byte_end":108152,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108153,"byte_end":108188,"line_start":42,"line_end":42,"column_start":1,"column_end":36}},{"value":"/                         println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108189,"byte_end":108271,"line_start":43,"line_end":43,"column_start":1,"column_end":83}},{"value":"/                         return;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108272,"byte_end":108307,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108308,"byte_end":108333,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108334,"byte_end":108356,"line_start":46,"line_end":46,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108357,"byte_end":108360,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108361,"byte_end":108403,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108404,"byte_end":108476,"line_start":49,"line_end":49,"column_start":1,"column_end":73}},{"value":"/                     println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108477,"byte_end":108554,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"/                     return;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108555,"byte_end":108586,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108587,"byte_end":108608,"line_start":52,"line_end":52,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108609,"byte_end":108626,"line_start":53,"line_end":53,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108627,"byte_end":108642,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108643,"byte_end":108652,"line_start":55,"line_end":55,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108653,"byte_end":108658,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108659,"byte_end":108666,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108667,"byte_end":108670,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ From within the context of the runtime, additional tasks are spawned using","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108671,"byte_end":108749,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ the [`tokio::spawn`] function. Futures spawned using this function will be","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108750,"byte_end":108828,"line_start":60,"line_end":60,"column_start":1,"column_end":79}},{"value":"/ executed on the same thread pool used by the [`Runtime`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108829,"byte_end":108890,"line_start":61,"line_end":61,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108891,"byte_end":108894,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ A [`Runtime`] instance can also be used directly.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108895,"byte_end":108948,"line_start":63,"line_end":63,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108949,"byte_end":108952,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108953,"byte_end":108966,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108967,"byte_end":108999,"line_start":66,"line_end":66,"column_start":1,"column_end":33}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109000,"byte_end":109026,"line_start":67,"line_end":67,"column_start":1,"column_end":27}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109027,"byte_end":109059,"line_start":68,"line_end":68,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109060,"byte_end":109063,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109064,"byte_end":109121,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"/     // Create the runtime","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109122,"byte_end":109151,"line_start":71,"line_end":71,"column_start":1,"column_end":30}},{"value":"/     let mut rt = Runtime::new()?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109152,"byte_end":109189,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109190,"byte_end":109193,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     // Spawn the root task","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109194,"byte_end":109224,"line_start":74,"line_end":74,"column_start":1,"column_end":31}},{"value":"/     rt.block_on(async {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109225,"byte_end":109252,"line_start":75,"line_end":75,"column_start":1,"column_end":28}},{"value":"/         let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109253,"byte_end":109327,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109328,"byte_end":109331,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/         loop {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109332,"byte_end":109350,"line_start":78,"line_end":78,"column_start":1,"column_end":19}},{"value":"/             let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109351,"byte_end":109414,"line_start":79,"line_end":79,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109415,"byte_end":109418,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/             tokio::spawn(async move {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109419,"byte_end":109460,"line_start":81,"line_end":81,"column_start":1,"column_end":42}},{"value":"/                 let mut buf = [0; 1024];","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109461,"byte_end":109505,"line_start":82,"line_end":82,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109506,"byte_end":109509,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/                 // In a loop, read data from the socket and write the data back.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109510,"byte_end":109594,"line_start":84,"line_end":84,"column_start":1,"column_end":85}},{"value":"/                 loop {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109595,"byte_end":109621,"line_start":85,"line_end":85,"column_start":1,"column_end":27}},{"value":"/                     let n = match socket.read(&mut buf).await {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109622,"byte_end":109689,"line_start":86,"line_end":86,"column_start":1,"column_end":68}},{"value":"/                         // socket closed","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109690,"byte_end":109734,"line_start":87,"line_end":87,"column_start":1,"column_end":45}},{"value":"/                         Ok(n) if n == 0 => return,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109735,"byte_end":109789,"line_start":88,"line_end":88,"column_start":1,"column_end":55}},{"value":"/                         Ok(n) => n,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109790,"byte_end":109829,"line_start":89,"line_end":89,"column_start":1,"column_end":40}},{"value":"/                         Err(e) => {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109830,"byte_end":109869,"line_start":90,"line_end":90,"column_start":1,"column_end":40}},{"value":"/                             println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109870,"byte_end":109956,"line_start":91,"line_end":91,"column_start":1,"column_end":87}},{"value":"/                             return;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109957,"byte_end":109996,"line_start":92,"line_end":92,"column_start":1,"column_end":40}},{"value":"/                         }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109997,"byte_end":110026,"line_start":93,"line_end":93,"column_start":1,"column_end":30}},{"value":"/                     };","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110027,"byte_end":110053,"line_start":94,"line_end":94,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110054,"byte_end":110057,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/                     // Write the data back","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110058,"byte_end":110104,"line_start":96,"line_end":96,"column_start":1,"column_end":47}},{"value":"/                     if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110105,"byte_end":110181,"line_start":97,"line_end":97,"column_start":1,"column_end":77}},{"value":"/                         println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110182,"byte_end":110263,"line_start":98,"line_end":98,"column_start":1,"column_end":82}},{"value":"/                         return;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110264,"byte_end":110299,"line_start":99,"line_end":99,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110300,"byte_end":110325,"line_start":100,"line_end":100,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110326,"byte_end":110347,"line_start":101,"line_end":101,"column_start":1,"column_end":22}},{"value":"/             });","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110348,"byte_end":110367,"line_start":102,"line_end":102,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110368,"byte_end":110381,"line_start":103,"line_end":103,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110382,"byte_end":110392,"line_start":104,"line_end":104,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110393,"byte_end":110398,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110399,"byte_end":110406,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110407,"byte_end":110410,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ ## Runtime Configurations","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110411,"byte_end":110440,"line_start":108,"line_end":108,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110441,"byte_end":110444,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ Tokio provides multiple task scheduling strategies, suitable for different","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110445,"byte_end":110523,"line_start":110,"line_end":110,"column_start":1,"column_end":79}},{"value":"/ applications. The [runtime builder] or `#[tokio::main]` attribute may be","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110524,"byte_end":110600,"line_start":111,"line_end":111,"column_start":1,"column_end":77}},{"value":"/ used to select which scheduler to use.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110601,"byte_end":110643,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110644,"byte_end":110647,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ #### Basic Scheduler","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110648,"byte_end":110672,"line_start":114,"line_end":114,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110673,"byte_end":110676,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ The basic scheduler provides a _single-threaded_ future executor. All tasks","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110677,"byte_end":110756,"line_start":116,"line_end":116,"column_start":1,"column_end":80}},{"value":"/ will be created and executed on the current thread. The basic scheduler","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110757,"byte_end":110832,"line_start":117,"line_end":117,"column_start":1,"column_end":76}},{"value":"/ requires the `rt-core` feature flag, and can be selected using the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110833,"byte_end":110903,"line_start":118,"line_end":118,"column_start":1,"column_end":71}},{"value":"/ [`Builder::basic_scheduler`] method:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110904,"byte_end":110944,"line_start":119,"line_end":119,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110945,"byte_end":110952,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110953,"byte_end":110976,"line_start":121,"line_end":121,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110977,"byte_end":110980,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110981,"byte_end":111040,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/ let basic_rt = runtime::Builder::new()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111041,"byte_end":111083,"line_start":124,"line_end":124,"column_start":1,"column_end":43}},{"value":"/     .basic_scheduler()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111084,"byte_end":111110,"line_start":125,"line_end":125,"column_start":1,"column_end":27}},{"value":"/     .build()?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111111,"byte_end":111129,"line_start":126,"line_end":126,"column_start":1,"column_end":19}},{"value":"/ # Ok(()) }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111130,"byte_end":111144,"line_start":127,"line_end":127,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111145,"byte_end":111152,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111153,"byte_end":111156,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ If the `rt-core` feature is enabled and `rt-threaded` is not,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111157,"byte_end":111222,"line_start":130,"line_end":130,"column_start":1,"column_end":66}},{"value":"/ [`Runtime::new`] will return a basic scheduler runtime by default.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111223,"byte_end":111293,"line_start":131,"line_end":131,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111294,"byte_end":111297,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ #### Threaded Scheduler","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111298,"byte_end":111325,"line_start":133,"line_end":133,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111326,"byte_end":111329,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ The threaded scheduler executes futures on a _thread pool_, using a","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111330,"byte_end":111401,"line_start":135,"line_end":135,"column_start":1,"column_end":72}},{"value":"/ work-stealing strategy. By default, it will start a worker thread for each","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111402,"byte_end":111480,"line_start":136,"line_end":136,"column_start":1,"column_end":79}},{"value":"/ CPU core available on the system. This tends to be the ideal configurations","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111481,"byte_end":111560,"line_start":137,"line_end":137,"column_start":1,"column_end":80}},{"value":"/ for most applications. The threaded scheduler requires the `rt-threaded` feature","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111561,"byte_end":111645,"line_start":138,"line_end":138,"column_start":1,"column_end":85}},{"value":"/ flag, and can be selected using the  [`Builder::threaded_scheduler`] method:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111646,"byte_end":111726,"line_start":139,"line_end":139,"column_start":1,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111727,"byte_end":111734,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111735,"byte_end":111758,"line_start":141,"line_end":141,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111759,"byte_end":111762,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111763,"byte_end":111822,"line_start":143,"line_end":143,"column_start":1,"column_end":60}},{"value":"/ let threaded_rt = runtime::Builder::new()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111823,"byte_end":111868,"line_start":144,"line_end":144,"column_start":1,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111869,"byte_end":111898,"line_start":145,"line_end":145,"column_start":1,"column_end":30}},{"value":"/     .build()?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111899,"byte_end":111917,"line_start":146,"line_end":146,"column_start":1,"column_end":19}},{"value":"/ # Ok(()) }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111918,"byte_end":111932,"line_start":147,"line_end":147,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111933,"byte_end":111940,"line_start":148,"line_end":148,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111941,"byte_end":111944,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ If the `rt-threaded` feature flag is enabled, [`Runtime::new`] will return a","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111945,"byte_end":112025,"line_start":150,"line_end":150,"column_start":1,"column_end":81}},{"value":"/ threaded scheduler runtime by default.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112026,"byte_end":112068,"line_start":151,"line_end":151,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112069,"byte_end":112072,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Most applications should use the threaded scheduler, except in some niche","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112073,"byte_end":112150,"line_start":153,"line_end":153,"column_start":1,"column_end":78}},{"value":"/ use-cases, such as when running only a single thread is required.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112151,"byte_end":112220,"line_start":154,"line_end":154,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112221,"byte_end":112224,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ #### Resource drivers","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112225,"byte_end":112250,"line_start":156,"line_end":156,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112251,"byte_end":112254,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ When configuring a runtime by hand, no resource drivers are enabled by","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112255,"byte_end":112329,"line_start":158,"line_end":158,"column_start":1,"column_end":75}},{"value":"/ default. In this case, attempting to use networking types or time types will","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112330,"byte_end":112410,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ fail. In order to enable these types, the resource drivers must be enabled.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112411,"byte_end":112490,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ This is done with [`Builder::enable_io`] and [`Builder::enable_time`]. As a","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112491,"byte_end":112570,"line_start":161,"line_end":161,"column_start":1,"column_end":80}},{"value":"/ shorthand, [`Builder::enable_all`] enables both resource drivers.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112571,"byte_end":112640,"line_start":162,"line_end":162,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112641,"byte_end":112644,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ ## Lifetime of spawned threads","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112645,"byte_end":112679,"line_start":164,"line_end":164,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112680,"byte_end":112683,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ The runtime may spawn threads depending on its configuration and usage. The","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112684,"byte_end":112763,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"/ threaded scheduler spawns threads to schedule tasks and calls to","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112764,"byte_end":112832,"line_start":167,"line_end":167,"column_start":1,"column_end":69}},{"value":"/ `spawn_blocking` spawn threads to run blocking operations.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112833,"byte_end":112895,"line_start":168,"line_end":168,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112896,"byte_end":112899,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ While the `Runtime` is active, threads may shutdown after periods of being","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112900,"byte_end":112978,"line_start":170,"line_end":170,"column_start":1,"column_end":79}},{"value":"/ idle. Once `Runtime` is dropped, all runtime threads are forcibly shutdown.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112979,"byte_end":113058,"line_start":171,"line_end":171,"column_start":1,"column_end":80}},{"value":"/ Any tasks that have not yet completed will be dropped.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":113059,"byte_end":113117,"line_start":172,"line_end":172,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":113118,"byte_end":113121,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":113122,"byte_end":113146,"line_start":174,"line_end":174,"column_start":1,"column_end":25}},{"value":"/ [`Runtime`]: Runtime","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":113147,"byte_end":113171,"line_start":175,"line_end":175,"column_start":1,"column_end":25}},{"value":"/ [`tokio::spawn`]: crate::spawn","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":113172,"byte_end":113206,"line_start":176,"line_end":176,"column_start":1,"column_end":35}},{"value":"/ [`tokio::main`]: ../attr.main.html","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":113207,"byte_end":113245,"line_start":177,"line_end":177,"column_start":1,"column_end":39}},{"value":"/ [runtime builder]: crate::runtime::Builder","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":113246,"byte_end":113292,"line_start":178,"line_end":178,"column_start":1,"column_end":47}},{"value":"/ [`Runtime::new`]: crate::runtime::Runtime::new","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":113293,"byte_end":113343,"line_start":179,"line_end":179,"column_start":1,"column_end":51}},{"value":"/ [`Builder::basic_scheduler`]: crate::runtime::Builder::basic_scheduler","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":113344,"byte_end":113418,"line_start":180,"line_end":180,"column_start":1,"column_end":75}},{"value":"/ [`Builder::threaded_scheduler`]: crate::runtime::Builder::threaded_scheduler","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":113419,"byte_end":113499,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"/ [`Builder::enable_io`]: crate::runtime::Builder::enable_io","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":113500,"byte_end":113562,"line_start":182,"line_end":182,"column_start":1,"column_end":63}},{"value":"/ [`Builder::enable_time`]: crate::runtime::Builder::enable_time","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":113563,"byte_end":113629,"line_start":183,"line_end":183,"column_start":1,"column_end":67}},{"value":"/ [`Builder::enable_all`]: crate::runtime::Builder::enable_all","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":113630,"byte_end":113694,"line_start":184,"line_end":184,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":6244},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12993754,"byte_end":12993763,"line_start":8,"line_end":8,"column_start":16,"column_end":25},"name":"JoinError","qualname":"::runtime::task::error::JoinError","value":"JoinError {  }","parent":null,"children":[{"krate":0,"index":6245}],"decl_id":null,"docs":" Task failed to execute to completion.\n","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":21740,"byte_end":21767,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":5766},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12993939,"byte_end":12993948,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<JoinError>::cancelled","value":"pub fn cancelled() -> JoinError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12993914,"byte_end":12993927,"line_start":20,"line_end":20,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":5768},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12994166,"byte_end":12994171,"line_start":33,"line_end":33,"column_start":12,"column_end":17},"name":"panic","qualname":"<JoinError>::panic","value":"pub fn panic(Box<dyn Any + Send + 'static>) -> JoinError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12994141,"byte_end":12994154,"line_start":32,"line_end":32,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":5770},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12994501,"byte_end":12994513,"line_start":44,"line_end":44,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<JoinError>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task being cancelled\n","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task being cancelled","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12994421,"byte_end":12994489,"line_start":43,"line_end":43,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":5771},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12995019,"byte_end":12995027,"line_start":67,"line_end":67,"column_start":12,"column_end":20},"name":"is_panic","qualname":"<JoinError>::is_panic","value":"pub fn is_panic(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task panicking","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task panicking","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12994640,"byte_end":12994702,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12994707,"byte_end":12994710,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12994715,"byte_end":12994729,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12994734,"byte_end":12994737,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12994742,"byte_end":12994749,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use std::panic;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12994754,"byte_end":12994773,"line_start":56,"line_end":56,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12994778,"byte_end":12994781,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12994786,"byte_end":12994804,"line_start":58,"line_end":58,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12994809,"byte_end":12994830,"line_start":59,"line_end":59,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12994835,"byte_end":12994873,"line_start":60,"line_end":60,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12994878,"byte_end":12994905,"line_start":61,"line_end":61,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12994910,"byte_end":12994940,"line_start":62,"line_end":62,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12994945,"byte_end":12994948,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/     assert!(err.is_panic());","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12994953,"byte_end":12994985,"line_start":64,"line_end":64,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12994990,"byte_end":12994995,"line_start":65,"line_end":65,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12995000,"byte_end":12995007,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5772},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12995934,"byte_end":12995944,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"into_panic","qualname":"<JoinError>::into_panic","value":"pub fn into_panic(Self) -> Box<dyn Any + Send + 'static>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task panicked.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task panicked.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12995153,"byte_end":12995232,"line_start":74,"line_end":74,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12995237,"byte_end":12995240,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12995245,"byte_end":12995257,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12995262,"byte_end":12995265,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ `into_panic()` panics if the `Error` does not represent the underlying","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12995270,"byte_end":12995344,"line_start":78,"line_end":78,"column_start":5,"column_end":79}},{"value":"/ task terminating with a panic. Use `is_panic` to check the error reason","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12995349,"byte_end":12995424,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ or `try_into_panic` for a variant that does not panic.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12995429,"byte_end":12995487,"line_start":80,"line_end":80,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12995492,"byte_end":12995495,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12995500,"byte_end":12995514,"line_start":82,"line_end":82,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12995519,"byte_end":12995522,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12995527,"byte_end":12995546,"line_start":84,"line_end":84,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12995551,"byte_end":12995570,"line_start":85,"line_end":85,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12995575,"byte_end":12995578,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12995583,"byte_end":12995601,"line_start":87,"line_end":87,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12995606,"byte_end":12995627,"line_start":88,"line_end":88,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12995632,"byte_end":12995670,"line_start":89,"line_end":89,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12995675,"byte_end":12995702,"line_start":90,"line_end":90,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12995707,"byte_end":12995737,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12995742,"byte_end":12995745,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/     if err.is_panic() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12995750,"byte_end":12995777,"line_start":93,"line_end":93,"column_start":5,"column_end":32}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12995782,"byte_end":12995830,"line_start":94,"line_end":94,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(err.into_panic());","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12995835,"byte_end":12995886,"line_start":95,"line_end":95,"column_start":5,"column_end":56}},{"value":"/     }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12995891,"byte_end":12995900,"line_start":96,"line_end":96,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12995905,"byte_end":12995910,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12995915,"byte_end":12995922,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5773},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12996709,"byte_end":12996723,"line_start":125,"line_end":125,"column_start":12,"column_end":26},"name":"try_into_panic","qualname":"<JoinError>::try_into_panic","value":"pub fn try_into_panic(Self)\n-> Result<Box<dyn Any + Send + 'static>, JoinError>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task\n panicked if the task terminated due to a panic. Otherwise, `self` is\n returned.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12996085,"byte_end":12996154,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ panicked if the task terminated due to a panic. Otherwise, `self` is","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12996159,"byte_end":12996231,"line_start":105,"line_end":105,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12996236,"byte_end":12996249,"line_start":106,"line_end":106,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12996254,"byte_end":12996257,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12996262,"byte_end":12996276,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12996281,"byte_end":12996284,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12996289,"byte_end":12996308,"line_start":110,"line_end":110,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12996313,"byte_end":12996332,"line_start":111,"line_end":111,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12996337,"byte_end":12996340,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12996345,"byte_end":12996363,"line_start":113,"line_end":113,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12996368,"byte_end":12996389,"line_start":114,"line_end":114,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12996394,"byte_end":12996432,"line_start":115,"line_end":115,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12996437,"byte_end":12996464,"line_start":116,"line_end":116,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12996469,"byte_end":12996499,"line_start":117,"line_end":117,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12996504,"byte_end":12996507,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/     if let Ok(reason) = err.try_into_panic() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12996512,"byte_end":12996562,"line_start":119,"line_end":119,"column_start":5,"column_end":55}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12996567,"byte_end":12996615,"line_start":120,"line_end":120,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(reason);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12996620,"byte_end":12996661,"line_start":121,"line_end":121,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12996666,"byte_end":12996675,"line_start":122,"line_end":122,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12996680,"byte_end":12996685,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12996690,"byte_end":12996697,"line_start":124,"line_end":124,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6246},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":13013089,"byte_end":13013099,"line_start":78,"line_end":78,"column_start":16,"column_end":26},"name":"JoinHandle","qualname":"::runtime::task::join::JoinHandle","value":"JoinHandle {  }","parent":null,"children":[{"krate":0,"index":6248},{"krate":0,"index":6249}],"decl_id":null,"docs":" An owned permission to join on a task (await its termination).","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":21740,"byte_end":21767,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":892},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129918,"byte_end":129925,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"Builder","qualname":"::runtime::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901}],"decl_id":null,"docs":" Builds Tokio Runtime with custom configuration values.","sig":null,"attributes":[{"value":"/ Builds Tokio Runtime with custom configuration values.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129090,"byte_end":129148,"line_start":9,"line_end":9,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129149,"byte_end":129152,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Methods can be chained in order to set the configuration values. The","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129153,"byte_end":129225,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/ Runtime is constructed by calling [`build`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129226,"byte_end":129274,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129275,"byte_end":129278,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ New instances of `Builder` are obtained via [`Builder::new`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129279,"byte_end":129344,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129345,"byte_end":129348,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ See function level documentation for details on the various configuration","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129349,"byte_end":129426,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ settings.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129427,"byte_end":129440,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129441,"byte_end":129444,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`build`]: method@Self::build","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129445,"byte_end":129478,"line_start":19,"line_end":19,"column_start":1,"column_end":34}},{"value":"/ [`Builder::new`]: method@Self::new","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129479,"byte_end":129517,"line_start":20,"line_end":20,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129518,"byte_end":129521,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129522,"byte_end":129536,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129537,"byte_end":129540,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129541,"byte_end":129548,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129549,"byte_end":129581,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129582,"byte_end":129585,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129586,"byte_end":129601,"line_start":27,"line_end":27,"column_start":1,"column_end":16}},{"value":"/     // build runtime","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129602,"byte_end":129626,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/     let runtime = Builder::new()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129627,"byte_end":129663,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/         .threaded_scheduler()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129664,"byte_end":129697,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/         .core_threads(4)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129698,"byte_end":129726,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/         .thread_name(\"my-custom-name\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129727,"byte_end":129769,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/         .thread_stack_size(3 * 1024 * 1024)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129770,"byte_end":129817,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/         .build()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129818,"byte_end":129838,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/         .unwrap();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129839,"byte_end":129861,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129862,"byte_end":129865,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // use runtime ...","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129866,"byte_end":129892,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129893,"byte_end":129898,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129899,"byte_end":129906,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":131080,"byte_end":131083,"line_start":85,"line_end":85,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new runtime builder initialized with default configuration\n values.","sig":null,"attributes":[{"value":"/ Returns a new runtime builder initialized with default configuration","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":130906,"byte_end":130978,"line_start":81,"line_end":81,"column_start":5,"column_end":77}},{"value":"/ values.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":130983,"byte_end":130994,"line_start":82,"line_end":82,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":130999,"byte_end":131002,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":131007,"byte_end":131068,"line_start":84,"line_end":84,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132287,"byte_end":132297,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"enable_all","qualname":"<Builder>::enable_all","value":"pub fn enable_all(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables both I/O and time drivers.","sig":null,"attributes":[{"value":"/ Enables both I/O and time drivers.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":131773,"byte_end":131811,"line_start":113,"line_end":113,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":131816,"byte_end":131819,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Doing this is a shorthand for calling `enable_io` and `enable_time`","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":131824,"byte_end":131895,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ individually. If additional components are added to Tokio in the future,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":131900,"byte_end":131976,"line_start":116,"line_end":116,"column_start":5,"column_end":81}},{"value":"/ `enable_all` will include these future components.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":131981,"byte_end":132035,"line_start":117,"line_end":117,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132040,"byte_end":132043,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132048,"byte_end":132062,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132067,"byte_end":132070,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132075,"byte_end":132082,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132087,"byte_end":132110,"line_start":122,"line_end":122,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132115,"byte_end":132118,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132123,"byte_end":132159,"line_start":124,"line_end":124,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132164,"byte_end":132193,"line_start":125,"line_end":125,"column_start":5,"column_end":34}},{"value":"/     .enable_all()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132198,"byte_end":132219,"line_start":126,"line_end":126,"column_start":5,"column_end":26}},{"value":"/     .build()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132224,"byte_end":132240,"line_start":127,"line_end":127,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132245,"byte_end":132263,"line_start":128,"line_end":128,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132268,"byte_end":132275,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":905},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132852,"byte_end":132863,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"num_threads","qualname":"<Builder>::num_threads","value":"pub fn num_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of worker threads for the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"deprecated(note = \"In future will be replaced by core_threads method\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132474,"byte_end":132547,"line_start":139,"line_end":139,"column_start":5,"column_end":78}},{"value":"/ Sets the maximum number of worker threads for the `Runtime`'s thread pool.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132552,"byte_end":132630,"line_start":140,"line_end":140,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132635,"byte_end":132638,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This must be a number between 1 and 32,768 though it is advised to keep","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132643,"byte_end":132718,"line_start":142,"line_end":142,"column_start":5,"column_end":80}},{"value":"/ this value on the smaller side.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132723,"byte_end":132758,"line_start":143,"line_end":143,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132763,"byte_end":132766,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132771,"byte_end":132840,"line_start":145,"line_end":145,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133572,"byte_end":133584,"line_start":171,"line_end":171,"column_start":12,"column_end":24},"name":"core_threads","qualname":"<Builder>::core_threads","value":"pub fn core_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the core number of worker threads for the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets the core number of worker threads for the `Runtime`'s thread pool.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132965,"byte_end":133040,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133045,"byte_end":133048,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This should be a number between 1 and 32,768 though it is advised to keep","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133053,"byte_end":133130,"line_start":153,"line_end":153,"column_start":5,"column_end":82}},{"value":"/ this value on the smaller side.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133135,"byte_end":133170,"line_start":154,"line_end":154,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133175,"byte_end":133178,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133183,"byte_end":133252,"line_start":156,"line_end":156,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133257,"byte_end":133260,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ These threads will be always active and running.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133265,"byte_end":133317,"line_start":158,"line_end":158,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133322,"byte_end":133325,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133330,"byte_end":133344,"line_start":160,"line_end":160,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133349,"byte_end":133352,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133357,"byte_end":133364,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133369,"byte_end":133392,"line_start":163,"line_end":163,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133397,"byte_end":133400,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133405,"byte_end":133441,"line_start":165,"line_end":165,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133446,"byte_end":133475,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/     .core_threads(4)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133480,"byte_end":133504,"line_start":167,"line_end":167,"column_start":5,"column_end":29}},{"value":"/     .build()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133509,"byte_end":133525,"line_start":168,"line_end":168,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133530,"byte_end":133548,"line_start":169,"line_end":169,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133553,"byte_end":133560,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134463,"byte_end":134474,"line_start":191,"line_end":191,"column_start":12,"column_end":23},"name":"max_threads","qualname":"<Builder>::max_threads","value":"pub fn max_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies limit for threads, spawned by the Runtime.","sig":null,"attributes":[{"value":"/ Specifies limit for threads, spawned by the Runtime.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133745,"byte_end":133801,"line_start":177,"line_end":177,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133806,"byte_end":133809,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ This is number of threads to be used by Runtime, including `core_threads`","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133814,"byte_end":133891,"line_start":179,"line_end":179,"column_start":5,"column_end":82}},{"value":"/ Having `max_threads` less than `core_threads` results in invalid configuration","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133896,"byte_end":133978,"line_start":180,"line_end":180,"column_start":5,"column_end":87}},{"value":"/ when building multi-threaded `Runtime`, which would cause a panic.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133983,"byte_end":134053,"line_start":181,"line_end":181,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134058,"byte_end":134061,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Similarly to the `core_threads`, this number should be between 1 and 32,768.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134066,"byte_end":134146,"line_start":183,"line_end":183,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134151,"byte_end":134154,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ The default value is 512.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134159,"byte_end":134188,"line_start":185,"line_end":185,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134193,"byte_end":134196,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ When multi-threaded runtime is not used, will act as limit on additional threads.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134201,"byte_end":134286,"line_start":187,"line_end":187,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134291,"byte_end":134294,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ Otherwise as `core_threads` are always active, it limits additional threads (e.g. for","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134299,"byte_end":134388,"line_start":189,"line_end":189,"column_start":5,"column_end":94}},{"value":"/ blocking annotations) as `max_threads - core_threads`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134393,"byte_end":134451,"line_start":190,"line_end":190,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134998,"byte_end":135009,"line_start":212,"line_end":212,"column_start":12,"column_end":23},"name":"thread_name","qualname":"<Builder>::thread_name","value":"pub fn thread_name<impl Into<String>: Into<String>>(&mut Self,\n                                                    impl Into<String>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets name of threads spawned by the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets name of threads spawned by the `Runtime`'s thread pool.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134628,"byte_end":134692,"line_start":197,"line_end":197,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134697,"byte_end":134700,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ The default name is \"tokio-runtime-worker\".","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134705,"byte_end":134752,"line_start":199,"line_end":199,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134757,"byte_end":134760,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134765,"byte_end":134779,"line_start":201,"line_end":201,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134784,"byte_end":134787,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134792,"byte_end":134799,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134804,"byte_end":134829,"line_start":204,"line_end":204,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134834,"byte_end":134837,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134842,"byte_end":134863,"line_start":206,"line_end":206,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134868,"byte_end":134904,"line_start":207,"line_end":207,"column_start":5,"column_end":41}},{"value":"/     .thread_name(\"my-pool\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134909,"byte_end":134940,"line_start":208,"line_end":208,"column_start":5,"column_end":36}},{"value":"/     .build();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134945,"byte_end":134962,"line_start":209,"line_end":209,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134967,"byte_end":134974,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134979,"byte_end":134986,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135733,"byte_end":135750,"line_start":237,"line_end":237,"column_start":12,"column_end":29},"name":"thread_stack_size","qualname":"<Builder>::thread_stack_size","value":"pub fn thread_stack_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the stack size (in bytes) for worker threads.","sig":null,"attributes":[{"value":"/ Sets the stack size (in bytes) for worker threads.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135123,"byte_end":135177,"line_start":217,"line_end":217,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135182,"byte_end":135185,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The actual stack size may be greater than this value if the platform","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135190,"byte_end":135262,"line_start":219,"line_end":219,"column_start":5,"column_end":77}},{"value":"/ specifies minimal stack size.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135267,"byte_end":135300,"line_start":220,"line_end":220,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135305,"byte_end":135308,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ The default stack size for spawned threads is 2 MiB, though this","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135313,"byte_end":135381,"line_start":222,"line_end":222,"column_start":5,"column_end":73}},{"value":"/ particular stack size is subject to change in the future.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135386,"byte_end":135447,"line_start":223,"line_end":223,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135452,"byte_end":135455,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135460,"byte_end":135474,"line_start":225,"line_end":225,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135479,"byte_end":135482,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135487,"byte_end":135494,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135499,"byte_end":135524,"line_start":228,"line_end":228,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135529,"byte_end":135532,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135537,"byte_end":135558,"line_start":230,"line_end":230,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135563,"byte_end":135599,"line_start":231,"line_end":231,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135604,"byte_end":135633,"line_start":232,"line_end":232,"column_start":5,"column_end":34}},{"value":"/     .thread_stack_size(32 * 1024)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135638,"byte_end":135675,"line_start":233,"line_end":233,"column_start":5,"column_end":42}},{"value":"/     .build();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135680,"byte_end":135697,"line_start":234,"line_end":234,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135702,"byte_end":135709,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135714,"byte_end":135721,"line_start":236,"line_end":236,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136391,"byte_end":136406,"line_start":262,"line_end":262,"column_start":12,"column_end":27},"name":"on_thread_start","qualname":"<Builder>::on_thread_start","value":"pub fn on_thread_start<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` after each thread is started but before it starts\n doing work.","sig":null,"attributes":[{"value":"/ Executes function `f` after each thread is started but before it starts","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135857,"byte_end":135932,"line_start":242,"line_end":242,"column_start":5,"column_end":80}},{"value":"/ doing work.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135937,"byte_end":135952,"line_start":243,"line_end":243,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135957,"byte_end":135960,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135965,"byte_end":136027,"line_start":245,"line_end":245,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136032,"byte_end":136035,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136040,"byte_end":136054,"line_start":247,"line_end":247,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136059,"byte_end":136062,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136067,"byte_end":136074,"line_start":249,"line_end":249,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136079,"byte_end":136104,"line_start":250,"line_end":250,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136109,"byte_end":136112,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136117,"byte_end":136138,"line_start":252,"line_end":252,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136143,"byte_end":136184,"line_start":253,"line_end":253,"column_start":5,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136189,"byte_end":136218,"line_start":254,"line_end":254,"column_start":5,"column_end":34}},{"value":"/     .on_thread_start(|| {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136223,"byte_end":136252,"line_start":255,"line_end":255,"column_start":5,"column_end":34}},{"value":"/         println!(\"thread started\");","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136257,"byte_end":136296,"line_start":256,"line_end":256,"column_start":5,"column_end":44}},{"value":"/     })","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136301,"byte_end":136311,"line_start":257,"line_end":257,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136316,"byte_end":136333,"line_start":258,"line_end":258,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136338,"byte_end":136345,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136350,"byte_end":136357,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136362,"byte_end":136379,"line_start":261,"line_end":261,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137057,"byte_end":137071,"line_start":289,"line_end":289,"column_start":12,"column_end":26},"name":"on_thread_stop","qualname":"<Builder>::on_thread_stop","value":"pub fn on_thread_stop<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` before each thread stops.","sig":null,"attributes":[{"value":"/ Executes function `f` before each thread stops.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136567,"byte_end":136618,"line_start":270,"line_end":270,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136623,"byte_end":136626,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136631,"byte_end":136693,"line_start":272,"line_end":272,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136698,"byte_end":136701,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136706,"byte_end":136720,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136725,"byte_end":136728,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136733,"byte_end":136740,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136745,"byte_end":136770,"line_start":277,"line_end":277,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136775,"byte_end":136778,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136783,"byte_end":136804,"line_start":279,"line_end":279,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136809,"byte_end":136850,"line_start":280,"line_end":280,"column_start":5,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136855,"byte_end":136884,"line_start":281,"line_end":281,"column_start":5,"column_end":34}},{"value":"/     .on_thread_stop(|| {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136889,"byte_end":136917,"line_start":282,"line_end":282,"column_start":5,"column_end":33}},{"value":"/         println!(\"thread stopping\");","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136922,"byte_end":136962,"line_start":283,"line_end":283,"column_start":5,"column_end":45}},{"value":"/     })","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136967,"byte_end":136977,"line_start":284,"line_end":284,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136982,"byte_end":136999,"line_start":285,"line_end":285,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137004,"byte_end":137011,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137016,"byte_end":137023,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137028,"byte_end":137045,"line_start":288,"line_end":288,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137617,"byte_end":137622,"line_start":312,"line_end":312,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"pub fn build(&mut Self) -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Creates the configured `Runtime`.","sig":null,"attributes":[{"value":"/ Creates the configured `Runtime`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137232,"byte_end":137269,"line_start":297,"line_end":297,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137274,"byte_end":137277,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ The returned `ThreadPool` instance is ready to spawn tasks.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137282,"byte_end":137345,"line_start":299,"line_end":299,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137350,"byte_end":137353,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137358,"byte_end":137372,"line_start":301,"line_end":301,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137377,"byte_end":137380,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137385,"byte_end":137392,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137397,"byte_end":137429,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137434,"byte_end":137437,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Builder::new().build().unwrap();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137442,"byte_end":137491,"line_start":306,"line_end":306,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137496,"byte_end":137499,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ rt.block_on(async {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137504,"byte_end":137527,"line_start":308,"line_end":308,"column_start":5,"column_end":28}},{"value":"/     println!(\"Hello from the Tokio runtime\");","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137532,"byte_end":137581,"line_start":309,"line_end":309,"column_start":5,"column_end":54}},{"value":"/ });","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137586,"byte_end":137593,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137598,"byte_end":137605,"line_start":311,"line_end":311,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6288},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":139247,"byte_end":139256,"line_start":367,"line_end":367,"column_start":16,"column_end":25},"name":"enable_io","qualname":"<Builder>::enable_io","value":"pub fn enable_io(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the I/O driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6290},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":139767,"byte_end":139778,"line_start":390,"line_end":390,"column_start":16,"column_end":27},"name":"enable_time","qualname":"<Builder>::enable_time","value":"pub fn enable_time(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the time driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6292},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":140391,"byte_end":140406,"line_start":409,"line_end":409,"column_start":16,"column_end":31},"name":"basic_scheduler","qualname":"<Builder>::basic_scheduler","value":"pub fn basic_scheduler(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets runtime to use a simpler scheduler that runs all tasks on the current-thread.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6346},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":151388,"byte_end":151394,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"Handle","qualname":"::runtime::handle::Handle","value":"Handle {  }","parent":null,"children":[{"krate":0,"index":6347},{"krate":0,"index":6348},{"krate":0,"index":6349},{"krate":0,"index":6350},{"krate":0,"index":6351}],"decl_id":null,"docs":" Handle to the runtime.","sig":null,"attributes":[{"value":"/ Handle to the runtime.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":151119,"byte_end":151145,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":151146,"byte_end":151149,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The handle is internally reference-counted and can be freely cloned. A handle can be","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":151150,"byte_end":151238,"line_start":17,"line_end":17,"column_start":1,"column_end":89}},{"value":"/ obtained using the [`Runtime::handle`] method.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":151239,"byte_end":151289,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":151290,"byte_end":151293,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`Runtime::handle`]: crate::runtime::Runtime::handle()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":151294,"byte_end":151352,"line_start":20,"line_end":20,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":983},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152931,"byte_end":152936,"line_start":72,"line_end":72,"column_start":12,"column_end":17},"name":"enter","qualname":"<Handle>::enter","value":"pub fn enter<F, R>(&Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Delay`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`].","sig":null,"attributes":[{"value":"/ Enter the runtime context. This allows you to construct types that must","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":151758,"byte_end":151833,"line_start":39,"line_end":39,"column_start":5,"column_end":80}},{"value":"/ have an executor available on creation such as [`Delay`] or [`TcpStream`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":151838,"byte_end":151916,"line_start":40,"line_end":40,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":151921,"byte_end":151989,"line_start":41,"line_end":41,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":151994,"byte_end":151997,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This function is also available as [`Runtime::enter`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152002,"byte_end":152060,"line_start":43,"line_end":43,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152065,"byte_end":152068,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ [`Delay`]: struct@crate::time::Delay","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152073,"byte_end":152113,"line_start":45,"line_end":45,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152118,"byte_end":152165,"line_start":46,"line_end":46,"column_start":5,"column_end":52}},{"value":"/ [`Runtime::enter`]: fn@crate::runtime::Runtime::enter","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152170,"byte_end":152227,"line_start":47,"line_end":47,"column_start":5,"column_end":62}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152232,"byte_end":152269,"line_start":48,"line_end":48,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152274,"byte_end":152277,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152282,"byte_end":152295,"line_start":50,"line_end":50,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152300,"byte_end":152303,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152308,"byte_end":152315,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152320,"byte_end":152352,"line_start":53,"line_end":53,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152357,"byte_end":152360,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ fn function_that_spawns(msg: String) {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152365,"byte_end":152407,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/     // Had we not used `handle.enter` below, this would panic.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152412,"byte_end":152478,"line_start":56,"line_end":56,"column_start":5,"column_end":71}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152483,"byte_end":152516,"line_start":57,"line_end":57,"column_start":5,"column_end":38}},{"value":"/         println!(\"{}\", msg);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152521,"byte_end":152553,"line_start":58,"line_end":58,"column_start":5,"column_end":37}},{"value":"/     });","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152558,"byte_end":152569,"line_start":59,"line_end":59,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152574,"byte_end":152579,"line_start":60,"line_end":60,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152584,"byte_end":152587,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152592,"byte_end":152607,"line_start":62,"line_end":62,"column_start":5,"column_end":20}},{"value":"/     let rt = Runtime::new().unwrap();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152612,"byte_end":152653,"line_start":63,"line_end":63,"column_start":5,"column_end":46}},{"value":"/     let handle = rt.handle().clone();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152658,"byte_end":152699,"line_start":64,"line_end":64,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152704,"byte_end":152707,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/     let s = \"Hello World!\".to_string();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152712,"byte_end":152755,"line_start":66,"line_end":66,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152760,"byte_end":152763,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/     // By entering the context, we tie `tokio::spawn` to this executor.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152768,"byte_end":152843,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/     handle.enter(|| function_that_spawns(s));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152848,"byte_end":152897,"line_start":69,"line_end":69,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152902,"byte_end":152907,"line_start":70,"line_end":70,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152912,"byte_end":152919,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":986},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154406,"byte_end":154413,"line_start":117,"line_end":117,"column_start":12,"column_end":19},"name":"current","qualname":"<Handle>::current","value":"pub fn current() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Handle` view over the currently running `Runtime`","sig":null,"attributes":[{"value":"/ Returns a `Handle` view over the currently running `Runtime`","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153054,"byte_end":153118,"line_start":79,"line_end":79,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153123,"byte_end":153126,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153131,"byte_end":153142,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153147,"byte_end":153150,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This will panic if called outside the context of a Tokio runtime. That means that you must","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153155,"byte_end":153249,"line_start":83,"line_end":83,"column_start":5,"column_end":99}},{"value":"/ call this on one of the threads **being run by the runtime**. Calling this from within a","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153254,"byte_end":153346,"line_start":84,"line_end":84,"column_start":5,"column_end":97}},{"value":"/ thread created by `std::thread::spawn` (for example) will cause a panic.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153351,"byte_end":153427,"line_start":85,"line_end":85,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153432,"byte_end":153435,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153440,"byte_end":153454,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153459,"byte_end":153462,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This can be used to obtain the handle of the surrounding runtime from an async","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153467,"byte_end":153549,"line_start":89,"line_end":89,"column_start":5,"column_end":87}},{"value":"/ block or function running on that runtime.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153554,"byte_end":153600,"line_start":90,"line_end":90,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153605,"byte_end":153608,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153613,"byte_end":153620,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ # use std::thread;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153625,"byte_end":153647,"line_start":93,"line_end":93,"column_start":5,"column_end":27}},{"value":"/ # use tokio::runtime::Runtime;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153652,"byte_end":153686,"line_start":94,"line_end":94,"column_start":5,"column_end":39}},{"value":"/ # fn dox() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153691,"byte_end":153707,"line_start":95,"line_end":95,"column_start":5,"column_end":21}},{"value":"/ # let rt = Runtime::new().unwrap();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153712,"byte_end":153751,"line_start":96,"line_end":96,"column_start":5,"column_end":44}},{"value":"/ # rt.spawn(async {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153756,"byte_end":153778,"line_start":97,"line_end":97,"column_start":5,"column_end":27}},{"value":"/ use tokio::runtime::Handle;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153783,"byte_end":153814,"line_start":98,"line_end":98,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153819,"byte_end":153822,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ // Inside an async block or function.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153827,"byte_end":153868,"line_start":100,"line_end":100,"column_start":5,"column_end":46}},{"value":"/ let handle = Handle::current();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153873,"byte_end":153908,"line_start":101,"line_end":101,"column_start":5,"column_end":40}},{"value":"/ handle.spawn(async {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153913,"byte_end":153937,"line_start":102,"line_end":102,"column_start":5,"column_end":29}},{"value":"/     println!(\"now running in the existing Runtime\");","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153942,"byte_end":153998,"line_start":103,"line_end":103,"column_start":5,"column_end":61}},{"value":"/ });","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154003,"byte_end":154010,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154015,"byte_end":154018,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # let handle =","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154023,"byte_end":154041,"line_start":106,"line_end":106,"column_start":5,"column_end":23}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154046,"byte_end":154073,"line_start":107,"line_end":107,"column_start":5,"column_end":32}},{"value":"/     // Notice that the handle is created outside of this thread and then moved in","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154078,"byte_end":154163,"line_start":108,"line_end":108,"column_start":5,"column_end":90}},{"value":"/     handle.block_on(async { /* ... */ })","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154168,"byte_end":154212,"line_start":109,"line_end":109,"column_start":5,"column_end":49}},{"value":"/     // This next line would cause a panic","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154217,"byte_end":154262,"line_start":110,"line_end":110,"column_start":5,"column_end":50}},{"value":"/     // let handle2 = Handle::current();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154267,"byte_end":154310,"line_start":111,"line_end":111,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154315,"byte_end":154322,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ # handle.join().unwrap();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154327,"byte_end":154356,"line_start":113,"line_end":113,"column_start":5,"column_end":34}},{"value":"/ # });","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154361,"byte_end":154370,"line_start":114,"line_end":114,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154375,"byte_end":154382,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154387,"byte_end":154394,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154715,"byte_end":154726,"line_start":126,"line_end":126,"column_start":12,"column_end":23},"name":"try_current","qualname":"<Handle>::try_current","value":"pub fn try_current() -> Result<Self, TryCurrentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a Handle view over the currently running Runtime","sig":null,"attributes":[{"value":"/ Returns a Handle view over the currently running Runtime","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154522,"byte_end":154582,"line_start":121,"line_end":121,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154587,"byte_end":154590,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Returns an error if no Runtime has been started","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154595,"byte_end":154646,"line_start":123,"line_end":123,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154651,"byte_end":154654,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Contrary to `current`, this never panics","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154659,"byte_end":154703,"line_start":125,"line_end":125,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":6357},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":156251,"byte_end":156256,"line_start":170,"line_end":170,"column_start":16,"column_end":21},"name":"spawn","qualname":"<Handle>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a future onto the Tokio runtime.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6359},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":160375,"byte_end":160383,"line_start":274,"line_end":274,"column_start":16,"column_end":24},"name":"block_on","qualname":"<Handle>::block_on","value":"pub fn block_on<F: Future>(&Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime from a synchronous\n context.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":988},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":164175,"byte_end":164190,"line_start":357,"line_end":357,"column_start":12,"column_end":27},"name":"TryCurrentError","qualname":"::runtime::handle::TryCurrentError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `try_current` when no Runtime has been started\n","sig":null,"attributes":[{"value":"/ Error returned by `try_current` when no Runtime has been started","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":164095,"byte_end":164163,"line_start":356,"line_end":356,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":6397},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115599,"byte_end":115606,"line_start":275,"line_end":275,"column_start":12,"column_end":19},"name":"Runtime","qualname":"::runtime::Runtime","value":"Runtime {  }","parent":null,"children":[{"krate":0,"index":6398},{"krate":0,"index":6399},{"krate":0,"index":6400}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"/ The Tokio runtime.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114582,"byte_end":114604,"line_start":246,"line_end":246,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114605,"byte_end":114608,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ The runtime provides an I/O driver, task scheduler, [timer], and blocking","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114609,"byte_end":114686,"line_start":248,"line_end":248,"column_start":1,"column_end":78}},{"value":"/ pool, necessary for running asynchronous tasks.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114687,"byte_end":114738,"line_start":249,"line_end":249,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114739,"byte_end":114742,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ Instances of `Runtime` can be created using [`new`] or [`Builder`]. However,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114743,"byte_end":114823,"line_start":251,"line_end":251,"column_start":1,"column_end":81}},{"value":"/ most users will use the `#[tokio::main]` annotation on their entry point instead.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114824,"byte_end":114909,"line_start":252,"line_end":252,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114910,"byte_end":114913,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114914,"byte_end":114973,"line_start":254,"line_end":254,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114974,"byte_end":114977,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ # Shutdown","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114978,"byte_end":114992,"line_start":256,"line_end":256,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114993,"byte_end":114996,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ Shutting down the runtime is done by dropping the value. The current thread","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114997,"byte_end":115076,"line_start":258,"line_end":258,"column_start":1,"column_end":80}},{"value":"/ will block until the shut down operation has completed.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115077,"byte_end":115136,"line_start":259,"line_end":259,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115137,"byte_end":115140,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ * Drain any scheduled work queues.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115141,"byte_end":115179,"line_start":261,"line_end":261,"column_start":1,"column_end":39}},{"value":"/ * Drop any futures that have not yet completed.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115180,"byte_end":115231,"line_start":262,"line_end":262,"column_start":1,"column_end":52}},{"value":"/ * Drop the reactor.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115232,"byte_end":115255,"line_start":263,"line_end":263,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115256,"byte_end":115259,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ Once the reactor has dropped, any outstanding I/O resources bound to","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115260,"byte_end":115332,"line_start":265,"line_end":265,"column_start":1,"column_end":73}},{"value":"/ that reactor will no longer function. Calling any method on them will","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115333,"byte_end":115406,"line_start":266,"line_end":266,"column_start":1,"column_end":74}},{"value":"/ result in an error.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115407,"byte_end":115430,"line_start":267,"line_end":267,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115431,"byte_end":115434,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ [timer]: crate::time","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115435,"byte_end":115459,"line_start":269,"line_end":269,"column_start":1,"column_end":25}},{"value":"/ [mod]: index.html","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115460,"byte_end":115481,"line_start":270,"line_end":270,"column_start":1,"column_end":22}},{"value":"/ [`new`]: method@Self::new","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115482,"byte_end":115511,"line_start":271,"line_end":271,"column_start":1,"column_end":30}},{"value":"/ [`Builder`]: struct@Builder","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115512,"byte_end":115543,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ [`tokio::run`]: fn@run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115544,"byte_end":115570,"line_start":273,"line_end":273,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1104},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117827,"byte_end":117830,"line_start":341,"line_end":341,"column_start":12,"column_end":15},"name":"new","qualname":"<Runtime>::new","value":"pub fn new() -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Create a new runtime instance with default configuration values.","sig":null,"attributes":[{"value":"/ Create a new runtime instance with default configuration values.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":116420,"byte_end":116488,"line_start":306,"line_end":306,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":116493,"byte_end":116496,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ This results in a scheduler, I/O driver, and time driver being","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":116501,"byte_end":116567,"line_start":308,"line_end":308,"column_start":5,"column_end":71}},{"value":"/ initialized. The type of scheduler used depends on what feature flags","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":116572,"byte_end":116645,"line_start":309,"line_end":309,"column_start":5,"column_end":78}},{"value":"/ are enabled: if the `rt-threaded` feature is enabled, the [threaded","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":116650,"byte_end":116721,"line_start":310,"line_end":310,"column_start":5,"column_end":76}},{"value":"/ scheduler] is used, while if only the `rt-core` feature is enabled, the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":116726,"byte_end":116801,"line_start":311,"line_end":311,"column_start":5,"column_end":80}},{"value":"/ [basic scheduler] is used instead.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":116806,"byte_end":116844,"line_start":312,"line_end":312,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":116849,"byte_end":116852,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ If the threaded scheduler is selected, it will not spawn","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":116857,"byte_end":116917,"line_start":314,"line_end":314,"column_start":5,"column_end":65}},{"value":"/ any worker threads until it needs to, i.e. tasks are scheduled to run.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":116922,"byte_end":116996,"line_start":315,"line_end":315,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117001,"byte_end":117004,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ Most applications will not need to call this function directly. Instead,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117009,"byte_end":117085,"line_start":317,"line_end":317,"column_start":5,"column_end":81}},{"value":"/ they will use the  [`#[tokio::main]` attribute][main]. When more complex","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117090,"byte_end":117166,"line_start":318,"line_end":318,"column_start":5,"column_end":81}},{"value":"/ configuration is necessary, the [runtime builder] may be used.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117171,"byte_end":117237,"line_start":319,"line_end":319,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117242,"byte_end":117245,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117250,"byte_end":117309,"line_start":321,"line_end":321,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117314,"byte_end":117317,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117322,"byte_end":117336,"line_start":323,"line_end":323,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117341,"byte_end":117344,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ Creating a new `Runtime` with default configuration values.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117349,"byte_end":117412,"line_start":325,"line_end":325,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117417,"byte_end":117420,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117425,"byte_end":117432,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117437,"byte_end":117469,"line_start":328,"line_end":328,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117474,"byte_end":117477,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ let rt = Runtime::new()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117482,"byte_end":117509,"line_start":330,"line_end":330,"column_start":5,"column_end":32}},{"value":"/     .unwrap();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117514,"byte_end":117532,"line_start":331,"line_end":331,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117537,"byte_end":117540,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ // Use the runtime...","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117545,"byte_end":117570,"line_start":333,"line_end":333,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117575,"byte_end":117582,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117587,"byte_end":117590,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117595,"byte_end":117616,"line_start":336,"line_end":336,"column_start":5,"column_end":26}},{"value":"/ [main]: ../attr.main.html","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117621,"byte_end":117650,"line_start":337,"line_end":337,"column_start":5,"column_end":34}},{"value":"/ [threaded scheduler]: index.html#threaded-scheduler","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117655,"byte_end":117710,"line_start":338,"line_end":338,"column_start":5,"column_end":60}},{"value":"/ [basic scheduler]: index.html#basic-scheduler","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117715,"byte_end":117764,"line_start":339,"line_end":339,"column_start":5,"column_end":54}},{"value":"/ [runtime builder]: crate::runtime::Builder","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117769,"byte_end":117815,"line_start":340,"line_end":340,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1105},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":119420,"byte_end":119425,"line_start":391,"line_end":391,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Runtime>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"/ Spawn a future onto the Tokio runtime.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118240,"byte_end":118282,"line_start":354,"line_end":354,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118287,"byte_end":118290,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ This spawns the given future onto the runtime's executor, usually a","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118295,"byte_end":118366,"line_start":356,"line_end":356,"column_start":5,"column_end":76}},{"value":"/ thread pool. The thread pool is then responsible for polling the future","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118371,"byte_end":118446,"line_start":357,"line_end":357,"column_start":5,"column_end":80}},{"value":"/ until it completes.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118451,"byte_end":118474,"line_start":358,"line_end":358,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118479,"byte_end":118482,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118487,"byte_end":118546,"line_start":360,"line_end":360,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118551,"byte_end":118554,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118559,"byte_end":118580,"line_start":362,"line_end":362,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118585,"byte_end":118588,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118593,"byte_end":118607,"line_start":364,"line_end":364,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118612,"byte_end":118615,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118620,"byte_end":118627,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118632,"byte_end":118664,"line_start":367,"line_end":367,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118669,"byte_end":118672,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118677,"byte_end":118693,"line_start":369,"line_end":369,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118698,"byte_end":118723,"line_start":370,"line_end":370,"column_start":5,"column_end":30}},{"value":"/ let rt = Runtime::new().unwrap();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118728,"byte_end":118765,"line_start":371,"line_end":371,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118770,"byte_end":118773,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ // Spawn a future onto the runtime","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118778,"byte_end":118816,"line_start":373,"line_end":373,"column_start":5,"column_end":43}},{"value":"/ rt.spawn(async {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118821,"byte_end":118841,"line_start":374,"line_end":374,"column_start":5,"column_end":25}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118846,"byte_end":118897,"line_start":375,"line_end":375,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118902,"byte_end":118909,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118914,"byte_end":118921,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118926,"byte_end":118933,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118938,"byte_end":118941,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118946,"byte_end":118958,"line_start":380,"line_end":380,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118963,"byte_end":118966,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ This function will not panic unless task execution is disabled on the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118971,"byte_end":119044,"line_start":382,"line_end":382,"column_start":5,"column_end":78}},{"value":"/ executor. This can only happen if the runtime was built using","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":119049,"byte_end":119114,"line_start":383,"line_end":383,"column_start":5,"column_end":70}},{"value":"/ [`Builder`] without picking either [`basic_scheduler`] or","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":119119,"byte_end":119180,"line_start":384,"line_end":384,"column_start":5,"column_end":66}},{"value":"/ [`threaded_scheduler`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":119185,"byte_end":119212,"line_start":385,"line_end":385,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":119217,"byte_end":119220,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ [`Builder`]: struct@Builder","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":119225,"byte_end":119256,"line_start":387,"line_end":387,"column_start":5,"column_end":36}},{"value":"/ [`threaded_scheduler`]: fn@Builder::threaded_scheduler","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":119261,"byte_end":119319,"line_start":388,"line_end":388,"column_start":5,"column_end":63}},{"value":"/ [`basic_scheduler`]: fn@Builder::basic_scheduler","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":119324,"byte_end":119376,"line_start":389,"line_end":389,"column_start":5,"column_end":57}},{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":119381,"byte_end":119408,"line_start":390,"line_end":390,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1107},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121046,"byte_end":121054,"line_start":438,"line_end":438,"column_start":12,"column_end":20},"name":"block_on","qualname":"<Runtime>::block_on","value":"pub fn block_on<F: Future>(&mut Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime. This is the runtime's\n entry point.","sig":null,"attributes":[{"value":"/ Run a future to completion on the Tokio runtime. This is the runtime's","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":119827,"byte_end":119901,"line_start":404,"line_end":404,"column_start":5,"column_end":79}},{"value":"/ entry point.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":119906,"byte_end":119922,"line_start":405,"line_end":405,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":119927,"byte_end":119930,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":119935,"byte_end":120002,"line_start":407,"line_end":407,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120007,"byte_end":120080,"line_start":408,"line_end":408,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120085,"byte_end":120150,"line_start":409,"line_end":409,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120155,"byte_end":120158,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ `&mut` is required as calling `block_on` **may** result in advancing the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120163,"byte_end":120239,"line_start":411,"line_end":411,"column_start":5,"column_end":81}},{"value":"/ state of the runtime. The details depend on how the runtime is","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120244,"byte_end":120310,"line_start":412,"line_end":412,"column_start":5,"column_end":71}},{"value":"/ configured. [`runtime::Handle::block_on`][handle] provides a version","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120315,"byte_end":120387,"line_start":413,"line_end":413,"column_start":5,"column_end":77}},{"value":"/ that takes `&self`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120392,"byte_end":120415,"line_start":414,"line_end":414,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120420,"byte_end":120423,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ This method may not be called from an asynchronous context.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120428,"byte_end":120491,"line_start":416,"line_end":416,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120496,"byte_end":120499,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120504,"byte_end":120516,"line_start":418,"line_end":418,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120521,"byte_end":120524,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ This function panics if the provided future panics, or if called within an","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120529,"byte_end":120607,"line_start":420,"line_end":420,"column_start":5,"column_end":83}},{"value":"/ asynchronous execution context.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120612,"byte_end":120647,"line_start":421,"line_end":421,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120652,"byte_end":120655,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120660,"byte_end":120674,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120679,"byte_end":120682,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120687,"byte_end":120700,"line_start":425,"line_end":425,"column_start":5,"column_end":18}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120705,"byte_end":120737,"line_start":426,"line_end":426,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120742,"byte_end":120745,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ // Create the runtime","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120750,"byte_end":120775,"line_start":428,"line_end":428,"column_start":5,"column_end":30}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120780,"byte_end":120821,"line_start":429,"line_end":429,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120826,"byte_end":120829,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ // Execute the future, blocking the current thread until completion","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120834,"byte_end":120905,"line_start":431,"line_end":431,"column_start":5,"column_end":76}},{"value":"/ rt.block_on(async {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120910,"byte_end":120933,"line_start":432,"line_end":432,"column_start":5,"column_end":28}},{"value":"/     println!(\"hello\");","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120938,"byte_end":120964,"line_start":433,"line_end":433,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120969,"byte_end":120976,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120981,"byte_end":120988,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120993,"byte_end":120996,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ [handle]: fn@Handle::block_on","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121001,"byte_end":121034,"line_start":437,"line_end":437,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1110},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122576,"byte_end":122581,"line_start":482,"line_end":482,"column_start":12,"column_end":17},"name":"enter","qualname":"<Runtime>::enter","value":"pub fn enter<F, R>(&Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Delay`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`].","sig":null,"attributes":[{"value":"/ Enter the runtime context. This allows you to construct types that must","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121460,"byte_end":121535,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ have an executor available on creation such as [`Delay`] or [`TcpStream`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121540,"byte_end":121618,"line_start":451,"line_end":451,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121623,"byte_end":121691,"line_start":452,"line_end":452,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121696,"byte_end":121699,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ This function is also available as [`Handle::enter`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121704,"byte_end":121761,"line_start":454,"line_end":454,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121766,"byte_end":121769,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ [`Delay`]: struct@crate::time::Delay","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121774,"byte_end":121814,"line_start":456,"line_end":456,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121819,"byte_end":121866,"line_start":457,"line_end":457,"column_start":5,"column_end":52}},{"value":"/ [`Handle::enter`]: fn@crate::runtime::Handle::enter","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121871,"byte_end":121926,"line_start":458,"line_end":458,"column_start":5,"column_end":60}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121931,"byte_end":121968,"line_start":459,"line_end":459,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121973,"byte_end":121976,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121981,"byte_end":121994,"line_start":461,"line_end":461,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121999,"byte_end":122002,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122007,"byte_end":122014,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122019,"byte_end":122051,"line_start":464,"line_end":464,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122056,"byte_end":122059,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ fn function_that_spawns(msg: String) {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122064,"byte_end":122106,"line_start":466,"line_end":466,"column_start":5,"column_end":47}},{"value":"/     // Had we not used `rt.enter` below, this would panic.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122111,"byte_end":122173,"line_start":467,"line_end":467,"column_start":5,"column_end":67}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122178,"byte_end":122211,"line_start":468,"line_end":468,"column_start":5,"column_end":38}},{"value":"/         println!(\"{}\", msg);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122216,"byte_end":122248,"line_start":469,"line_end":469,"column_start":5,"column_end":37}},{"value":"/     });","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122253,"byte_end":122264,"line_start":470,"line_end":470,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122269,"byte_end":122274,"line_start":471,"line_end":471,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122279,"byte_end":122282,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122287,"byte_end":122302,"line_start":473,"line_end":473,"column_start":5,"column_end":20}},{"value":"/     let rt = Runtime::new().unwrap();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122307,"byte_end":122348,"line_start":474,"line_end":474,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122353,"byte_end":122356,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/     let s = \"Hello World!\".to_string();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122361,"byte_end":122404,"line_start":476,"line_end":476,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122409,"byte_end":122412,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/     // By entering the context, we tie `tokio::spawn` to this executor.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122417,"byte_end":122492,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/     rt.enter(|| function_that_spawns(s));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122497,"byte_end":122542,"line_start":479,"line_end":479,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122547,"byte_end":122552,"line_start":480,"line_end":480,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122557,"byte_end":122564,"line_start":481,"line_end":481,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1113},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123168,"byte_end":123174,"line_start":506,"line_end":506,"column_start":12,"column_end":18},"name":"handle","qualname":"<Runtime>::handle","value":"pub fn handle(&Self) -> &Handle","parent":null,"children":[],"decl_id":null,"docs":" Return a handle to the runtime's spawner.","sig":null,"attributes":[{"value":"/ Return a handle to the runtime's spawner.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122688,"byte_end":122733,"line_start":489,"line_end":489,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122738,"byte_end":122741,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ The returned handle can be used to spawn tasks that run on this runtime, and can","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122746,"byte_end":122830,"line_start":491,"line_end":491,"column_start":5,"column_end":89}},{"value":"/ be cloned to allow moving the `Handle` to other threads.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122835,"byte_end":122895,"line_start":492,"line_end":492,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122900,"byte_end":122903,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122908,"byte_end":122922,"line_start":494,"line_end":494,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122927,"byte_end":122930,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122935,"byte_end":122942,"line_start":496,"line_end":496,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122947,"byte_end":122979,"line_start":497,"line_end":497,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122984,"byte_end":122987,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ let rt = Runtime::new()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122992,"byte_end":123019,"line_start":499,"line_end":499,"column_start":5,"column_end":32}},{"value":"/     .unwrap();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123024,"byte_end":123042,"line_start":500,"line_end":500,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123047,"byte_end":123050,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ let handle = rt.handle();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123055,"byte_end":123084,"line_start":502,"line_end":502,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123089,"byte_end":123092,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ handle.spawn(async { println!(\"hello\"); });","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123097,"byte_end":123144,"line_start":504,"line_end":504,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123149,"byte_end":123156,"line_start":505,"line_end":505,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1114},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124582,"byte_end":124598,"line_start":545,"line_end":545,"column_start":12,"column_end":28},"name":"shutdown_timeout","qualname":"<Runtime>::shutdown_timeout","value":"pub fn shutdown_timeout(Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, waiting for at most `duration` for all spawned\n task to shutdown.","sig":null,"attributes":[{"value":"/ Shutdown the runtime, waiting for at most `duration` for all spawned","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123227,"byte_end":123299,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ task to shutdown.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123304,"byte_end":123325,"line_start":511,"line_end":511,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123330,"byte_end":123333,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ Usually, dropping a `Runtime` handle is sufficient as tasks are able to","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123338,"byte_end":123413,"line_start":513,"line_end":513,"column_start":5,"column_end":80}},{"value":"/ shutdown in a timely fashion. However, dropping a `Runtime` will wait","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123418,"byte_end":123491,"line_start":514,"line_end":514,"column_start":5,"column_end":78}},{"value":"/ indefinitely for all tasks to terminate, and there are cases where a long","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123496,"byte_end":123573,"line_start":515,"line_end":515,"column_start":5,"column_end":82}},{"value":"/ blocking task has been spawned, which can block dropping `Runtime`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123578,"byte_end":123649,"line_start":516,"line_end":516,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123654,"byte_end":123657,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ In this case, calling `shutdown_timeout` with an explicit wait timeout","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123662,"byte_end":123736,"line_start":518,"line_end":518,"column_start":5,"column_end":79}},{"value":"/ can work. The `shutdown_timeout` will signal all tasks to shutdown and","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123741,"byte_end":123815,"line_start":519,"line_end":519,"column_start":5,"column_end":79}},{"value":"/ will wait for at most `duration` for all spawned tasks to terminate. If","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123820,"byte_end":123895,"line_start":520,"line_end":520,"column_start":5,"column_end":80}},{"value":"/ `timeout` elapses before all tasks are dropped, the function returns and","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123900,"byte_end":123976,"line_start":521,"line_end":521,"column_start":5,"column_end":81}},{"value":"/ outstanding tasks are potentially leaked.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123981,"byte_end":124026,"line_start":522,"line_end":522,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124031,"byte_end":124034,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124039,"byte_end":124053,"line_start":524,"line_end":524,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124058,"byte_end":124061,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124066,"byte_end":124073,"line_start":526,"line_end":526,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124078,"byte_end":124110,"line_start":527,"line_end":527,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124115,"byte_end":124135,"line_start":528,"line_end":528,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124140,"byte_end":124143,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ use std::thread;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124148,"byte_end":124168,"line_start":530,"line_end":530,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124173,"byte_end":124201,"line_start":531,"line_end":531,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124206,"byte_end":124209,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124214,"byte_end":124229,"line_start":533,"line_end":533,"column_start":5,"column_end":20}},{"value":"/    let mut runtime = Runtime::new().unwrap();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124234,"byte_end":124283,"line_start":534,"line_end":534,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124288,"byte_end":124291,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/    runtime.block_on(async move {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124296,"byte_end":124332,"line_start":536,"line_end":536,"column_start":5,"column_end":41}},{"value":"/        task::spawn_blocking(move || {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124337,"byte_end":124378,"line_start":537,"line_end":537,"column_start":5,"column_end":46}},{"value":"/            thread::sleep(Duration::from_secs(10_000));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124383,"byte_end":124441,"line_start":538,"line_end":538,"column_start":5,"column_end":63}},{"value":"/        });","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124446,"byte_end":124460,"line_start":539,"line_end":539,"column_start":5,"column_end":19}},{"value":"/    });","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124465,"byte_end":124475,"line_start":540,"line_end":540,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124480,"byte_end":124483,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/    runtime.shutdown_timeout(Duration::from_millis(100));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124488,"byte_end":124548,"line_start":542,"line_end":542,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124553,"byte_end":124558,"line_start":543,"line_end":543,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124563,"byte_end":124570,"line_start":544,"line_end":544,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1115},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125907,"byte_end":125926,"line_start":577,"line_end":577,"column_start":12,"column_end":31},"name":"shutdown_background","qualname":"<Runtime>::shutdown_background","value":"pub fn shutdown_background(Self)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, without waiting for any spawned tasks to shutdown.","sig":null,"attributes":[{"value":"/ Shutdown the runtime, without waiting for any spawned tasks to shutdown.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124789,"byte_end":124865,"line_start":551,"line_end":551,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124870,"byte_end":124873,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ This can be useful if you want to drop a runtime from within another runtime.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124878,"byte_end":124959,"line_start":553,"line_end":553,"column_start":5,"column_end":86}},{"value":"/ Normally, dropping a runtime will block indefinitely for spawned blocking tasks","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124964,"byte_end":125047,"line_start":554,"line_end":554,"column_start":5,"column_end":88}},{"value":"/ to complete, which would normally not be permitted within an asynchronous context.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125052,"byte_end":125138,"line_start":555,"line_end":555,"column_start":5,"column_end":91}},{"value":"/ By calling `shutdown_background()`, you can drop the runtime from such a context.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125143,"byte_end":125228,"line_start":556,"line_end":556,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125233,"byte_end":125236,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ Note however, that because we do not wait for any blocking tasks to complete, this","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125241,"byte_end":125327,"line_start":558,"line_end":558,"column_start":5,"column_end":91}},{"value":"/ may result in a resource leak (in that any blocking tasks are still running until they","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125332,"byte_end":125422,"line_start":559,"line_end":559,"column_start":5,"column_end":95}},{"value":"/ return.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125427,"byte_end":125438,"line_start":560,"line_end":560,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125443,"byte_end":125446,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `shutdown_timeout(Duration::of_nanos(0))`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125451,"byte_end":125536,"line_start":562,"line_end":562,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125541,"byte_end":125544,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125549,"byte_end":125556,"line_start":564,"line_end":564,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125561,"byte_end":125593,"line_start":565,"line_end":565,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125598,"byte_end":125601,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125606,"byte_end":125621,"line_start":567,"line_end":567,"column_start":5,"column_end":20}},{"value":"/    let mut runtime = Runtime::new().unwrap();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125626,"byte_end":125675,"line_start":568,"line_end":568,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125680,"byte_end":125683,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/    runtime.block_on(async move {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125688,"byte_end":125724,"line_start":570,"line_end":570,"column_start":5,"column_end":41}},{"value":"/        let inner_runtime = Runtime::new().unwrap();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125729,"byte_end":125784,"line_start":571,"line_end":571,"column_start":5,"column_end":60}},{"value":"/        // ...","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125789,"byte_end":125806,"line_start":572,"line_end":572,"column_start":5,"column_end":22}},{"value":"/        inner_runtime.shutdown_background();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125811,"byte_end":125858,"line_start":573,"line_end":573,"column_start":5,"column_end":52}},{"value":"/    });","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125863,"byte_end":125873,"line_start":574,"line_end":574,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125878,"byte_end":125883,"line_start":575,"line_end":575,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125888,"byte_end":125895,"line_start":576,"line_end":576,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":6444},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"signal","qualname":"::signal","value":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","parent":null,"children":[{"krate":0,"index":6445},{"krate":0,"index":6456},{"krate":0,"index":6459},{"krate":0,"index":6527},{"krate":0,"index":6535}],"decl_id":null,"docs":" Asynchronous signal handling for Tokio","sig":null,"attributes":[{"value":"cfg(feature = \"signal\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":20854,"byte_end":20880,"line_start":210,"line_end":210,"column_start":13,"column_end":39}},{"value":"cfg(not(loom))","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":20955,"byte_end":20972,"line_start":212,"line_end":212,"column_start":13,"column_end":30}},{"value":"/ Asynchronous signal handling for Tokio","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13034659,"byte_end":13034701,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13034702,"byte_end":13034705,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Note that signal handling is in general a very tricky topic and should be","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13034706,"byte_end":13034783,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ used with great care. This crate attempts to implement 'best practice' for","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13034784,"byte_end":13034862,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ signal handling, but it should be evaluated for your own applications' needs","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13034863,"byte_end":13034943,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"/ to see if it's suitable.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13034944,"byte_end":13034972,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13034973,"byte_end":13034976,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The are some fundamental limitations of this crate documented on the OS","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13034977,"byte_end":13035052,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ specific structures, as well.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13035053,"byte_end":13035086,"line_start":9,"line_end":9,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13035087,"byte_end":13035090,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13035091,"byte_end":13035105,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13035106,"byte_end":13035109,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Print on \"ctrl-c\" notification.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13035110,"byte_end":13035145,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13035146,"byte_end":13035149,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13035150,"byte_end":13035168,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13035169,"byte_end":13035191,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13035192,"byte_end":13035195,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13035196,"byte_end":13035214,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13035215,"byte_end":13035278,"line_start":19,"line_end":19,"column_start":1,"column_end":64}},{"value":"/     signal::ctrl_c().await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13035279,"byte_end":13035311,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/     println!(\"ctrl-c received!\");","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13035312,"byte_end":13035349,"line_start":21,"line_end":21,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13035350,"byte_end":13035364,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13035365,"byte_end":13035370,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13035371,"byte_end":13035378,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13035379,"byte_end":13035382,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Wait for SIGHUP on Unix","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13035383,"byte_end":13035410,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13035411,"byte_end":13035414,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13035415,"byte_end":13035433,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # #[cfg(unix)] {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13035434,"byte_end":13035454,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"/ use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13035455,"byte_end":13035505,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13035506,"byte_end":13035509,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13035510,"byte_end":13035528,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13035529,"byte_end":13035592,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/     // An infinite stream of hangup signals.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13035593,"byte_end":13035641,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"/     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13035642,"byte_end":13035697,"line_start":35,"line_end":35,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13035698,"byte_end":13035701,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // Print whenever a HUP signal is received","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13035702,"byte_end":13035752,"line_start":37,"line_end":37,"column_start":1,"column_end":51}},{"value":"/     loop {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13035753,"byte_end":13035767,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/         stream.recv().await;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13035768,"byte_end":13035800,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"/         println!(\"got signal HUP\");","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13035801,"byte_end":13035840,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13035841,"byte_end":13035850,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13035851,"byte_end":13035856,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13035857,"byte_end":13035864,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13035865,"byte_end":13035872,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":6453},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":13037948,"byte_end":13037954,"line_start":50,"line_end":50,"column_start":14,"column_end":20},"name":"ctrl_c","qualname":"::signal::ctrl_c::ctrl_c","value":"pub async fn ctrl_c() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when a \"ctrl-c\" notification is sent to the process.","sig":null,"attributes":[{"value":"/ Completes when a \"ctrl-c\" notification is sent to the process.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":13036246,"byte_end":13036312,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":13036313,"byte_end":13036316,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ While signals are handled very differently between Unix and Windows, both","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":13036317,"byte_end":13036394,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ platforms support receiving a signal on \"ctrl-c\". This function provides a","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":13036395,"byte_end":13036473,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ portable API for receiving this notification.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":13036474,"byte_end":13036523,"line_start":12,"line_end":12,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":13036524,"byte_end":13036527,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Once the returned future is polled, a listener is registered. The future","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":13036528,"byte_end":13036604,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ will complete on the first received `ctrl-c` **after** the initial call to","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":13036605,"byte_end":13036683,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ either `Future::poll` or `.await`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":13036684,"byte_end":13036722,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":13036723,"byte_end":13036726,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":13036727,"byte_end":13036740,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":13036741,"byte_end":13036744,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ On Unix platforms, the first time that a `Signal` instance is registered for a","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":13036745,"byte_end":13036827,"line_start":20,"line_end":20,"column_start":1,"column_end":83}},{"value":"/ particular signal kind, an OS signal-handler is installed which replaces the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":13036828,"byte_end":13036908,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ default platform behavior when that signal is received, **for the duration of","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":13036909,"byte_end":13036990,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/ the entire process**.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":13036991,"byte_end":13037016,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":13037017,"byte_end":13037020,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ For example, Unix systems will terminate a process by default when it","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":13037021,"byte_end":13037094,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/ receives a signal generated by \"CTRL+C\" on the terminal. But, when a","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":13037095,"byte_end":13037167,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ `ctrl_c` stream is created to listen for this signal, the time it arrives,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":13037168,"byte_end":13037246,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ it will be translated to a stream event, and the process will continue to","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":13037247,"byte_end":13037324,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ execute.  **Even if this `Signal` instance is dropped, subsequent SIGINT","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":13037325,"byte_end":13037401,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ deliveries will end up captured by Tokio, and the default platform behavior","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":13037402,"byte_end":13037481,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ will NOT be reset**.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":13037482,"byte_end":13037506,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":13037507,"byte_end":13037510,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Thus, applications should take care to ensure the expected signal behavior","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":13037511,"byte_end":13037589,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ occurs as expected after listening for specific signals.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":13037590,"byte_end":13037650,"line_start":34,"line_end":34,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":13037651,"byte_end":13037654,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":13037655,"byte_end":13037669,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":13037670,"byte_end":13037673,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":13037674,"byte_end":13037692,"line_start":38,"line_end":38,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":13037693,"byte_end":13037715,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":13037716,"byte_end":13037719,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":13037720,"byte_end":13037738,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":13037739,"byte_end":13037760,"line_start":42,"line_end":42,"column_start":1,"column_end":22}},{"value":"/     println!(\"waiting for ctrl-c\");","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":13037761,"byte_end":13037800,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":13037801,"byte_end":13037804,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/     signal::ctrl_c().await.expect(\"failed to listen for event\");","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":13037805,"byte_end":13037873,"line_start":45,"line_end":45,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":13037874,"byte_end":13037877,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/     println!(\"received ctrl-c event\");","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":13037878,"byte_end":13037920,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":13037921,"byte_end":13037926,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":13037927,"byte_end":13037934,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":6535},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::signal::unix","value":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","parent":null,"children":[{"krate":0,"index":6536},{"krate":0,"index":6537},{"krate":0,"index":6540},{"krate":0,"index":6543},{"krate":0,"index":6544},{"krate":0,"index":6547},{"krate":0,"index":6550},{"krate":0,"index":6553},{"krate":0,"index":6556},{"krate":0,"index":6559},{"krate":0,"index":6562},{"krate":0,"index":6563},{"krate":0,"index":6566},{"krate":0,"index":6569},{"krate":0,"index":6572},{"krate":0,"index":6575},{"krate":0,"index":6576},{"krate":0,"index":6579},{"krate":0,"index":6582},{"krate":0,"index":6585},{"krate":0,"index":6588},{"krate":0,"index":6591},{"krate":0,"index":6592},{"krate":0,"index":6595},{"krate":0,"index":6598},{"krate":0,"index":6601},{"krate":0,"index":6602},{"krate":0,"index":6605},{"krate":0,"index":6608},{"krate":0,"index":6609},{"krate":0,"index":6610},{"krate":0,"index":6613},{"krate":0,"index":6677},{"krate":0,"index":6680},{"krate":0,"index":6620},{"krate":0,"index":6682},{"krate":0,"index":6685},{"krate":0,"index":6687},{"krate":0,"index":6689},{"krate":0,"index":6622},{"krate":0,"index":6636},{"krate":0,"index":6640},{"krate":0,"index":6642},{"krate":0,"index":6643},{"krate":0,"index":6690},{"krate":0,"index":6692},{"krate":0,"index":6647},{"krate":0,"index":6649},{"krate":0,"index":6694},{"krate":0,"index":6697},{"krate":0,"index":6653},{"krate":0,"index":6654},{"krate":0,"index":6699},{"krate":0,"index":6663}],"decl_id":null,"docs":" Unix-specific types for signal handling.","sig":null,"attributes":[{"value":"/ Unix-specific types for signal handling.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13047392,"byte_end":13047436,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13047437,"byte_end":13047440,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only defined on Unix platforms and contains the primary","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13047441,"byte_end":13047515,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ `Signal` type for receiving notifications of signals.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13047516,"byte_end":13047573,"line_start":4,"line_end":4,"column_start":1,"column_end":58}},{"value":"cfg(unix)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13047575,"byte_end":13047588,"line_start":6,"line_end":6,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6682},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13048903,"byte_end":13048913,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"SignalKind","qualname":"::signal::unix::SignalKind","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents the specific kind of signal to listen for.\n","sig":null,"attributes":[{"value":"/ Represents the specific kind of signal to listen for.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13048804,"byte_end":13048861,"line_start":59,"line_end":59,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":6623},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13049312,"byte_end":13049320,"line_start":74,"line_end":74,"column_start":12,"column_end":20},"name":"from_raw","qualname":"<SignalKind>::from_raw","value":"pub fn from_raw(c_int) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allows for listening to any valid OS signal.","sig":null,"attributes":[{"value":"/ Allows for listening to any valid OS signal.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13048945,"byte_end":13048993,"line_start":64,"line_end":64,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13048998,"byte_end":13049001,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ For example, this can be used for listening for platform-specific","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13049006,"byte_end":13049075,"line_start":66,"line_end":66,"column_start":5,"column_end":74}},{"value":"/ signals.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13049080,"byte_end":13049092,"line_start":67,"line_end":67,"column_start":5,"column_end":17}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13049097,"byte_end":13049115,"line_start":68,"line_end":68,"column_start":5,"column_end":23}},{"value":"/ # use tokio::signal::unix::SignalKind;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13049120,"byte_end":13049162,"line_start":69,"line_end":69,"column_start":5,"column_end":47}},{"value":"/ # let signum = -1;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13049167,"byte_end":13049189,"line_start":70,"line_end":70,"column_start":5,"column_end":27}},{"value":"/ // let signum = libc::OS_SPECIFIC_SIGNAL;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13049194,"byte_end":13049239,"line_start":71,"line_end":71,"column_start":5,"column_end":50}},{"value":"/ let kind = SignalKind::from_raw(signum);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13049244,"byte_end":13049288,"line_start":72,"line_end":72,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13049293,"byte_end":13049300,"line_start":73,"line_end":73,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6624},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13049574,"byte_end":13049579,"line_start":82,"line_end":82,"column_start":12,"column_end":17},"name":"alarm","qualname":"<SignalKind>::alarm","value":"pub fn alarm() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGALRM signal.","sig":null,"attributes":[{"value":"/ Represents the SIGALRM signal.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13049378,"byte_end":13049412,"line_start":78,"line_end":78,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13049417,"byte_end":13049420,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when a real-time timer has expired.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13049425,"byte_end":13049500,"line_start":80,"line_end":80,"column_start":5,"column_end":80}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13049505,"byte_end":13049562,"line_start":81,"line_end":81,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":6625},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13049821,"byte_end":13049826,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"child","qualname":"<SignalKind>::child","value":"pub fn child() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGCHLD signal.","sig":null,"attributes":[{"value":"/ Represents the SIGCHLD signal.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13049631,"byte_end":13049665,"line_start":86,"line_end":86,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13049670,"byte_end":13049673,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the status of a child process","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13049678,"byte_end":13049752,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ has changed. By default, this signal is ignored.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13049757,"byte_end":13049809,"line_start":89,"line_end":89,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":6626},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13050072,"byte_end":13050078,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"hangup","qualname":"<SignalKind>::hangup","value":"pub fn hangup() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGHUP signal.","sig":null,"attributes":[{"value":"/ Represents the SIGHUP signal.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13049878,"byte_end":13049911,"line_start":94,"line_end":94,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13049916,"byte_end":13049919,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the terminal is disconnected.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13049924,"byte_end":13049998,"line_start":96,"line_end":96,"column_start":5,"column_end":79}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13050003,"byte_end":13050060,"line_start":97,"line_end":97,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":6627},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13050492,"byte_end":13050496,"line_start":113,"line_end":113,"column_start":12,"column_end":16},"name":"info","qualname":"<SignalKind>::info","value":"pub fn info() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGINFO signal.","sig":null,"attributes":[{"value":"/ Represents the SIGINFO signal.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13050129,"byte_end":13050163,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13050168,"byte_end":13050171,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to request a status update from the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13050176,"byte_end":13050251,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/ process. By default, this signal is ignored.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13050256,"byte_end":13050304,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"macos\",\n          target_os = \"netbsd\", target_os = \"openbsd\"))","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13050309,"byte_end":13050480,"line_start":106,"line_end":112,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6628},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13050731,"byte_end":13050740,"line_start":121,"line_end":121,"column_start":12,"column_end":21},"name":"interrupt","qualname":"<SignalKind>::interrupt","value":"pub fn interrupt() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGINT signal.","sig":null,"attributes":[{"value":"/ Represents the SIGINT signal.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13050548,"byte_end":13050581,"line_start":117,"line_end":117,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13050586,"byte_end":13050589,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to interrupt a program.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13050594,"byte_end":13050657,"line_start":119,"line_end":119,"column_start":5,"column_end":68}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13050662,"byte_end":13050719,"line_start":120,"line_end":120,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":6629},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13050989,"byte_end":13050991,"line_start":129,"line_end":129,"column_start":12,"column_end":14},"name":"io","qualname":"<SignalKind>::io","value":"pub fn io() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGIO signal.","sig":null,"attributes":[{"value":"/ Represents the SIGIO signal.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13050791,"byte_end":13050823,"line_start":125,"line_end":125,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13050828,"byte_end":13050831,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when I/O operations are possible","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13050836,"byte_end":13050908,"line_start":127,"line_end":127,"column_start":5,"column_end":77}},{"value":"/ on some file descriptor. By default, this signal is ignored.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13050913,"byte_end":13050977,"line_start":128,"line_end":128,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":6630},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13051275,"byte_end":13051279,"line_start":138,"line_end":138,"column_start":12,"column_end":16},"name":"pipe","qualname":"<SignalKind>::pipe","value":"pub fn pipe() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGPIPE signal.","sig":null,"attributes":[{"value":"/ Represents the SIGPIPE signal.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13051041,"byte_end":13051075,"line_start":133,"line_end":133,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13051080,"byte_end":13051083,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the process attempts to write","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13051088,"byte_end":13051162,"line_start":135,"line_end":135,"column_start":5,"column_end":79}},{"value":"/ to a pipe which has no reader. By default, the process is terminated by","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13051167,"byte_end":13051242,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ this signal.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13051247,"byte_end":13051263,"line_start":137,"line_end":137,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":6631},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13051582,"byte_end":13051586,"line_start":147,"line_end":147,"column_start":12,"column_end":16},"name":"quit","qualname":"<SignalKind>::quit","value":"pub fn quit() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGQUIT signal.","sig":null,"attributes":[{"value":"/ Represents the SIGQUIT signal.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13051331,"byte_end":13051365,"line_start":142,"line_end":142,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13051370,"byte_end":13051373,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to issue a shutdown of the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13051378,"byte_end":13051444,"line_start":144,"line_end":144,"column_start":5,"column_end":71}},{"value":"/ process, after which the OS will dump the process core.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13051449,"byte_end":13051508,"line_start":145,"line_end":145,"column_start":5,"column_end":64}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13051513,"byte_end":13051570,"line_start":146,"line_end":146,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":6632},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13051834,"byte_end":13051843,"line_start":155,"line_end":155,"column_start":12,"column_end":21},"name":"terminate","qualname":"<SignalKind>::terminate","value":"pub fn terminate() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGTERM signal.","sig":null,"attributes":[{"value":"/ Represents the SIGTERM signal.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13051638,"byte_end":13051672,"line_start":151,"line_end":151,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13051677,"byte_end":13051680,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to issue a shutdown of the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13051685,"byte_end":13051751,"line_start":153,"line_end":153,"column_start":5,"column_end":71}},{"value":"/ process. By default, the process is terminated by this signal.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13051756,"byte_end":13051822,"line_start":154,"line_end":154,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":6633},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13052066,"byte_end":13052079,"line_start":163,"line_end":163,"column_start":12,"column_end":25},"name":"user_defined1","qualname":"<SignalKind>::user_defined1","value":"pub fn user_defined1() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGUSR1 signal.","sig":null,"attributes":[{"value":"/ Represents the SIGUSR1 signal.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13051895,"byte_end":13051929,"line_start":159,"line_end":159,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13051934,"byte_end":13051937,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this is a user defined signal.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13051942,"byte_end":13051992,"line_start":161,"line_end":161,"column_start":5,"column_end":55}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13051997,"byte_end":13052054,"line_start":162,"line_end":162,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":6634},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13052302,"byte_end":13052315,"line_start":171,"line_end":171,"column_start":12,"column_end":25},"name":"user_defined2","qualname":"<SignalKind>::user_defined2","value":"pub fn user_defined2() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGUSR2 signal.","sig":null,"attributes":[{"value":"/ Represents the SIGUSR2 signal.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13052131,"byte_end":13052165,"line_start":167,"line_end":167,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13052170,"byte_end":13052173,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this is a user defined signal.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13052178,"byte_end":13052228,"line_start":169,"line_end":169,"column_start":5,"column_end":55}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13052233,"byte_end":13052290,"line_start":170,"line_end":170,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":6635},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13052547,"byte_end":13052560,"line_start":179,"line_end":179,"column_start":12,"column_end":25},"name":"window_change","qualname":"<SignalKind>::window_change","value":"pub fn window_change() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGWINCH signal.","sig":null,"attributes":[{"value":"/ Represents the SIGWINCH signal.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13052367,"byte_end":13052402,"line_start":175,"line_end":175,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13052407,"byte_end":13052410,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the terminal window is resized.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13052415,"byte_end":13052491,"line_start":177,"line_end":177,"column_start":5,"column_end":81}},{"value":"/ By default, this signal is ignored.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13052496,"byte_end":13052535,"line_start":178,"line_end":178,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":6694},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13059983,"byte_end":13059989,"line_start":378,"line_end":378,"column_start":12,"column_end":18},"name":"Signal","qualname":"::signal::unix::Signal","value":"Signal {  }","parent":null,"children":[{"krate":0,"index":6695},{"krate":0,"index":6696}],"decl_id":null,"docs":" A stream of events for receiving a particular type of OS signal.","sig":null,"attributes":[{"value":"/ A stream of events for receiving a particular type of OS signal.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13057218,"byte_end":13057286,"line_start":314,"line_end":314,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13057287,"byte_end":13057290,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ In general signal handling on Unix is a pretty tricky topic, and this","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13057291,"byte_end":13057364,"line_start":316,"line_end":316,"column_start":1,"column_end":74}},{"value":"/ structure is no exception! There are some important limitations to keep in","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13057365,"byte_end":13057443,"line_start":317,"line_end":317,"column_start":1,"column_end":79}},{"value":"/ mind when using `Signal` streams:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13057444,"byte_end":13057481,"line_start":318,"line_end":318,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13057482,"byte_end":13057485,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"/ * Signals handling in Unix already necessitates coalescing signals","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13057486,"byte_end":13057556,"line_start":320,"line_end":320,"column_start":1,"column_end":71}},{"value":"/   together sometimes. This `Signal` stream is also no exception here in","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13057557,"byte_end":13057632,"line_start":321,"line_end":321,"column_start":1,"column_end":76}},{"value":"/   that it will also coalesce signals. That is, even if the signal handler","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13057633,"byte_end":13057710,"line_start":322,"line_end":322,"column_start":1,"column_end":78}},{"value":"/   for this process runs multiple times, the `Signal` stream may only return","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13057711,"byte_end":13057790,"line_start":323,"line_end":323,"column_start":1,"column_end":80}},{"value":"/   one signal notification. Specifically, before `poll` is called, all","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13057791,"byte_end":13057864,"line_start":324,"line_end":324,"column_start":1,"column_end":74}},{"value":"/   signal notifications are coalesced into one item returned from `poll`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13057865,"byte_end":13057941,"line_start":325,"line_end":325,"column_start":1,"column_end":77}},{"value":"/   Once `poll` has been called, however, a further signal is guaranteed to","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13057942,"byte_end":13058019,"line_start":326,"line_end":326,"column_start":1,"column_end":78}},{"value":"/   be yielded as an item.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13058020,"byte_end":13058048,"line_start":327,"line_end":327,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13058049,"byte_end":13058052,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/   Put another way, any element pulled off the returned stream corresponds to","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13058053,"byte_end":13058133,"line_start":329,"line_end":329,"column_start":1,"column_end":81}},{"value":"/   *at least one* signal, but possibly more.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13058134,"byte_end":13058181,"line_start":330,"line_end":330,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13058182,"byte_end":13058185,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ * Signal handling in general is relatively inefficient. Although some","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13058186,"byte_end":13058259,"line_start":332,"line_end":332,"column_start":1,"column_end":74}},{"value":"/   improvements are possible in this crate, it's recommended to not plan on","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13058260,"byte_end":13058338,"line_start":333,"line_end":333,"column_start":1,"column_end":79}},{"value":"/   having millions of signal channels open.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13058339,"byte_end":13058385,"line_start":334,"line_end":334,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13058386,"byte_end":13058389,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ If you've got any questions about this feel free to open an issue on the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13058390,"byte_end":13058466,"line_start":336,"line_end":336,"column_start":1,"column_end":77}},{"value":"/ repo! New approaches to alleviate some of these limitations are always","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13058467,"byte_end":13058541,"line_start":337,"line_end":337,"column_start":1,"column_end":75}},{"value":"/ appreciated!","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13058542,"byte_end":13058558,"line_start":338,"line_end":338,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13058559,"byte_end":13058562,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13058563,"byte_end":13058576,"line_start":340,"line_end":340,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13058577,"byte_end":13058580,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ The first time that a `Signal` instance is registered for a particular","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13058581,"byte_end":13058655,"line_start":342,"line_end":342,"column_start":1,"column_end":75}},{"value":"/ signal kind, an OS signal-handler is installed which replaces the default","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13058656,"byte_end":13058733,"line_start":343,"line_end":343,"column_start":1,"column_end":78}},{"value":"/ platform behavior when that signal is received, **for the duration of the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13058734,"byte_end":13058811,"line_start":344,"line_end":344,"column_start":1,"column_end":78}},{"value":"/ entire process**.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13058812,"byte_end":13058833,"line_start":345,"line_end":345,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13058834,"byte_end":13058837,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ For example, Unix systems will terminate a process by default when it","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13058838,"byte_end":13058911,"line_start":347,"line_end":347,"column_start":1,"column_end":74}},{"value":"/ receives SIGINT. But, when a `Signal` instance is created to listen for","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13058912,"byte_end":13058987,"line_start":348,"line_end":348,"column_start":1,"column_end":76}},{"value":"/ this signal, the next SIGINT that arrives will be translated to a stream","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13058988,"byte_end":13059064,"line_start":349,"line_end":349,"column_start":1,"column_end":77}},{"value":"/ event, and the process will continue to execute. **Even if this `Signal`","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13059065,"byte_end":13059141,"line_start":350,"line_end":350,"column_start":1,"column_end":77}},{"value":"/ instance is dropped, subsequent SIGINT deliveries will end up captured by","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13059142,"byte_end":13059219,"line_start":351,"line_end":351,"column_start":1,"column_end":78}},{"value":"/ Tokio, and the default platform behavior will NOT be reset**.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13059220,"byte_end":13059285,"line_start":352,"line_end":352,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13059286,"byte_end":13059289,"line_start":353,"line_end":353,"column_start":1,"column_end":4}},{"value":"/ Thus, applications should take care to ensure the expected signal behavior","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13059290,"byte_end":13059368,"line_start":354,"line_end":354,"column_start":1,"column_end":79}},{"value":"/ occurs as expected after listening for specific signals.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13059369,"byte_end":13059429,"line_start":355,"line_end":355,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13059430,"byte_end":13059433,"line_start":356,"line_end":356,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13059434,"byte_end":13059448,"line_start":357,"line_end":357,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13059449,"byte_end":13059452,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ Wait for SIGHUP","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13059453,"byte_end":13059472,"line_start":359,"line_end":359,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13059473,"byte_end":13059476,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13059477,"byte_end":13059495,"line_start":361,"line_end":361,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13059496,"byte_end":13059546,"line_start":362,"line_end":362,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13059547,"byte_end":13059550,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13059551,"byte_end":13059569,"line_start":364,"line_end":364,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13059570,"byte_end":13059633,"line_start":365,"line_end":365,"column_start":1,"column_end":64}},{"value":"/     // An infinite stream of hangup signals.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13059634,"byte_end":13059682,"line_start":366,"line_end":366,"column_start":1,"column_end":49}},{"value":"/     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13059683,"byte_end":13059738,"line_start":367,"line_end":367,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13059739,"byte_end":13059742,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/     // Print whenever a HUP signal is received","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13059743,"byte_end":13059793,"line_start":369,"line_end":369,"column_start":1,"column_end":51}},{"value":"/     loop {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13059794,"byte_end":13059808,"line_start":370,"line_end":370,"column_start":1,"column_end":15}},{"value":"/         stream.recv().await;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13059809,"byte_end":13059841,"line_start":371,"line_end":371,"column_start":1,"column_end":33}},{"value":"/         println!(\"got signal HUP\");","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13059842,"byte_end":13059881,"line_start":372,"line_end":372,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13059882,"byte_end":13059891,"line_start":373,"line_end":373,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13059892,"byte_end":13059897,"line_start":374,"line_end":374,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13059898,"byte_end":13059905,"line_start":375,"line_end":375,"column_start":1,"column_end":8}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13059906,"byte_end":13059954,"line_start":376,"line_end":376,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":6653},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13061082,"byte_end":13061088,"line_start":405,"line_end":405,"column_start":8,"column_end":14},"name":"signal","qualname":"::signal::unix::signal","value":"pub fn signal(SignalKind) -> io::Result<Signal>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream which will receive notifications when the current\n process receives the specified signal `kind`.","sig":null,"attributes":[{"value":"/ Creates a new stream which will receive notifications when the current","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13060037,"byte_end":13060111,"line_start":383,"line_end":383,"column_start":1,"column_end":75}},{"value":"/ process receives the specified signal `kind`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13060112,"byte_end":13060161,"line_start":384,"line_end":384,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13060162,"byte_end":13060165,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ This function will create a new stream which binds to the default reactor.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13060166,"byte_end":13060244,"line_start":386,"line_end":386,"column_start":1,"column_end":79}},{"value":"/ The `Signal` stream is an infinite stream which will receive","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13060245,"byte_end":13060309,"line_start":387,"line_end":387,"column_start":1,"column_end":65}},{"value":"/ notifications whenever a signal is received. More documentation can be","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13060310,"byte_end":13060384,"line_start":388,"line_end":388,"column_start":1,"column_end":75}},{"value":"/ found on `Signal` itself, but to reiterate:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13060385,"byte_end":13060432,"line_start":389,"line_end":389,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13060433,"byte_end":13060436,"line_start":390,"line_end":390,"column_start":1,"column_end":4}},{"value":"/ * Signals may be coalesced beyond what the kernel already does.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13060437,"byte_end":13060504,"line_start":391,"line_end":391,"column_start":1,"column_end":68}},{"value":"/ * Once a signal handler is registered with the process the underlying","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13060505,"byte_end":13060578,"line_start":392,"line_end":392,"column_start":1,"column_end":74}},{"value":"/   libc signal handler is never unregistered.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13060579,"byte_end":13060627,"line_start":393,"line_end":393,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13060628,"byte_end":13060631,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/ A `Signal` stream can be created for a particular signal number","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13060632,"byte_end":13060699,"line_start":395,"line_end":395,"column_start":1,"column_end":68}},{"value":"/ multiple times. When a signal is received then all the associated","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13060700,"byte_end":13060769,"line_start":396,"line_end":396,"column_start":1,"column_end":70}},{"value":"/ channels will receive the signal notification.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13060770,"byte_end":13060820,"line_start":397,"line_end":397,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13060821,"byte_end":13060824,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13060825,"byte_end":13060837,"line_start":399,"line_end":399,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13060838,"byte_end":13060841,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ * If the lower-level C functions fail for some reason.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13060842,"byte_end":13060900,"line_start":401,"line_end":401,"column_start":1,"column_end":59}},{"value":"/ * If the previous initialization of this specific signal failed.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13060901,"byte_end":13060969,"line_start":402,"line_end":402,"column_start":1,"column_end":69}},{"value":"/ * If the signal is one of","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13060970,"byte_end":13060999,"line_start":403,"line_end":403,"column_start":1,"column_end":30}},{"value":"/   [`signal_hook::FORBIDDEN`](fn@signal_hook_registry::register#panics)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13061000,"byte_end":13061074,"line_start":404,"line_end":404,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":6655},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13062299,"byte_end":13062303,"line_start":447,"line_end":447,"column_start":18,"column_end":22},"name":"recv","qualname":"<Signal>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next signal notification event.","sig":null,"attributes":[{"value":"/ Receives the next signal notification event.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13061592,"byte_end":13061640,"line_start":424,"line_end":424,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13061645,"byte_end":13061648,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if no more events can be received by this stream.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13061653,"byte_end":13061725,"line_start":426,"line_end":426,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13061730,"byte_end":13061733,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13061738,"byte_end":13061752,"line_start":428,"line_end":428,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13061757,"byte_end":13061760,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Wait for SIGHUP","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13061765,"byte_end":13061784,"line_start":430,"line_end":430,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13061789,"byte_end":13061792,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13061797,"byte_end":13061815,"line_start":432,"line_end":432,"column_start":5,"column_end":23}},{"value":"/ use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13061820,"byte_end":13061870,"line_start":433,"line_end":433,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13061875,"byte_end":13061878,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13061883,"byte_end":13061901,"line_start":435,"line_end":435,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13061906,"byte_end":13061969,"line_start":436,"line_end":436,"column_start":5,"column_end":68}},{"value":"/     // An infinite stream of hangup signals.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13061974,"byte_end":13062022,"line_start":437,"line_end":437,"column_start":5,"column_end":53}},{"value":"/     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13062027,"byte_end":13062082,"line_start":438,"line_end":438,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13062087,"byte_end":13062090,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/     // Print whenever a HUP signal is received","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13062095,"byte_end":13062145,"line_start":440,"line_end":440,"column_start":5,"column_end":55}},{"value":"/     loop {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13062150,"byte_end":13062164,"line_start":441,"line_end":441,"column_start":5,"column_end":19}},{"value":"/         stream.recv().await;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13062169,"byte_end":13062201,"line_start":442,"line_end":442,"column_start":5,"column_end":37}},{"value":"/         println!(\"got signal HUP\");","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13062206,"byte_end":13062245,"line_start":443,"line_end":443,"column_start":5,"column_end":44}},{"value":"/     }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13062250,"byte_end":13062259,"line_start":444,"line_end":444,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13062264,"byte_end":13062269,"line_start":445,"line_end":445,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13062274,"byte_end":13062281,"line_start":446,"line_end":446,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6662},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13063252,"byte_end":13063261,"line_start":480,"line_end":480,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Signal>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next signal notification event, outside of an\n `async` context.","sig":null,"attributes":[{"value":"/ Polls to receive the next signal notification event, outside of an","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13062425,"byte_end":13062495,"line_start":452,"line_end":452,"column_start":5,"column_end":75}},{"value":"/ `async` context.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13062500,"byte_end":13062520,"line_start":453,"line_end":453,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13062525,"byte_end":13062528,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if no more events can be received by this stream.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13062533,"byte_end":13062605,"line_start":455,"line_end":455,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13062610,"byte_end":13062613,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13062618,"byte_end":13062632,"line_start":457,"line_end":457,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13062637,"byte_end":13062640,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ Polling from a manually implemented future","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13062645,"byte_end":13062691,"line_start":459,"line_end":459,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13062696,"byte_end":13062699,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13062704,"byte_end":13062722,"line_start":461,"line_end":461,"column_start":5,"column_end":23}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13062727,"byte_end":13062749,"line_start":462,"line_end":462,"column_start":5,"column_end":27}},{"value":"/ use std::future::Future;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13062754,"byte_end":13062782,"line_start":463,"line_end":463,"column_start":5,"column_end":33}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13062787,"byte_end":13062822,"line_start":464,"line_end":464,"column_start":5,"column_end":40}},{"value":"/ use tokio::signal::unix::Signal;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13062827,"byte_end":13062863,"line_start":465,"line_end":465,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13062868,"byte_end":13062871,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ struct MyFuture {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13062876,"byte_end":13062897,"line_start":467,"line_end":467,"column_start":5,"column_end":26}},{"value":"/     signal: Signal,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13062902,"byte_end":13062925,"line_start":468,"line_end":468,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13062930,"byte_end":13062935,"line_start":469,"line_end":469,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13062940,"byte_end":13062943,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ impl Future for MyFuture {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13062948,"byte_end":13062978,"line_start":471,"line_end":471,"column_start":5,"column_end":35}},{"value":"/     type Output = Option<()>;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13062983,"byte_end":13063016,"line_start":472,"line_end":472,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13063021,"byte_end":13063024,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/     fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13063029,"byte_end":13063116,"line_start":474,"line_end":474,"column_start":5,"column_end":92}},{"value":"/         println!(\"polling MyFuture\");","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13063121,"byte_end":13063162,"line_start":475,"line_end":475,"column_start":5,"column_end":46}},{"value":"/         self.signal.poll_recv(cx)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13063167,"byte_end":13063204,"line_start":476,"line_end":476,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13063209,"byte_end":13063218,"line_start":477,"line_end":477,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13063223,"byte_end":13063228,"line_start":478,"line_end":478,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13063233,"byte_end":13063240,"line_start":479,"line_end":479,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":6702},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":6703},{"krate":0,"index":6733},{"krate":0,"index":6736},{"krate":0,"index":6766},{"krate":0,"index":6769},{"krate":0,"index":6803},{"krate":0,"index":6806},{"krate":0,"index":6921},{"krate":0,"index":6924},{"krate":0,"index":6927},{"krate":0,"index":6957},{"krate":0,"index":6958},{"krate":0,"index":6961},{"krate":0,"index":6964},{"krate":0,"index":6998},{"krate":0,"index":7001},{"krate":0,"index":7036},{"krate":0,"index":7039},{"krate":0,"index":7070},{"krate":0,"index":7073},{"krate":0,"index":7098},{"krate":0,"index":7101},{"krate":0,"index":7124},{"krate":0,"index":7125},{"krate":0,"index":7128},{"krate":0,"index":7131},{"krate":0,"index":7168},{"krate":0,"index":7171},{"krate":0,"index":7206},{"krate":0,"index":7209},{"krate":0,"index":7236},{"krate":0,"index":7239},{"krate":0,"index":7272},{"krate":0,"index":7273},{"krate":0,"index":7276},{"krate":0,"index":7279},{"krate":0,"index":7309},{"krate":0,"index":7310},{"krate":0,"index":7313},{"krate":0,"index":7316},{"krate":0,"index":7370},{"krate":0,"index":7373},{"krate":0,"index":7405},{"krate":0,"index":7408},{"krate":0,"index":7442},{"krate":0,"index":7445},{"krate":0,"index":7478},{"krate":0,"index":7481},{"krate":0,"index":7516},{"krate":0,"index":7519},{"krate":0,"index":7555},{"krate":0,"index":7674},{"krate":0,"index":7719},{"krate":0,"index":7722},{"krate":0,"index":7558},{"krate":0,"index":7561},{"krate":0,"index":7595},{"krate":0,"index":7597}],"decl_id":null,"docs":" Stream utilities for Tokio.","sig":null,"attributes":[{"value":"cfg(feature = \"stream\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":21086,"byte_end":21112,"line_start":221,"line_end":221,"column_start":13,"column_end":39}},{"value":"/ Stream utilities for Tokio.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13072431,"byte_end":13072462,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13072463,"byte_end":13072466,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A `Stream` is an asynchronous sequence of values. It can be thought of as an asynchronous version of the standard library's `Iterator` trait.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13072467,"byte_end":13072612,"line_start":3,"line_end":3,"column_start":1,"column_end":146}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13072613,"byte_end":13072616,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module provides helpers to work with them.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13072617,"byte_end":13072668,"line_start":5,"line_end":5,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":7598},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/all.rs","byte_start":13098349,"byte_end":13098358,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AllFuture","qualname":"::stream::all::AllFuture","value":"AllFuture {  }","parent":null,"children":[{"krate":0,"index":7602},{"krate":0,"index":7603}],"decl_id":null,"docs":" Future for the [`all`](super::StreamExt::all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`all`](super::StreamExt::all) method.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/all.rs","byte_start":13098195,"byte_end":13098252,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/all.rs","byte_start":13098270,"byte_end":13098337,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7609},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/any.rs","byte_start":13099512,"byte_end":13099521,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AnyFuture","qualname":"::stream::any::AnyFuture","value":"AnyFuture {  }","parent":null,"children":[{"krate":0,"index":7613},{"krate":0,"index":7614}],"decl_id":null,"docs":" Future for the [`any`](super::StreamExt::any) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`any`](super::StreamExt::any) method.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/any.rs","byte_start":13099358,"byte_end":13099415,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/any.rs","byte_start":13099433,"byte_end":13099500,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":11226},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/chain.rs","byte_start":13100641,"byte_end":13100646,"line_start":9,"line_end":9,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":11229},{"krate":0,"index":11230}],"decl_id":null,"docs":" Stream returned by the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11188},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13101879,"byte_end":13101886,"line_start":15,"line_end":15,"column_start":16,"column_end":23},"name":"Collect","qualname":"::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":11191},{"krate":0,"index":11192}],"decl_id":null,"docs":" Future returned by the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.12/src/lib.rs","byte_start":12429821,"byte_end":12429830,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":6842},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13102451,"byte_end":13102461,"line_start":36,"line_end":36,"column_start":11,"column_end":21},"name":"FromStream","qualname":"::stream::collect::FromStream","value":"FromStream<T>: sealed::FromStreamPriv<T>","parent":null,"children":[],"decl_id":null,"docs":" Convert from a [`Stream`](crate::stream::Stream).","sig":null,"attributes":[{"value":"/ Convert from a [`Stream`](crate::stream::Stream).","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13102038,"byte_end":13102091,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13102092,"byte_end":13102095,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait is not intended to be used directly. Instead, call","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13102096,"byte_end":13102161,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/ [`StreamExt::collect()`](super::StreamExt::collect).","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13102162,"byte_end":13102218,"line_start":29,"line_end":29,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13102219,"byte_end":13102222,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Implementing","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13102223,"byte_end":13102241,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13102242,"byte_end":13102245,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait may not be implemented by third parties. The trait is","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13102246,"byte_end":13102325,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ sealed in order to make changes in the future. Stabilization is pending","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13102326,"byte_end":13102401,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ enhancements to the Rust language.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13102402,"byte_end":13102440,"line_start":35,"line_end":35,"column_start":1,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":6915},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13107362,"byte_end":13107376,"line_start":231,"line_end":231,"column_start":15,"column_end":29},"name":"FromStreamPriv","qualname":"::stream::collect::sealed::FromStreamPriv","value":"FromStreamPriv<T>","parent":null,"children":[{"krate":0,"index":6917},{"krate":0,"index":6918},{"krate":0,"index":6919},{"krate":0,"index":6920}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6917},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13107456,"byte_end":13107466,"line_start":233,"line_end":233,"column_start":14,"column_end":24},"name":"Collection","qualname":"::stream::collect::sealed::FromStreamPriv::Collection","value":"type Collection;","parent":{"krate":0,"index":6915},"children":[],"decl_id":null,"docs":" Intermediate type used during collection process\n","sig":null,"attributes":[{"value":"/ Intermediate type used during collection process","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13107390,"byte_end":13107442,"line_start":232,"line_end":232,"column_start":9,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":6918},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13107518,"byte_end":13107528,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"initialize","qualname":"::stream::collect::sealed::FromStreamPriv::initialize","value":"pub fn initialize(usize, Option<usize>) -> Self::Collection","parent":{"krate":0,"index":6915},"children":[],"decl_id":null,"docs":" Initialize the collection\n","sig":null,"attributes":[{"value":"/ Initialize the collection","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13107477,"byte_end":13107506,"line_start":235,"line_end":235,"column_start":9,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":6919},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13107745,"byte_end":13107751,"line_start":241,"line_end":241,"column_start":12,"column_end":18},"name":"extend","qualname":"::stream::collect::sealed::FromStreamPriv::extend","value":"pub fn extend(&mut Self::Collection, T) -> bool","parent":{"krate":0,"index":6915},"children":[],"decl_id":null,"docs":" Extend the collection with the received item","sig":null,"attributes":[{"value":"/ Extend the collection with the received item","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13107595,"byte_end":13107643,"line_start":238,"line_end":238,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13107652,"byte_end":13107655,"line_start":239,"line_end":239,"column_start":9,"column_end":12}},{"value":"/ Return `true` to continue streaming, `false` complete collection.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13107664,"byte_end":13107733,"line_start":240,"line_end":240,"column_start":9,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":6920},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13107867,"byte_end":13107875,"line_start":244,"line_end":244,"column_start":12,"column_end":20},"name":"finalize","qualname":"::stream::collect::sealed::FromStreamPriv::finalize","value":"pub fn finalize(&mut Self::Collection) -> Self","parent":{"krate":0,"index":6915},"children":[],"decl_id":null,"docs":" Finalize collection into target type.\n","sig":null,"attributes":[{"value":"/ Finalize collection into target type.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13107814,"byte_end":13107855,"line_start":243,"line_end":243,"column_start":9,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":7620},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":13108168,"byte_end":13108173,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream for the [`empty`](fn@empty) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`](fn@empty) function.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":13108042,"byte_end":13108090,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":13108108,"byte_end":13108156,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":6950},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":13108763,"byte_end":13108768,"line_start":36,"line_end":36,"column_start":14,"column_end":19},"name":"empty","qualname":"::stream::empty::empty","value":"pub const fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that yields nothing.","sig":null,"attributes":[{"value":"/ Creates a stream that yields nothing.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":13108298,"byte_end":13108339,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":13108340,"byte_end":13108343,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is immediately ready and returns `None`. Use","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":13108344,"byte_end":13108412,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ [`stream::pending()`](super::pending()) to obtain a stream that is never","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":13108413,"byte_end":13108489,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ ready.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":13108490,"byte_end":13108500,"line_start":20,"line_end":20,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":13108501,"byte_end":13108504,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":13108505,"byte_end":13108519,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":13108520,"byte_end":13108523,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":13108524,"byte_end":13108540,"line_start":24,"line_end":24,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":13108541,"byte_end":13108544,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":13108545,"byte_end":13108552,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":13108553,"byte_end":13108594,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":13108595,"byte_end":13108598,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":13108599,"byte_end":13108617,"line_start":29,"line_end":29,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":13108618,"byte_end":13108639,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/     let mut none = stream::empty::<i32>();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":13108640,"byte_end":13108686,"line_start":31,"line_end":31,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":13108687,"byte_end":13108690,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(None, none.next().await);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":13108691,"byte_end":13108735,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":13108736,"byte_end":13108741,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":13108742,"byte_end":13108749,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":11132},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/filter.rs","byte_start":13109351,"byte_end":13109357,"line_start":11,"line_end":11,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":11135},{"krate":0,"index":11136}],"decl_id":null,"docs":" Stream returned by the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.12/src/lib.rs","byte_start":12429821,"byte_end":12429830,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11087},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/filter_map.rs","byte_start":13110789,"byte_end":13110798,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":11090},{"krate":0,"index":11091}],"decl_id":null,"docs":" Stream returned by the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.12/src/lib.rs","byte_start":12429821,"byte_end":12429830,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11038},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/fold.rs","byte_start":13112215,"byte_end":13112225,"line_start":11,"line_end":11,"column_start":16,"column_end":26},"name":"FoldFuture","qualname":"::stream::fold::FoldFuture","value":"FoldFuture {  }","parent":null,"children":[{"krate":0,"index":11042},{"krate":0,"index":11043},{"krate":0,"index":11044}],"decl_id":null,"docs":" Future returned by the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10998},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/fuse.rs","byte_start":13113381,"byte_end":13113385,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":11000}],"decl_id":null,"docs":" Stream returned by [`fuse()`][super::StreamExt::fuse].\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7627},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":13114517,"byte_end":13114521,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":7629}],"decl_id":null,"docs":" Stream for the [`iter`](fn@iter) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`](fn@iter) function.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":13114393,"byte_end":13114439,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":13114457,"byte_end":13114505,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":7117},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":13115095,"byte_end":13115099,"line_start":32,"line_end":32,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"pub fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":13114573,"byte_end":13114637,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":13114638,"byte_end":13114666,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":13114667,"byte_end":13114670,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":13114671,"byte_end":13114744,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":13114745,"byte_end":13114800,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":13114801,"byte_end":13114804,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":13114805,"byte_end":13114812,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":13114813,"byte_end":13114835,"line_start":22,"line_end":22,"column_start":1,"column_end":23}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":13114836,"byte_end":13114877,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":13114878,"byte_end":13114881,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut stream = stream::iter(vec![17, 19]);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":13114882,"byte_end":13114930,"line_start":25,"line_end":25,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":13114931,"byte_end":13114934,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(stream.next().await, Some(17));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":13114935,"byte_end":13114981,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(stream.next().await, Some(19));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":13114982,"byte_end":13115028,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":13115029,"byte_end":13115071,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":13115072,"byte_end":13115079,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":13115080,"byte_end":13115087,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10944},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/map.rs","byte_start":13115879,"byte_end":13115882,"line_start":11,"line_end":11,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":10947},{"krate":0,"index":10948}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.12/src/lib.rs","byte_start":12429821,"byte_end":12429830,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10895},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/merge.rs","byte_start":13116952,"byte_end":13116957,"line_start":9,"line_end":9,"column_start":16,"column_end":21},"name":"Merge","qualname":"::stream::merge::Merge","value":"Merge {  }","parent":null,"children":[{"krate":0,"index":10898},{"krate":0,"index":10899},{"krate":0,"index":10900}],"decl_id":null,"docs":" Stream returned by the [`merge`](super::StreamExt::merge) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7633},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/next.rs","byte_start":13118832,"byte_end":13118836,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":7636}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/next.rs","byte_start":13118676,"byte_end":13118735,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/next.rs","byte_start":13118753,"byte_end":13118820,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7641},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":13119532,"byte_end":13119536,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":7643}],"decl_id":null,"docs":" Stream for the [`once`](fn@once) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`once`](fn@once) function.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":13119408,"byte_end":13119454,"line_start":7,"line_end":7,"column_start":1,"column_end":47}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":13119472,"byte_end":13119520,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":7265},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":13120108,"byte_end":13120112,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<T>(T) -> Once<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that emits an element exactly once.","sig":null,"attributes":[{"value":"/ Creates a stream that emits an element exactly once.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":13119612,"byte_end":13119668,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":13119669,"byte_end":13119672,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is immediately ready and emits the provided value once.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":13119673,"byte_end":13119752,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":13119753,"byte_end":13119756,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":13119757,"byte_end":13119771,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":13119772,"byte_end":13119775,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":13119776,"byte_end":13119783,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":13119784,"byte_end":13119825,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":13119826,"byte_end":13119829,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":13119830,"byte_end":13119848,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":13119849,"byte_end":13119870,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     // one is the loneliest number","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":13119871,"byte_end":13119909,"line_start":27,"line_end":27,"column_start":1,"column_end":39}},{"value":"/     let mut one = stream::once(1);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":13119910,"byte_end":13119948,"line_start":28,"line_end":28,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":13119949,"byte_end":13119952,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(Some(1), one.next().await);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":13119953,"byte_end":13119999,"line_start":30,"line_end":30,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":13120000,"byte_end":13120003,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     // just one, that's all we get","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":13120004,"byte_end":13120042,"line_start":32,"line_end":32,"column_start":1,"column_end":39}},{"value":"/     assert_eq!(None, one.next().await);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":13120043,"byte_end":13120086,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":13120087,"byte_end":13120092,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":13120093,"byte_end":13120100,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7647},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":13120735,"byte_end":13120742,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream for the [`pending`](fn@pending) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending`](fn@pending) function.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":13120605,"byte_end":13120657,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":13120675,"byte_end":13120723,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":7302},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":13121482,"byte_end":13121489,"line_start":40,"line_end":40,"column_start":14,"column_end":21},"name":"pending","qualname":"::stream::pending::pending","value":"pub const fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that is never ready","sig":null,"attributes":[{"value":"/ Creates a stream that is never ready","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":13120873,"byte_end":13120913,"line_start":16,"line_end":16,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":13120914,"byte_end":13120917,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is never ready. Attempting to call","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":13120918,"byte_end":13120976,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/ [`next()`](crate::stream::StreamExt::next) will never complete. Use","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":13120977,"byte_end":13121048,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/ [`stream::empty()`](super::empty()) to obtain a stream that is is","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":13121049,"byte_end":13121118,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/ immediately empty but returns no values.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":13121119,"byte_end":13121163,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":13121164,"byte_end":13121167,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":13121168,"byte_end":13121182,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":13121183,"byte_end":13121186,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":13121187,"byte_end":13121203,"line_start":25,"line_end":25,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":13121204,"byte_end":13121207,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":13121208,"byte_end":13121221,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":13121222,"byte_end":13121263,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":13121264,"byte_end":13121267,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":13121268,"byte_end":13121286,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":13121287,"byte_end":13121308,"line_start":31,"line_end":31,"column_start":1,"column_end":22}},{"value":"/     let mut never = stream::pending::<i32>();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":13121309,"byte_end":13121358,"line_start":32,"line_end":32,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":13121359,"byte_end":13121362,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/     // This will never complete","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":13121363,"byte_end":13121398,"line_start":34,"line_end":34,"column_start":1,"column_end":36}},{"value":"/     never.next().await;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":13121399,"byte_end":13121426,"line_start":35,"line_end":35,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":13121427,"byte_end":13121430,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     unreachable!();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":13121431,"byte_end":13121454,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":13121455,"byte_end":13121460,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":13121461,"byte_end":13121468,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7654},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13127138,"byte_end":13127147,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"StreamMap","qualname":"::stream::stream_map::StreamMap","value":"StreamMap {  }","parent":null,"children":[{"krate":0,"index":7657}],"decl_id":null,"docs":" Combine many streams into one, indexing each source stream with a unique\n key.","sig":null,"attributes":[{"value":"/ Combine many streams into one, indexing each source stream with a unique","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13121906,"byte_end":13121982,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ key.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13121983,"byte_end":13121991,"line_start":9,"line_end":9,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13121992,"byte_end":13121995,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` is similar to [`StreamExt::merge`] in that it combines source","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13121996,"byte_end":13122073,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ streams into a single merged stream that yields values in the order that","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13122074,"byte_end":13122150,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ they arrive from the source streams. However, `StreamMap` has a lot more","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13122151,"byte_end":13122227,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ flexibility in usage patterns.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13122228,"byte_end":13122262,"line_start":14,"line_end":14,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13122263,"byte_end":13122266,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` can:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13122267,"byte_end":13122287,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13122288,"byte_end":13122291,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * Merge an arbitrary number of streams.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13122292,"byte_end":13122335,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ * Track which source stream the value was received from.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13122336,"byte_end":13122396,"line_start":19,"line_end":19,"column_start":1,"column_end":61}},{"value":"/ * Handle inserting and removing streams from the set of managed streams at","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13122397,"byte_end":13122475,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/   any point during iteration.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13122476,"byte_end":13122509,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13122510,"byte_end":13122513,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ All source streams held by `StreamMap` are indexed using a key. This key is","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13122514,"byte_end":13122593,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ included with the value when a source stream yields a value. The key is also","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13122594,"byte_end":13122674,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ used to remove the stream from the `StreamMap` before the stream has","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13122675,"byte_end":13122747,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ completed streaming.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13122748,"byte_end":13122772,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13122773,"byte_end":13122776,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # `Unpin`","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13122777,"byte_end":13122790,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13122791,"byte_end":13122794,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Because the `StreamMap` API moves streams during runtime, both streams and","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13122795,"byte_end":13122873,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ keys must be `Unpin`. In order to insert a `!Unpin` stream into a","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13122874,"byte_end":13122943,"line_start":31,"line_end":31,"column_start":1,"column_end":70}},{"value":"/ `StreamMap`, use [`pin!`] to pin the stream to the stack or [`Box::pin`] to","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13122944,"byte_end":13123023,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ pin the stream in the heap.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13123024,"byte_end":13123055,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13123056,"byte_end":13123059,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13123060,"byte_end":13123080,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13123081,"byte_end":13123084,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` is backed by a `Vec<(K, V)>`. There is no guarantee that this","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13123085,"byte_end":13123162,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ internal implementation detail will persist in future versions, but it is","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13123163,"byte_end":13123240,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ important to know the runtime implications. In general, `StreamMap` works","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13123241,"byte_end":13123318,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ best with a \"smallish\" number of streams as all entries are scanned on","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13123319,"byte_end":13123393,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/ insert, remove, and polling. In cases where a large number of streams need","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13123394,"byte_end":13123472,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ to be merged, it may be advisable to use tasks sending values on a shared","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13123473,"byte_end":13123550,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ [`mpsc`] channel.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13123551,"byte_end":13123572,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13123573,"byte_end":13123576,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [`StreamExt::merge`]: crate::stream::StreamExt::merge","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13123577,"byte_end":13123634,"line_start":45,"line_end":45,"column_start":1,"column_end":58}},{"value":"/ [`mpsc`]: crate::sync::mpsc","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13123635,"byte_end":13123666,"line_start":46,"line_end":46,"column_start":1,"column_end":32}},{"value":"/ [`pin!`]: macro@pin","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13123667,"byte_end":13123690,"line_start":47,"line_end":47,"column_start":1,"column_end":24}},{"value":"/ [`Box::pin`]: std::boxed::Box::pin","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13123691,"byte_end":13123729,"line_start":48,"line_end":48,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13123730,"byte_end":13123733,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13123734,"byte_end":13123748,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13123749,"byte_end":13123752,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Merging two streams, then remove them after receiving the first value","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13123753,"byte_end":13123826,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13123827,"byte_end":13123830,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13123831,"byte_end":13123838,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{StreamExt, StreamMap};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13123839,"byte_end":13123885,"line_start":55,"line_end":55,"column_start":1,"column_end":47}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13123886,"byte_end":13123912,"line_start":56,"line_end":56,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13123913,"byte_end":13123916,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13123917,"byte_end":13123935,"line_start":58,"line_end":58,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13123936,"byte_end":13123957,"line_start":59,"line_end":59,"column_start":1,"column_end":22}},{"value":"/     let (mut tx1, rx1) = mpsc::channel(10);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13123958,"byte_end":13124005,"line_start":60,"line_end":60,"column_start":1,"column_end":48}},{"value":"/     let (mut tx2, rx2) = mpsc::channel(10);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13124006,"byte_end":13124053,"line_start":61,"line_end":61,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13124054,"byte_end":13124057,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13124058,"byte_end":13124091,"line_start":63,"line_end":63,"column_start":1,"column_end":34}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13124092,"byte_end":13124131,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13124132,"byte_end":13124135,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/         // This value will never be received. The send may or may not return","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13124136,"byte_end":13124216,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/         // `Err` depending on if the remote end closed first or not.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13124217,"byte_end":13124289,"line_start":67,"line_end":67,"column_start":1,"column_end":73}},{"value":"/         let _ = tx1.send(2).await;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13124290,"byte_end":13124328,"line_start":68,"line_end":68,"column_start":1,"column_end":39}},{"value":"/     });","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13124329,"byte_end":13124340,"line_start":69,"line_end":69,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13124341,"byte_end":13124344,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13124345,"byte_end":13124378,"line_start":71,"line_end":71,"column_start":1,"column_end":34}},{"value":"/         tx2.send(3).await.unwrap();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13124379,"byte_end":13124418,"line_start":72,"line_end":72,"column_start":1,"column_end":40}},{"value":"/         let _ = tx2.send(4).await;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13124419,"byte_end":13124457,"line_start":73,"line_end":73,"column_start":1,"column_end":39}},{"value":"/     });","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13124458,"byte_end":13124469,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13124470,"byte_end":13124473,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/     let mut map = StreamMap::new();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13124474,"byte_end":13124513,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13124514,"byte_end":13124517,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/     // Insert both streams","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13124518,"byte_end":13124548,"line_start":78,"line_end":78,"column_start":1,"column_end":31}},{"value":"/     map.insert(\"one\", rx1);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13124549,"byte_end":13124580,"line_start":79,"line_end":79,"column_start":1,"column_end":32}},{"value":"/     map.insert(\"two\", rx2);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13124581,"byte_end":13124612,"line_start":80,"line_end":80,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13124613,"byte_end":13124616,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     // Read twice","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13124617,"byte_end":13124638,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/     for _ in 0..2 {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13124639,"byte_end":13124662,"line_start":83,"line_end":83,"column_start":1,"column_end":24}},{"value":"/         let (key, val) = map.next().await.unwrap();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13124663,"byte_end":13124718,"line_start":84,"line_end":84,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13124719,"byte_end":13124722,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/         if key == \"one\" {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13124723,"byte_end":13124752,"line_start":86,"line_end":86,"column_start":1,"column_end":30}},{"value":"/             assert_eq!(val, 1);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13124753,"byte_end":13124788,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/         } else {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13124789,"byte_end":13124809,"line_start":88,"line_end":88,"column_start":1,"column_end":21}},{"value":"/             assert_eq!(val, 3);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13124810,"byte_end":13124845,"line_start":89,"line_end":89,"column_start":1,"column_end":36}},{"value":"/         }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13124846,"byte_end":13124859,"line_start":90,"line_end":90,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13124860,"byte_end":13124863,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/         // Remove the stream to prevent reading the next value","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13124864,"byte_end":13124930,"line_start":92,"line_end":92,"column_start":1,"column_end":67}},{"value":"/         map.remove(key);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13124931,"byte_end":13124959,"line_start":93,"line_end":93,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13124960,"byte_end":13124969,"line_start":94,"line_end":94,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13124970,"byte_end":13124975,"line_start":95,"line_end":95,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13124976,"byte_end":13124983,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13124984,"byte_end":13124987,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ This example models a read-only client to a chat system with channels. The","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13124988,"byte_end":13125066,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/ client sends commands to join and leave channels. `StreamMap` is used to","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13125067,"byte_end":13125143,"line_start":99,"line_end":99,"column_start":1,"column_end":77}},{"value":"/ manage active channel subscriptions.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13125144,"byte_end":13125184,"line_start":100,"line_end":100,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13125185,"byte_end":13125188,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ For simplicity, messages are displayed with `println!`, but they could be","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13125189,"byte_end":13125266,"line_start":102,"line_end":102,"column_start":1,"column_end":78}},{"value":"/ sent to the client over a socket.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13125267,"byte_end":13125304,"line_start":103,"line_end":103,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13125305,"byte_end":13125308,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13125309,"byte_end":13125322,"line_start":105,"line_end":105,"column_start":1,"column_end":14}},{"value":"/ use tokio::stream::{Stream, StreamExt, StreamMap};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13125323,"byte_end":13125377,"line_start":106,"line_end":106,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13125378,"byte_end":13125381,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ enum Command {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13125382,"byte_end":13125400,"line_start":108,"line_end":108,"column_start":1,"column_end":19}},{"value":"/     Join(String),","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13125401,"byte_end":13125422,"line_start":109,"line_end":109,"column_start":1,"column_end":22}},{"value":"/     Leave(String),","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13125423,"byte_end":13125445,"line_start":110,"line_end":110,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13125446,"byte_end":13125451,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13125452,"byte_end":13125455,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ fn commands() -> impl Stream<Item = Command> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13125456,"byte_end":13125506,"line_start":113,"line_end":113,"column_start":1,"column_end":51}},{"value":"/     // Streams in user commands by parsing `stdin`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13125507,"byte_end":13125562,"line_start":114,"line_end":114,"column_start":1,"column_end":56}},{"value":"/ # tokio::stream::pending()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13125563,"byte_end":13125593,"line_start":115,"line_end":115,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13125594,"byte_end":13125599,"line_start":116,"line_end":116,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13125600,"byte_end":13125603,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ // Join a channel, returns a stream of messages received on the channel.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13125604,"byte_end":13125680,"line_start":118,"line_end":118,"column_start":1,"column_end":77}},{"value":"/ fn join(channel: &str) -> impl Stream<Item = String> + Unpin {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13125681,"byte_end":13125747,"line_start":119,"line_end":119,"column_start":1,"column_end":67}},{"value":"/     // left as an exercise to the reader","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13125748,"byte_end":13125792,"line_start":120,"line_end":120,"column_start":1,"column_end":45}},{"value":"/ # tokio::stream::pending()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13125793,"byte_end":13125823,"line_start":121,"line_end":121,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13125824,"byte_end":13125829,"line_start":122,"line_end":122,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13125830,"byte_end":13125833,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13125834,"byte_end":13125852,"line_start":124,"line_end":124,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13125853,"byte_end":13125874,"line_start":125,"line_end":125,"column_start":1,"column_end":22}},{"value":"/     let mut channels = StreamMap::new();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13125875,"byte_end":13125919,"line_start":126,"line_end":126,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13125920,"byte_end":13125923,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/     // Input commands (join / leave channels).","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13125924,"byte_end":13125974,"line_start":128,"line_end":128,"column_start":1,"column_end":51}},{"value":"/     let cmds = commands();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13125975,"byte_end":13126005,"line_start":129,"line_end":129,"column_start":1,"column_end":31}},{"value":"/     tokio::pin!(cmds);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13126006,"byte_end":13126032,"line_start":130,"line_end":130,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13126033,"byte_end":13126036,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13126037,"byte_end":13126051,"line_start":132,"line_end":132,"column_start":1,"column_end":15}},{"value":"/         tokio::select! {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13126052,"byte_end":13126080,"line_start":133,"line_end":133,"column_start":1,"column_end":29}},{"value":"/             Some(cmd) = cmds.next() => {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13126081,"byte_end":13126125,"line_start":134,"line_end":134,"column_start":1,"column_end":45}},{"value":"/                 match cmd {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13126126,"byte_end":13126157,"line_start":135,"line_end":135,"column_start":1,"column_end":32}},{"value":"/                     Command::Join(chan) => {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13126158,"byte_end":13126206,"line_start":136,"line_end":136,"column_start":1,"column_end":49}},{"value":"/                         // Join the channel and add it to the `channels`","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13126207,"byte_end":13126283,"line_start":137,"line_end":137,"column_start":1,"column_end":77}},{"value":"/                         // stream map","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13126284,"byte_end":13126325,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/                         let msgs = join(&chan);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13126326,"byte_end":13126377,"line_start":139,"line_end":139,"column_start":1,"column_end":52}},{"value":"/                         channels.insert(chan, msgs);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13126378,"byte_end":13126434,"line_start":140,"line_end":140,"column_start":1,"column_end":57}},{"value":"/                     }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13126435,"byte_end":13126460,"line_start":141,"line_end":141,"column_start":1,"column_end":26}},{"value":"/                     Command::Leave(chan) => {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13126461,"byte_end":13126510,"line_start":142,"line_end":142,"column_start":1,"column_end":50}},{"value":"/                         channels.remove(&chan);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13126511,"byte_end":13126562,"line_start":143,"line_end":143,"column_start":1,"column_end":52}},{"value":"/                     }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13126563,"byte_end":13126588,"line_start":144,"line_end":144,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13126589,"byte_end":13126610,"line_start":145,"line_end":145,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13126611,"byte_end":13126628,"line_start":146,"line_end":146,"column_start":1,"column_end":18}},{"value":"/             Some((chan, msg)) = channels.next() => {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13126629,"byte_end":13126685,"line_start":147,"line_end":147,"column_start":1,"column_end":57}},{"value":"/                 // Received a message, display it on stdout with the channel","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13126686,"byte_end":13126766,"line_start":148,"line_end":148,"column_start":1,"column_end":81}},{"value":"/                 // it originated from.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13126767,"byte_end":13126809,"line_start":149,"line_end":149,"column_start":1,"column_end":43}},{"value":"/                 println!(\"{}: {}\", chan, msg);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13126810,"byte_end":13126860,"line_start":150,"line_end":150,"column_start":1,"column_end":51}},{"value":"/             }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13126861,"byte_end":13126878,"line_start":151,"line_end":151,"column_start":1,"column_end":18}},{"value":"/             // Both the `commands` stream and the `channels` stream are","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13126879,"byte_end":13126954,"line_start":152,"line_end":152,"column_start":1,"column_end":76}},{"value":"/             // complete. There is no more work to do, so leave the loop.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13126955,"byte_end":13127031,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"/             else => break,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13127032,"byte_end":13127062,"line_start":154,"line_end":154,"column_start":1,"column_end":31}},{"value":"/         }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13127063,"byte_end":13127076,"line_start":155,"line_end":155,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13127077,"byte_end":13127086,"line_start":156,"line_end":156,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13127087,"byte_end":13127092,"line_start":157,"line_end":157,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13127093,"byte_end":13127100,"line_start":158,"line_end":158,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7339},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13127620,"byte_end":13127623,"line_start":178,"line_end":178,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamMap<K, V>>::new","value":"pub fn new() -> StreamMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `StreamMap`.","sig":null,"attributes":[{"value":"/ Creates an empty `StreamMap`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13127252,"byte_end":13127285,"line_start":166,"line_end":166,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13127290,"byte_end":13127293,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ The stream map is initially created with a capacity of `0`, so it will","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13127298,"byte_end":13127372,"line_start":168,"line_end":168,"column_start":5,"column_end":79}},{"value":"/ not allocate until it is first inserted into.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13127377,"byte_end":13127426,"line_start":169,"line_end":169,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13127431,"byte_end":13127434,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13127439,"byte_end":13127453,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13127458,"byte_end":13127461,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13127466,"byte_end":13127473,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13127478,"byte_end":13127522,"line_start":174,"line_end":174,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13127527,"byte_end":13127530,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<&str, Pending<()>> = StreamMap::new();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13127535,"byte_end":13127596,"line_start":176,"line_end":176,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13127601,"byte_end":13127608,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7340},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13128128,"byte_end":13128141,"line_start":194,"line_end":194,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<StreamMap<K, V>>::with_capacity","value":"pub fn with_capacity(usize) -> StreamMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `StreamMap` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates an empty `StreamMap` with the specified capacity.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13127696,"byte_end":13127757,"line_start":182,"line_end":182,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13127762,"byte_end":13127765,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The stream map will be able to hold at least `capacity` elements without","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13127770,"byte_end":13127846,"line_start":184,"line_end":184,"column_start":5,"column_end":81}},{"value":"/ reallocating. If `capacity` is 0, the stream map will not allocate.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13127851,"byte_end":13127922,"line_start":185,"line_end":185,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13127927,"byte_end":13127930,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13127935,"byte_end":13127949,"line_start":187,"line_end":187,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13127954,"byte_end":13127957,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13127962,"byte_end":13127969,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13127974,"byte_end":13128018,"line_start":190,"line_end":190,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13128023,"byte_end":13128026,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<&str, Pending<()>> = StreamMap::with_capacity(10);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13128031,"byte_end":13128104,"line_start":192,"line_end":192,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13128109,"byte_end":13128116,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7341},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13128759,"byte_end":13128763,"line_start":219,"line_end":219,"column_start":12,"column_end":16},"name":"keys","qualname":"<StreamMap<K, V>>::keys","value":"pub fn keys(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator visiting all keys in arbitrary order.","sig":null,"attributes":[{"value":"/ Returns an iterator visiting all keys in arbitrary order.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13128272,"byte_end":13128333,"line_start":200,"line_end":200,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13128338,"byte_end":13128341,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a K.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13128346,"byte_end":13128385,"line_start":202,"line_end":202,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13128390,"byte_end":13128393,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13128398,"byte_end":13128412,"line_start":204,"line_end":204,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13128417,"byte_end":13128420,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13128425,"byte_end":13128432,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13128437,"byte_end":13128481,"line_start":207,"line_end":207,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13128486,"byte_end":13128489,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13128494,"byte_end":13128529,"line_start":209,"line_end":209,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13128534,"byte_end":13128537,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13128542,"byte_end":13128580,"line_start":211,"line_end":211,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13128585,"byte_end":13128616,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13128621,"byte_end":13128652,"line_start":213,"line_end":213,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13128657,"byte_end":13128660,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ for key in map.keys() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13128665,"byte_end":13128692,"line_start":215,"line_end":215,"column_start":5,"column_end":32}},{"value":"/     println!(\"{}\", key);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13128697,"byte_end":13128725,"line_start":216,"line_end":216,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13128730,"byte_end":13128735,"line_start":217,"line_end":217,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13128740,"byte_end":13128747,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7344},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13129347,"byte_end":13129353,"line_start":242,"line_end":242,"column_start":12,"column_end":18},"name":"values","qualname":"<StreamMap<K, V>>::values","value":"pub fn values(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values in arbitrary order.","sig":null,"attributes":[{"value":"/ An iterator visiting all values in arbitrary order.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13128856,"byte_end":13128911,"line_start":223,"line_end":223,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13128916,"byte_end":13128919,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a V.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13128924,"byte_end":13128963,"line_start":225,"line_end":225,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13128968,"byte_end":13128971,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13128976,"byte_end":13128990,"line_start":227,"line_end":227,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13128995,"byte_end":13128998,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13129003,"byte_end":13129010,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13129015,"byte_end":13129059,"line_start":230,"line_end":230,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13129064,"byte_end":13129067,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13129072,"byte_end":13129107,"line_start":232,"line_end":232,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13129112,"byte_end":13129115,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13129120,"byte_end":13129158,"line_start":234,"line_end":234,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13129163,"byte_end":13129194,"line_start":235,"line_end":235,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13129199,"byte_end":13129230,"line_start":236,"line_end":236,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13129235,"byte_end":13129238,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ for stream in map.values() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13129243,"byte_end":13129275,"line_start":238,"line_end":238,"column_start":5,"column_end":37}},{"value":"/     println!(\"{:?}\", stream);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13129280,"byte_end":13129313,"line_start":239,"line_end":239,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13129318,"byte_end":13129323,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13129328,"byte_end":13129335,"line_start":241,"line_end":241,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7347},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13129953,"byte_end":13129963,"line_start":265,"line_end":265,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<StreamMap<K, V>>::values_mut","value":"pub fn values_mut(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values mutably in arbitrary order.","sig":null,"attributes":[{"value":"/ An iterator visiting all values mutably in arbitrary order.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13129446,"byte_end":13129509,"line_start":246,"line_end":246,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13129514,"byte_end":13129517,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a mut V.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13129522,"byte_end":13129565,"line_start":248,"line_end":248,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13129570,"byte_end":13129573,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13129578,"byte_end":13129592,"line_start":250,"line_end":250,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13129597,"byte_end":13129600,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13129605,"byte_end":13129612,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13129617,"byte_end":13129661,"line_start":253,"line_end":253,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13129666,"byte_end":13129669,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13129674,"byte_end":13129709,"line_start":255,"line_end":255,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13129714,"byte_end":13129717,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13129722,"byte_end":13129760,"line_start":257,"line_end":257,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13129765,"byte_end":13129796,"line_start":258,"line_end":258,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13129801,"byte_end":13129832,"line_start":259,"line_end":259,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13129837,"byte_end":13129840,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ for stream in map.values_mut() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13129845,"byte_end":13129881,"line_start":261,"line_end":261,"column_start":5,"column_end":41}},{"value":"/     println!(\"{:?}\", stream);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13129886,"byte_end":13129919,"line_start":262,"line_end":262,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13129924,"byte_end":13129929,"line_start":263,"line_end":263,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13129934,"byte_end":13129941,"line_start":264,"line_end":264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7350},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13130541,"byte_end":13130549,"line_start":282,"line_end":282,"column_start":12,"column_end":20},"name":"capacity","qualname":"<StreamMap<K, V>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams the map can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of streams the map can hold without reallocating.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13130068,"byte_end":13130140,"line_start":269,"line_end":269,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13130145,"byte_end":13130148,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ This number is a lower bound; the `StreamMap` might be able to hold","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13130153,"byte_end":13130224,"line_start":271,"line_end":271,"column_start":5,"column_end":76}},{"value":"/ more, but is guaranteed to be able to hold at least this many.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13130229,"byte_end":13130295,"line_start":272,"line_end":272,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13130300,"byte_end":13130303,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13130308,"byte_end":13130322,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13130327,"byte_end":13130330,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13130335,"byte_end":13130342,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13130347,"byte_end":13130391,"line_start":277,"line_end":277,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13130396,"byte_end":13130399,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<i32, Pending<()>> = StreamMap::with_capacity(100);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13130404,"byte_end":13130477,"line_start":279,"line_end":279,"column_start":5,"column_end":78}},{"value":"/ assert!(map.capacity() >= 100);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13130482,"byte_end":13130517,"line_start":280,"line_end":280,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13130522,"byte_end":13130529,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7351},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13130925,"byte_end":13130928,"line_start":298,"line_end":298,"column_start":12,"column_end":15},"name":"len","qualname":"<StreamMap<K, V>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams in the map.","sig":null,"attributes":[{"value":"/ Returns the number of streams in the map.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13130611,"byte_end":13130656,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13130661,"byte_end":13130664,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13130669,"byte_end":13130683,"line_start":288,"line_end":288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13130688,"byte_end":13130691,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13130696,"byte_end":13130703,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13130708,"byte_end":13130752,"line_start":291,"line_end":291,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13130757,"byte_end":13130760,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let mut a = StreamMap::new();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13130765,"byte_end":13130798,"line_start":293,"line_end":293,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(a.len(), 0);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13130803,"byte_end":13130830,"line_start":294,"line_end":294,"column_start":5,"column_end":32}},{"value":"/ a.insert(1, pending::<i32>());","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13130835,"byte_end":13130869,"line_start":295,"line_end":295,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(a.len(), 1);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13130874,"byte_end":13130901,"line_start":296,"line_end":296,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13130906,"byte_end":13130913,"line_start":297,"line_end":297,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7352},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13131279,"byte_end":13131287,"line_start":314,"line_end":314,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<StreamMap<K, V>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains no elements.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13130985,"byte_end":13131036,"line_start":302,"line_end":302,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13131041,"byte_end":13131044,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13131049,"byte_end":13131063,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13131068,"byte_end":13131071,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13131076,"byte_end":13131083,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13131088,"byte_end":13131122,"line_start":307,"line_end":307,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13131127,"byte_end":13131130,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13131135,"byte_end":13131166,"line_start":309,"line_end":309,"column_start":5,"column_end":36}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13131171,"byte_end":13131197,"line_start":310,"line_end":310,"column_start":5,"column_end":31}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13131202,"byte_end":13131223,"line_start":311,"line_end":311,"column_start":5,"column_end":26}},{"value":"/ assert!(!a.is_empty());","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13131228,"byte_end":13131255,"line_start":312,"line_end":312,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13131260,"byte_end":13131267,"line_start":313,"line_end":313,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7353},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13131699,"byte_end":13131704,"line_start":331,"line_end":331,"column_start":12,"column_end":17},"name":"clear","qualname":"<StreamMap<K, V>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, removing all key-stream pairs. Keeps the allocated\n memory for reuse.","sig":null,"attributes":[{"value":"/ Clears the map, removing all key-stream pairs. Keeps the allocated","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13131348,"byte_end":13131418,"line_start":318,"line_end":318,"column_start":5,"column_end":75}},{"value":"/ memory for reuse.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13131423,"byte_end":13131444,"line_start":319,"line_end":319,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13131449,"byte_end":13131452,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13131457,"byte_end":13131471,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13131476,"byte_end":13131479,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13131484,"byte_end":13131491,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13131496,"byte_end":13131540,"line_start":324,"line_end":324,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13131545,"byte_end":13131548,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ let mut a = StreamMap::new();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13131553,"byte_end":13131586,"line_start":326,"line_end":326,"column_start":5,"column_end":38}},{"value":"/ a.insert(1, pending::<i32>());","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13131591,"byte_end":13131625,"line_start":327,"line_end":327,"column_start":5,"column_end":39}},{"value":"/ a.clear();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13131630,"byte_end":13131644,"line_start":328,"line_end":328,"column_start":5,"column_end":19}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13131649,"byte_end":13131675,"line_start":329,"line_end":329,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13131680,"byte_end":13131687,"line_start":330,"line_end":330,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7354},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13132379,"byte_end":13132385,"line_start":355,"line_end":355,"column_start":12,"column_end":18},"name":"insert","qualname":"<StreamMap<K, V>>::insert","value":"pub fn insert(&mut Self, K, V) -> Option<V> where K: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Insert a key-stream pair into the map.","sig":null,"attributes":[{"value":"/ Insert a key-stream pair into the map.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13131759,"byte_end":13131801,"line_start":335,"line_end":335,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13131806,"byte_end":13131809,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ If the map did not have this key present, `None` is returned.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13131814,"byte_end":13131879,"line_start":337,"line_end":337,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13131884,"byte_end":13131887,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the new `stream` replaces the old","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13131892,"byte_end":13131967,"line_start":339,"line_end":339,"column_start":5,"column_end":80}},{"value":"/ one and the old stream is returned.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13131972,"byte_end":13132011,"line_start":340,"line_end":340,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13132016,"byte_end":13132019,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13132024,"byte_end":13132038,"line_start":342,"line_end":342,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13132043,"byte_end":13132046,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13132051,"byte_end":13132058,"line_start":344,"line_end":344,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13132063,"byte_end":13132107,"line_start":345,"line_end":345,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13132112,"byte_end":13132115,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13132120,"byte_end":13132155,"line_start":347,"line_end":347,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13132160,"byte_end":13132163,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ assert!(map.insert(37, pending::<i32>()).is_none());","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13132168,"byte_end":13132224,"line_start":349,"line_end":349,"column_start":5,"column_end":61}},{"value":"/ assert!(!map.is_empty());","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13132229,"byte_end":13132258,"line_start":350,"line_end":350,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13132263,"byte_end":13132266,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ map.insert(37, pending());","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13132271,"byte_end":13132301,"line_start":352,"line_end":352,"column_start":5,"column_end":35}},{"value":"/ assert!(map.insert(37, pending()).is_some());","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13132306,"byte_end":13132355,"line_start":353,"line_end":353,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13132360,"byte_end":13132367,"line_start":354,"line_end":354,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7355},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13133116,"byte_end":13133122,"line_start":380,"line_end":380,"column_start":12,"column_end":18},"name":"remove","qualname":"<StreamMap<K, V>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the stream at the key if the key was previously in the map.","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the stream at the key if the key was previously in the map.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13132564,"byte_end":13132665,"line_start":365,"line_end":365,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13132670,"byte_end":13132673,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13132678,"byte_end":13132752,"line_start":367,"line_end":367,"column_start":5,"column_end":79}},{"value":"/ `Eq` on the borrowed form must match those for the key type.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13132757,"byte_end":13132821,"line_start":368,"line_end":368,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13132826,"byte_end":13132829,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13132834,"byte_end":13132848,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13132853,"byte_end":13132856,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13132861,"byte_end":13132868,"line_start":372,"line_end":372,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13132873,"byte_end":13132917,"line_start":373,"line_end":373,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13132922,"byte_end":13132925,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13132930,"byte_end":13132965,"line_start":375,"line_end":375,"column_start":5,"column_end":40}},{"value":"/ map.insert(1, pending::<i32>());","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13132970,"byte_end":13133006,"line_start":376,"line_end":376,"column_start":5,"column_end":41}},{"value":"/ assert!(map.remove(&1).is_some());","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13133011,"byte_end":13133049,"line_start":377,"line_end":377,"column_start":5,"column_end":43}},{"value":"/ assert!(map.remove(&1).is_none());","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13133054,"byte_end":13133092,"line_start":378,"line_end":378,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13133097,"byte_end":13133104,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7357},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13133956,"byte_end":13133968,"line_start":409,"line_end":409,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<StreamMap<K, V>>::contains_key","value":"pub fn contains_key<Q: ?Sized>(&Self, &Q) -> bool where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains a stream for the specified key.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains a stream for the specified key.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13133424,"byte_end":13133494,"line_start":394,"line_end":394,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13133499,"byte_end":13133502,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13133507,"byte_end":13133581,"line_start":396,"line_end":396,"column_start":5,"column_end":79}},{"value":"/ `Eq` on the borrowed form must match those for the key type.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13133586,"byte_end":13133650,"line_start":397,"line_end":397,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13133655,"byte_end":13133658,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13133663,"byte_end":13133677,"line_start":399,"line_end":399,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13133682,"byte_end":13133685,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13133690,"byte_end":13133697,"line_start":401,"line_end":401,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13133702,"byte_end":13133746,"line_start":402,"line_end":402,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13133751,"byte_end":13133754,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13133759,"byte_end":13133794,"line_start":404,"line_end":404,"column_start":5,"column_end":40}},{"value":"/ map.insert(1, pending::<i32>());","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13133799,"byte_end":13133835,"line_start":405,"line_end":405,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(map.contains_key(&1), true);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13133840,"byte_end":13133883,"line_start":406,"line_end":406,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(map.contains_key(&2), false);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13133888,"byte_end":13133932,"line_start":407,"line_end":407,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13133937,"byte_end":13133944,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":10858},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/skip.rs","byte_start":13136908,"byte_end":13136912,"line_start":11,"line_end":11,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":10860},{"krate":0,"index":10861}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.12/src/lib.rs","byte_start":12429821,"byte_end":12429830,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10813},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/skip_while.rs","byte_start":13138474,"byte_end":13138483,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":10816},{"krate":0,"index":10817}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.12/src/lib.rs","byte_start":12429821,"byte_end":12429830,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7666},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/try_next.rs","byte_start":13140287,"byte_end":13140294,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":7669}],"decl_id":null,"docs":" Future for the [`try_next`](super::StreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::StreamExt::try_next) method.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/try_next.rs","byte_start":13140123,"byte_end":13140190,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/try_next.rs","byte_start":13140208,"byte_end":13140275,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10776},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/take.rs","byte_start":13141143,"byte_end":13141147,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":10778},{"krate":0,"index":10779}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.12/src/lib.rs","byte_start":12429821,"byte_end":12429830,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10727},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/take_while.rs","byte_start":13142990,"byte_end":13142999,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":10730},{"krate":0,"index":10731},{"krate":0,"index":10732}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.12/src/lib.rs","byte_start":12429821,"byte_end":12429830,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10688},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/timeout.rs","byte_start":13174499,"byte_end":13174506,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::stream::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":10690},{"krate":0,"index":10691},{"krate":0,"index":10692},{"krate":0,"index":10693}],"decl_id":null,"docs":" Stream returned by the [`timeout`](super::StreamExt::timeout) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.12/src/lib.rs","byte_start":12429821,"byte_end":12429830,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":7561},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13073672,"byte_end":13073681,"line_start":81,"line_end":81,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":7562},{"krate":0,"index":7563},{"krate":0,"index":7566},{"krate":0,"index":7569},{"krate":0,"index":7571},{"krate":0,"index":7573},{"krate":0,"index":7576},{"krate":0,"index":7577},{"krate":0,"index":7578},{"krate":0,"index":7580},{"krate":0,"index":7581},{"krate":0,"index":7583},{"krate":0,"index":7585},{"krate":0,"index":7587},{"krate":0,"index":7589},{"krate":0,"index":7592},{"krate":0,"index":7594}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13073561,"byte_end":13073635,"line_start":79,"line_end":79,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13073636,"byte_end":13073661,"line_start":80,"line_end":80,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":7562},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13074751,"byte_end":13074755,"line_start":113,"line_end":113,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::StreamExt::next","value":"pub fn next(&mut Self) -> Next<, Self> where Self: Unpin","parent":{"krate":0,"index":7561},"children":[],"decl_id":null,"docs":" Consumes and returns the next value in the stream or `None` if the\n stream is finished.","sig":null,"attributes":[{"value":"/ Consumes and returns the next value in the stream or `None` if the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13073696,"byte_end":13073766,"line_start":82,"line_end":82,"column_start":5,"column_end":75}},{"value":"/ stream is finished.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13073771,"byte_end":13073794,"line_start":83,"line_end":83,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13073799,"byte_end":13073802,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13073807,"byte_end":13073825,"line_start":85,"line_end":85,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13073830,"byte_end":13073833,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13073838,"byte_end":13073851,"line_start":87,"line_end":87,"column_start":5,"column_end":18}},{"value":"/ async fn next(&mut self) -> Option<Self::Item>;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13073856,"byte_end":13073907,"line_start":88,"line_end":88,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13073912,"byte_end":13073919,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13073924,"byte_end":13073927,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13073932,"byte_end":13074000,"line_start":91,"line_end":91,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13074005,"byte_end":13074080,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13074085,"byte_end":13074160,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13074165,"byte_end":13074219,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13074224,"byte_end":13074299,"line_start":95,"line_end":95,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13074304,"byte_end":13074314,"line_start":96,"line_end":96,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13074319,"byte_end":13074322,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13074327,"byte_end":13074341,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13074346,"byte_end":13074349,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13074354,"byte_end":13074361,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13074366,"byte_end":13074386,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13074391,"byte_end":13074414,"line_start":102,"line_end":102,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13074419,"byte_end":13074460,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13074465,"byte_end":13074468,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13074473,"byte_end":13074514,"line_start":105,"line_end":105,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13074519,"byte_end":13074522,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13074527,"byte_end":13074572,"line_start":107,"line_end":107,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13074577,"byte_end":13074622,"line_start":108,"line_end":108,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13074627,"byte_end":13074672,"line_start":109,"line_end":109,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13074677,"byte_end":13074719,"line_start":110,"line_end":110,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13074724,"byte_end":13074731,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13074736,"byte_end":13074743,"line_start":112,"line_end":112,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7563},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13075826,"byte_end":13075834,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::StreamExt::try_next","value":"pub fn try_next<T, E>(&mut Self) -> TryNext<, Self> where Self: Stream<Item =\nResult<T, E>> + Unpin","parent":{"krate":0,"index":7561},"children":[],"decl_id":null,"docs":" Consumes and returns the next item in the stream. If an error is\n encountered before the next item, the error is returned instead.","sig":null,"attributes":[{"value":"/ Consumes and returns the next item in the stream. If an error is","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13074857,"byte_end":13074925,"line_start":120,"line_end":120,"column_start":5,"column_end":73}},{"value":"/ encountered before the next item, the error is returned instead.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13074930,"byte_end":13074998,"line_start":121,"line_end":121,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13075003,"byte_end":13075006,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13075011,"byte_end":13075029,"line_start":123,"line_end":123,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13075034,"byte_end":13075037,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13075042,"byte_end":13075055,"line_start":125,"line_end":125,"column_start":5,"column_end":18}},{"value":"/ async fn try_next(&mut self) -> Result<Option<T>, E>;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13075060,"byte_end":13075117,"line_start":126,"line_end":126,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13075122,"byte_end":13075129,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13075134,"byte_end":13075137,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`](StreamExt::next) combinator,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13075142,"byte_end":13075206,"line_start":129,"line_end":129,"column_start":5,"column_end":69}},{"value":"/ but returns a [`Result<Option<T>, E>`](Result) rather than","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13075211,"byte_end":13075273,"line_start":130,"line_end":130,"column_start":5,"column_end":67}},{"value":"/ an [`Option<Result<T, E>>`](Option), making for easy use","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13075278,"byte_end":13075338,"line_start":131,"line_end":131,"column_start":5,"column_end":65}},{"value":"/ with the [`?`](std::ops::Try) operator.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13075343,"byte_end":13075386,"line_start":132,"line_end":132,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13075391,"byte_end":13075394,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13075399,"byte_end":13075413,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13075418,"byte_end":13075421,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13075426,"byte_end":13075433,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13075438,"byte_end":13075458,"line_start":137,"line_end":137,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13075463,"byte_end":13075486,"line_start":138,"line_end":138,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13075491,"byte_end":13075532,"line_start":139,"line_end":139,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13075537,"byte_end":13075540,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(1), Ok(2), Err(\"nope\")]);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13075545,"byte_end":13075612,"line_start":141,"line_end":141,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13075617,"byte_end":13075620,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13075625,"byte_end":13075678,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(2)));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13075683,"byte_end":13075736,"line_start":144,"line_end":144,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(\"nope\"));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13075741,"byte_end":13075794,"line_start":145,"line_end":145,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13075799,"byte_end":13075806,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13075811,"byte_end":13075818,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7566},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13076902,"byte_end":13076905,"line_start":181,"line_end":181,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::StreamExt::map","value":"pub fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":7561},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13075978,"byte_end":13076053,"line_start":155,"line_end":155,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13076058,"byte_end":13076081,"line_start":156,"line_end":156,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13076086,"byte_end":13076089,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13076094,"byte_end":13076166,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13076171,"byte_end":13076235,"line_start":159,"line_end":159,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13076240,"byte_end":13076277,"line_start":160,"line_end":160,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13076282,"byte_end":13076285,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13076290,"byte_end":13076366,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13076371,"byte_end":13076442,"line_start":163,"line_end":163,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13076447,"byte_end":13076468,"line_start":164,"line_end":164,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13076473,"byte_end":13076476,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13076481,"byte_end":13076495,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13076500,"byte_end":13076503,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13076508,"byte_end":13076515,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13076520,"byte_end":13076540,"line_start":169,"line_end":169,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13076545,"byte_end":13076568,"line_start":170,"line_end":170,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13076573,"byte_end":13076614,"line_start":171,"line_end":171,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13076619,"byte_end":13076622,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13076627,"byte_end":13076664,"line_start":173,"line_end":173,"column_start":5,"column_end":42}},{"value":"/ let mut stream = stream.map(|x| x + 3);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13076669,"byte_end":13076712,"line_start":174,"line_end":174,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13076717,"byte_end":13076720,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(4));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13076725,"byte_end":13076770,"line_start":176,"line_end":176,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(5));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13076775,"byte_end":13076820,"line_start":177,"line_end":177,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(6));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13076825,"byte_end":13076870,"line_start":178,"line_end":178,"column_start":5,"column_end":50}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13076875,"byte_end":13076882,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13076887,"byte_end":13076894,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7569},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13079515,"byte_end":13079520,"line_start":259,"line_end":259,"column_start":8,"column_end":13},"name":"merge","qualname":"::stream::StreamExt::merge","value":"pub fn merge<U>(Self, U) -> Merge<Self, U> where U: Stream<Item = Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":7561},"children":[],"decl_id":null,"docs":" Combine two streams into one by interleaving the output of both as it\n is produced.","sig":null,"attributes":[{"value":"/ Combine two streams into one by interleaving the output of both as it","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13077049,"byte_end":13077122,"line_start":189,"line_end":189,"column_start":5,"column_end":78}},{"value":"/ is produced.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13077127,"byte_end":13077143,"line_start":190,"line_end":190,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13077148,"byte_end":13077151,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Values are produced from the merged stream in the order they arrive from","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13077156,"byte_end":13077232,"line_start":192,"line_end":192,"column_start":5,"column_end":81}},{"value":"/ the two source streams. If both source streams provide values","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13077237,"byte_end":13077302,"line_start":193,"line_end":193,"column_start":5,"column_end":70}},{"value":"/ simultaneously, the merge stream alternates between them. This provides","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13077307,"byte_end":13077382,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/ some level of fairness. You should not chain calls to `merge`, as this","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13077387,"byte_end":13077461,"line_start":195,"line_end":195,"column_start":5,"column_end":79}},{"value":"/ will break the fairness of the merging.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13077466,"byte_end":13077509,"line_start":196,"line_end":196,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13077514,"byte_end":13077517,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ The merged stream completes once **both** source streams complete. When","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13077522,"byte_end":13077597,"line_start":198,"line_end":198,"column_start":5,"column_end":80}},{"value":"/ one source stream completes before the other, the merge stream","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13077602,"byte_end":13077668,"line_start":199,"line_end":199,"column_start":5,"column_end":71}},{"value":"/ exclusively polls the remaining stream.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13077673,"byte_end":13077716,"line_start":200,"line_end":200,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13077721,"byte_end":13077724,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ For merging multiple streams, consider using [`StreamMap`] instead.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13077729,"byte_end":13077800,"line_start":202,"line_end":202,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13077805,"byte_end":13077808,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ [`StreamMap`]: crate::stream::StreamMap","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13077813,"byte_end":13077856,"line_start":204,"line_end":204,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13077861,"byte_end":13077864,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13077869,"byte_end":13077883,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13077888,"byte_end":13077891,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13077896,"byte_end":13077903,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13077908,"byte_end":13077941,"line_start":209,"line_end":209,"column_start":5,"column_end":38}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13077946,"byte_end":13077972,"line_start":210,"line_end":210,"column_start":5,"column_end":31}},{"value":"/ use tokio::time;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13077977,"byte_end":13077997,"line_start":211,"line_end":211,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13078002,"byte_end":13078005,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13078010,"byte_end":13078038,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13078043,"byte_end":13078046,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # /*","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13078051,"byte_end":13078059,"line_start":215,"line_end":215,"column_start":5,"column_end":13}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13078064,"byte_end":13078082,"line_start":216,"line_end":216,"column_start":5,"column_end":23}},{"value":"/ # */","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13078087,"byte_end":13078095,"line_start":217,"line_end":217,"column_start":5,"column_end":13}},{"value":"/ # #[tokio::main(basic_scheduler)]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13078100,"byte_end":13078137,"line_start":218,"line_end":218,"column_start":5,"column_end":42}},{"value":"/ async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13078142,"byte_end":13078163,"line_start":219,"line_end":219,"column_start":5,"column_end":26}},{"value":"/ # time::pause();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13078168,"byte_end":13078188,"line_start":220,"line_end":220,"column_start":5,"column_end":25}},{"value":"/     let (mut tx1, rx1) = mpsc::channel(10);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13078193,"byte_end":13078240,"line_start":221,"line_end":221,"column_start":5,"column_end":52}},{"value":"/     let (mut tx2, rx2) = mpsc::channel(10);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13078245,"byte_end":13078292,"line_start":222,"line_end":222,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13078297,"byte_end":13078300,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/     let mut rx = rx1.merge(rx2);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13078305,"byte_end":13078341,"line_start":224,"line_end":224,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13078346,"byte_end":13078349,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13078354,"byte_end":13078387,"line_start":226,"line_end":226,"column_start":5,"column_end":38}},{"value":"/         // Send some values immediately","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13078392,"byte_end":13078435,"line_start":227,"line_end":227,"column_start":5,"column_end":48}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13078440,"byte_end":13078479,"line_start":228,"line_end":228,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13078484,"byte_end":13078523,"line_start":229,"line_end":229,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13078528,"byte_end":13078531,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/         // Let the other task send values","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13078536,"byte_end":13078581,"line_start":231,"line_end":231,"column_start":5,"column_end":50}},{"value":"/         time::delay_for(Duration::from_millis(20)).await;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13078586,"byte_end":13078647,"line_start":232,"line_end":232,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13078652,"byte_end":13078655,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/         tx1.send(4).await.unwrap();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13078660,"byte_end":13078699,"line_start":234,"line_end":234,"column_start":5,"column_end":44}},{"value":"/     });","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13078704,"byte_end":13078715,"line_start":235,"line_end":235,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13078720,"byte_end":13078723,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13078728,"byte_end":13078761,"line_start":237,"line_end":237,"column_start":5,"column_end":38}},{"value":"/         // Wait for the first task to send values","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13078766,"byte_end":13078819,"line_start":238,"line_end":238,"column_start":5,"column_end":58}},{"value":"/         time::delay_for(Duration::from_millis(5)).await;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13078824,"byte_end":13078884,"line_start":239,"line_end":239,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13078889,"byte_end":13078892,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/         tx2.send(3).await.unwrap();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13078897,"byte_end":13078936,"line_start":241,"line_end":241,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13078941,"byte_end":13078944,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/         time::delay_for(Duration::from_millis(25)).await;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13078949,"byte_end":13079010,"line_start":243,"line_end":243,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13079015,"byte_end":13079018,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/         // Send the final value","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13079023,"byte_end":13079058,"line_start":245,"line_end":245,"column_start":5,"column_end":40}},{"value":"/         tx2.send(5).await.unwrap();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13079063,"byte_end":13079102,"line_start":246,"line_end":246,"column_start":5,"column_end":44}},{"value":"/     });","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13079107,"byte_end":13079118,"line_start":247,"line_end":247,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13079123,"byte_end":13079126,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/    assert_eq!(1, rx.next().await.unwrap());","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13079131,"byte_end":13079178,"line_start":249,"line_end":249,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(2, rx.next().await.unwrap());","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13079183,"byte_end":13079230,"line_start":250,"line_end":250,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(3, rx.next().await.unwrap());","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13079235,"byte_end":13079282,"line_start":251,"line_end":251,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(4, rx.next().await.unwrap());","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13079287,"byte_end":13079334,"line_start":252,"line_end":252,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(5, rx.next().await.unwrap());","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13079339,"byte_end":13079386,"line_start":253,"line_end":253,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13079391,"byte_end":13079394,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/    // The merged stream is consumed","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13079399,"byte_end":13079438,"line_start":255,"line_end":255,"column_start":5,"column_end":44}},{"value":"/    assert!(rx.next().await.is_none());","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13079443,"byte_end":13079485,"line_start":256,"line_end":256,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13079490,"byte_end":13079495,"line_start":257,"line_end":257,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13079500,"byte_end":13079507,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7571},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13080825,"byte_end":13080831,"line_start":297,"line_end":297,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::StreamExt::filter","value":"pub fn filter<F>(Self, F) -> Filter<Self, F> where F: FnMut(&Self::Item) ->\nbool, Self: Sized","parent":{"krate":0,"index":7561},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13079676,"byte_end":13079748,"line_start":267,"line_end":267,"column_start":5,"column_end":77}},{"value":"/ predicate.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13079753,"byte_end":13079767,"line_start":268,"line_end":268,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13079772,"byte_end":13079775,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13079780,"byte_end":13079855,"line_start":270,"line_end":270,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13079860,"byte_end":13079906,"line_start":271,"line_end":271,"column_start":5,"column_end":51}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13079911,"byte_end":13079983,"line_start":272,"line_end":272,"column_start":5,"column_end":77}},{"value":"/ predicate resolves to `false`, then the value","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13079988,"byte_end":13080037,"line_start":273,"line_end":273,"column_start":5,"column_end":54}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13080042,"byte_end":13080100,"line_start":274,"line_end":274,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13080105,"byte_end":13080108,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13080113,"byte_end":13080189,"line_start":276,"line_end":276,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to [`Iterator::filter`] method in the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13080194,"byte_end":13080266,"line_start":277,"line_end":277,"column_start":5,"column_end":77}},{"value":"/ standard library.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13080271,"byte_end":13080292,"line_start":278,"line_end":278,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13080297,"byte_end":13080300,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13080305,"byte_end":13080319,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13080324,"byte_end":13080327,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13080332,"byte_end":13080339,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13080344,"byte_end":13080364,"line_start":283,"line_end":283,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13080369,"byte_end":13080392,"line_start":284,"line_end":284,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13080397,"byte_end":13080438,"line_start":285,"line_end":285,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13080443,"byte_end":13080446,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=8);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13080451,"byte_end":13080488,"line_start":287,"line_end":287,"column_start":5,"column_end":42}},{"value":"/ let mut evens = stream.filter(|x| x % 2 == 0);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13080493,"byte_end":13080543,"line_start":288,"line_end":288,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13080548,"byte_end":13080551,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(2), evens.next().await);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13080556,"byte_end":13080600,"line_start":290,"line_end":290,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(4), evens.next().await);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13080605,"byte_end":13080649,"line_start":291,"line_end":291,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(6), evens.next().await);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13080654,"byte_end":13080698,"line_start":292,"line_end":292,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(8), evens.next().await);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13080703,"byte_end":13080747,"line_start":293,"line_end":293,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(None, evens.next().await);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13080752,"byte_end":13080793,"line_start":294,"line_end":294,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13080798,"byte_end":13080805,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13080810,"byte_end":13080817,"line_start":296,"line_end":296,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7573},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13082198,"byte_end":13082208,"line_start":335,"line_end":335,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::StreamExt::filter_map","value":"pub fn filter_map<T, F>(Self, F) -> FilterMap<Self, F> where\nF: FnMut(Self::Item) -> Option<T>, Self: Sized","parent":{"krate":0,"index":7561},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13080982,"byte_end":13081057,"line_start":305,"line_end":305,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided closure.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13081062,"byte_end":13081125,"line_start":306,"line_end":306,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13081130,"byte_end":13081133,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13081138,"byte_end":13081213,"line_start":308,"line_end":308,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the predicate `f` resolves to","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13081218,"byte_end":13081270,"line_start":309,"line_end":309,"column_start":5,"column_end":57}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13081275,"byte_end":13081351,"line_start":310,"line_end":310,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`], then the value will be skipped.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13081356,"byte_end":13081416,"line_start":311,"line_end":311,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13081421,"byte_end":13081424,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13081429,"byte_end":13081505,"line_start":313,"line_end":313,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to [`Iterator::filter_map`] method in the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13081510,"byte_end":13081586,"line_start":314,"line_end":314,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13081591,"byte_end":13081612,"line_start":315,"line_end":315,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13081617,"byte_end":13081620,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13081625,"byte_end":13081639,"line_start":317,"line_end":317,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13081644,"byte_end":13081651,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13081656,"byte_end":13081676,"line_start":319,"line_end":319,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13081681,"byte_end":13081704,"line_start":320,"line_end":320,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13081709,"byte_end":13081750,"line_start":321,"line_end":321,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13081755,"byte_end":13081758,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=8);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13081763,"byte_end":13081800,"line_start":323,"line_end":323,"column_start":5,"column_end":42}},{"value":"/ let mut evens = stream.filter_map(|x| {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13081805,"byte_end":13081848,"line_start":324,"line_end":324,"column_start":5,"column_end":48}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13081853,"byte_end":13081904,"line_start":325,"line_end":325,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13081909,"byte_end":13081916,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13081921,"byte_end":13081924,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(3), evens.next().await);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13081929,"byte_end":13081973,"line_start":328,"line_end":328,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(5), evens.next().await);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13081978,"byte_end":13082022,"line_start":329,"line_end":329,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(7), evens.next().await);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13082027,"byte_end":13082071,"line_start":330,"line_end":330,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(9), evens.next().await);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13082076,"byte_end":13082120,"line_start":331,"line_end":331,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(None, evens.next().await);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13082125,"byte_end":13082166,"line_start":332,"line_end":332,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13082171,"byte_end":13082178,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13082183,"byte_end":13082190,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7576},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13084340,"byte_end":13084344,"line_start":401,"line_end":401,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":7561},"children":[],"decl_id":null,"docs":" Creates a stream which ends after the first `None`.","sig":null,"attributes":[{"value":"/ Creates a stream which ends after the first `None`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13082372,"byte_end":13082427,"line_start":343,"line_end":343,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13082432,"byte_end":13082435,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ After a stream returns `None`, behavior is undefined. Future calls to","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13082440,"byte_end":13082513,"line_start":345,"line_end":345,"column_start":5,"column_end":78}},{"value":"/ `poll_next` may or may not return `Some(T)` again or they may panic.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13082518,"byte_end":13082590,"line_start":346,"line_end":346,"column_start":5,"column_end":77}},{"value":"/ `fuse()` adapts a stream, ensuring that after `None` is given, it will","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13082595,"byte_end":13082669,"line_start":347,"line_end":347,"column_start":5,"column_end":79}},{"value":"/ return `None` forever.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13082674,"byte_end":13082700,"line_start":348,"line_end":348,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13082705,"byte_end":13082708,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13082713,"byte_end":13082727,"line_start":350,"line_end":350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13082732,"byte_end":13082735,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13082740,"byte_end":13082747,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{Stream, StreamExt};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13082752,"byte_end":13082795,"line_start":353,"line_end":353,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13082800,"byte_end":13082803,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13082808,"byte_end":13082830,"line_start":355,"line_end":355,"column_start":5,"column_end":27}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13082835,"byte_end":13082870,"line_start":356,"line_end":356,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13082875,"byte_end":13082878,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ // a stream which alternates between Some and None","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13082883,"byte_end":13082937,"line_start":358,"line_end":358,"column_start":5,"column_end":59}},{"value":"/ struct Alternate {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13082942,"byte_end":13082964,"line_start":359,"line_end":359,"column_start":5,"column_end":27}},{"value":"/     state: i32,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13082969,"byte_end":13082988,"line_start":360,"line_end":360,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13082993,"byte_end":13082998,"line_start":361,"line_end":361,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13083003,"byte_end":13083006,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ impl Stream for Alternate {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13083011,"byte_end":13083042,"line_start":363,"line_end":363,"column_start":5,"column_end":36}},{"value":"/     type Item = i32;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13083047,"byte_end":13083071,"line_start":364,"line_end":364,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13083076,"byte_end":13083079,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/     fn poll_next(mut self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<Option<i32>> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13083084,"byte_end":13083176,"line_start":366,"line_end":366,"column_start":5,"column_end":97}},{"value":"/         let val = self.state;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13083181,"byte_end":13083214,"line_start":367,"line_end":367,"column_start":5,"column_end":38}},{"value":"/         self.state = self.state + 1;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13083219,"byte_end":13083259,"line_start":368,"line_end":368,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13083264,"byte_end":13083267,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/         // if it's even, Some(i32), else None","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13083272,"byte_end":13083321,"line_start":370,"line_end":370,"column_start":5,"column_end":54}},{"value":"/         if val % 2 == 0 {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13083326,"byte_end":13083355,"line_start":371,"line_end":371,"column_start":5,"column_end":34}},{"value":"/             Poll::Ready(Some(val))","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13083360,"byte_end":13083398,"line_start":372,"line_end":372,"column_start":5,"column_end":43}},{"value":"/         } else {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13083403,"byte_end":13083423,"line_start":373,"line_end":373,"column_start":5,"column_end":25}},{"value":"/             Poll::Ready(None)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13083428,"byte_end":13083461,"line_start":374,"line_end":374,"column_start":5,"column_end":38}},{"value":"/         }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13083466,"byte_end":13083479,"line_start":375,"line_end":375,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13083484,"byte_end":13083493,"line_start":376,"line_end":376,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13083498,"byte_end":13083503,"line_start":377,"line_end":377,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13083508,"byte_end":13083511,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13083516,"byte_end":13083534,"line_start":379,"line_end":379,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13083539,"byte_end":13083560,"line_start":380,"line_end":380,"column_start":5,"column_end":26}},{"value":"/     let mut stream = Alternate { state: 0 };","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13083565,"byte_end":13083613,"line_start":381,"line_end":381,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13083618,"byte_end":13083621,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/     // the stream goes back and forth","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13083626,"byte_end":13083667,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(stream.next().await, Some(0));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13083672,"byte_end":13083721,"line_start":384,"line_end":384,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13083726,"byte_end":13083772,"line_start":385,"line_end":385,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13083777,"byte_end":13083826,"line_start":386,"line_end":386,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13083831,"byte_end":13083877,"line_start":387,"line_end":387,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13083882,"byte_end":13083885,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/     // however, once it is fused","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13083890,"byte_end":13083926,"line_start":389,"line_end":389,"column_start":5,"column_end":41}},{"value":"/     let mut stream = stream.fuse();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13083931,"byte_end":13083970,"line_start":390,"line_end":390,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13083975,"byte_end":13083978,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(stream.next().await, Some(4));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13083983,"byte_end":13084032,"line_start":392,"line_end":392,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13084037,"byte_end":13084083,"line_start":393,"line_end":393,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13084088,"byte_end":13084091,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/     // it will always return `None` after the first time.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13084096,"byte_end":13084157,"line_start":395,"line_end":395,"column_start":5,"column_end":66}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13084162,"byte_end":13084208,"line_start":396,"line_end":396,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13084213,"byte_end":13084259,"line_start":397,"line_end":397,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13084264,"byte_end":13084310,"line_start":398,"line_end":398,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13084315,"byte_end":13084320,"line_start":399,"line_end":399,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13084325,"byte_end":13084332,"line_start":400,"line_end":400,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7577},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13085080,"byte_end":13085084,"line_start":428,"line_end":428,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":7561},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13084437,"byte_end":13084508,"line_start":408,"line_end":408,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13084513,"byte_end":13084516,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13084521,"byte_end":13084594,"line_start":410,"line_end":410,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13084599,"byte_end":13084634,"line_start":411,"line_end":411,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13084639,"byte_end":13084642,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13084647,"byte_end":13084661,"line_start":413,"line_end":413,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13084666,"byte_end":13084669,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13084674,"byte_end":13084681,"line_start":415,"line_end":415,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13084686,"byte_end":13084706,"line_start":416,"line_end":416,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13084711,"byte_end":13084734,"line_start":417,"line_end":417,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13084739,"byte_end":13084780,"line_start":418,"line_end":418,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13084785,"byte_end":13084788,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).take(3);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13084793,"byte_end":13084843,"line_start":420,"line_end":420,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13084848,"byte_end":13084851,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13084856,"byte_end":13084901,"line_start":422,"line_end":422,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(2), stream.next().await);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13084906,"byte_end":13084951,"line_start":423,"line_end":423,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13084956,"byte_end":13085001,"line_start":424,"line_end":424,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13085006,"byte_end":13085048,"line_start":425,"line_end":425,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13085053,"byte_end":13085060,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13085065,"byte_end":13085072,"line_start":427,"line_end":427,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7578},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13085977,"byte_end":13085987,"line_start":457,"line_end":457,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::StreamExt::take_while","value":"pub fn take_while<F>(Self, F) -> TakeWhile<Self, F> where\nF: FnMut(&Self::Item) -> bool, Self: Sized","parent":{"krate":0,"index":7561},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided predicate","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13085190,"byte_end":13085253,"line_start":435,"line_end":435,"column_start":5,"column_end":68}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13085258,"byte_end":13085281,"line_start":436,"line_end":436,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13085286,"byte_end":13085289,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13085294,"byte_end":13085369,"line_start":438,"line_end":438,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13085374,"byte_end":13085446,"line_start":439,"line_end":439,"column_start":5,"column_end":77}},{"value":"/ returns false it will always return that the stream is done.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13085451,"byte_end":13085515,"line_start":440,"line_end":440,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13085520,"byte_end":13085523,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13085528,"byte_end":13085542,"line_start":442,"line_end":442,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13085547,"byte_end":13085550,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13085555,"byte_end":13085562,"line_start":444,"line_end":444,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13085567,"byte_end":13085587,"line_start":445,"line_end":445,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13085592,"byte_end":13085615,"line_start":446,"line_end":446,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13085620,"byte_end":13085661,"line_start":447,"line_end":447,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13085666,"byte_end":13085669,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).take_while(|x| *x <= 3);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13085674,"byte_end":13085740,"line_start":449,"line_end":449,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13085745,"byte_end":13085748,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13085753,"byte_end":13085798,"line_start":451,"line_end":451,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(2), stream.next().await);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13085803,"byte_end":13085848,"line_start":452,"line_end":452,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13085853,"byte_end":13085898,"line_start":453,"line_end":453,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13085903,"byte_end":13085945,"line_start":454,"line_end":454,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13085950,"byte_end":13085957,"line_start":455,"line_end":455,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13085962,"byte_end":13085969,"line_start":456,"line_end":456,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7580},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13086684,"byte_end":13086688,"line_start":483,"line_end":483,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":7561},"children":[],"decl_id":null,"docs":" Creates a new stream that will skip the `n` first items of the\n underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream that will skip the `n` first items of the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13086144,"byte_end":13086210,"line_start":465,"line_end":465,"column_start":5,"column_end":71}},{"value":"/ underlying stream.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13086215,"byte_end":13086237,"line_start":466,"line_end":466,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13086242,"byte_end":13086245,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13086250,"byte_end":13086264,"line_start":468,"line_end":468,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13086269,"byte_end":13086272,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13086277,"byte_end":13086284,"line_start":470,"line_end":470,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13086289,"byte_end":13086309,"line_start":471,"line_end":471,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13086314,"byte_end":13086337,"line_start":472,"line_end":472,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13086342,"byte_end":13086383,"line_start":473,"line_end":473,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13086388,"byte_end":13086391,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).skip(7);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13086396,"byte_end":13086446,"line_start":475,"line_end":475,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13086451,"byte_end":13086454,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(8), stream.next().await);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13086459,"byte_end":13086504,"line_start":477,"line_end":477,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(9), stream.next().await);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13086509,"byte_end":13086554,"line_start":478,"line_end":478,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(10), stream.next().await);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13086559,"byte_end":13086605,"line_start":479,"line_end":479,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13086610,"byte_end":13086652,"line_start":480,"line_end":480,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13086657,"byte_end":13086664,"line_start":481,"line_end":481,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13086669,"byte_end":13086676,"line_start":482,"line_end":482,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7581},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13087666,"byte_end":13087676,"line_start":513,"line_end":513,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::StreamExt::skip_while","value":"pub fn skip_while<F>(Self, F) -> SkipWhile<Self, F> where\nF: FnMut(&Self::Item) -> bool, Self: Sized","parent":{"krate":0,"index":7561},"children":[],"decl_id":null,"docs":" Skip elements from the underlying stream while the provided predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements from the underlying stream while the provided predicate","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13086794,"byte_end":13086867,"line_start":490,"line_end":490,"column_start":5,"column_end":78}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13086872,"byte_end":13086895,"line_start":491,"line_end":491,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13086900,"byte_end":13086903,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ This function, like [`Iterator::skip_while`], will ignore elemets from the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13086908,"byte_end":13086986,"line_start":493,"line_end":493,"column_start":5,"column_end":83}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13086991,"byte_end":13087063,"line_start":494,"line_end":494,"column_start":5,"column_end":77}},{"value":"/ returns false, the rest of the elements will be yielded.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13087068,"byte_end":13087128,"line_start":495,"line_end":495,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13087133,"byte_end":13087136,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ [`Iterator::skip_while`]: std::iter::Iterator::skip_while()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13087141,"byte_end":13087204,"line_start":497,"line_end":497,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13087209,"byte_end":13087212,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13087217,"byte_end":13087231,"line_start":499,"line_end":499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13087236,"byte_end":13087239,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13087244,"byte_end":13087251,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13087256,"byte_end":13087276,"line_start":502,"line_end":502,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13087281,"byte_end":13087304,"line_start":503,"line_end":503,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13087309,"byte_end":13087350,"line_start":504,"line_end":504,"column_start":5,"column_end":46}},{"value":"/ let mut stream = stream::iter(vec![1,2,3,4,1]).skip_while(|x| *x < 3);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13087355,"byte_end":13087429,"line_start":505,"line_end":505,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13087434,"byte_end":13087437,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13087442,"byte_end":13087487,"line_start":507,"line_end":507,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(4), stream.next().await);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13087492,"byte_end":13087537,"line_start":508,"line_end":508,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13087542,"byte_end":13087587,"line_start":509,"line_end":509,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13087592,"byte_end":13087634,"line_start":510,"line_end":510,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13087639,"byte_end":13087646,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13087651,"byte_end":13087658,"line_start":512,"line_end":512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7583},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13089255,"byte_end":13089258,"line_start":568,"line_end":568,"column_start":8,"column_end":11},"name":"all","qualname":"::stream::StreamExt::all","value":"pub fn all<F>(&mut Self, F) -> AllFuture<, Self, F> where Self: Unpin,\nF: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":7561},"children":[],"decl_id":null,"docs":" Tests if every element of the stream matches a predicate.","sig":null,"attributes":[{"value":"/ Tests if every element of the stream matches a predicate.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13087833,"byte_end":13087894,"line_start":521,"line_end":521,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13087899,"byte_end":13087902,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ `all()` takes a closure that returns `true` or `false`. It applies","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13087907,"byte_end":13087977,"line_start":523,"line_end":523,"column_start":5,"column_end":75}},{"value":"/ this closure to each element of the stream, and if they all return","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13087982,"byte_end":13088052,"line_start":524,"line_end":524,"column_start":5,"column_end":75}},{"value":"/ `true`, then so does `all`. If any of them return `false`, it","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13088057,"byte_end":13088122,"line_start":525,"line_end":525,"column_start":5,"column_end":70}},{"value":"/ returns `false`. An empty stream returns `true`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13088127,"byte_end":13088179,"line_start":526,"line_end":526,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13088184,"byte_end":13088187,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ `all()` is short-circuiting; in other words, it will stop processing","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13088192,"byte_end":13088264,"line_start":528,"line_end":528,"column_start":5,"column_end":77}},{"value":"/ as soon as it finds a `false`, given that no matter what else happens,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13088269,"byte_end":13088343,"line_start":529,"line_end":529,"column_start":5,"column_end":79}},{"value":"/ the result will also be `false`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13088348,"byte_end":13088384,"line_start":530,"line_end":530,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13088389,"byte_end":13088392,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ An empty stream returns `true`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13088397,"byte_end":13088432,"line_start":532,"line_end":532,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13088437,"byte_end":13088440,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13088445,"byte_end":13088459,"line_start":534,"line_end":534,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13088464,"byte_end":13088467,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13088472,"byte_end":13088488,"line_start":536,"line_end":536,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13088493,"byte_end":13088496,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13088501,"byte_end":13088508,"line_start":538,"line_end":538,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13088513,"byte_end":13088533,"line_start":539,"line_end":539,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13088538,"byte_end":13088561,"line_start":540,"line_end":540,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13088566,"byte_end":13088607,"line_start":541,"line_end":541,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13088612,"byte_end":13088615,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13088620,"byte_end":13088642,"line_start":543,"line_end":543,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13088647,"byte_end":13088650,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ assert!(stream::iter(&a).all(|&x| x > 0).await);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13088655,"byte_end":13088707,"line_start":545,"line_end":545,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13088712,"byte_end":13088715,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ assert!(!stream::iter(&a).all(|&x| x > 2).await);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13088720,"byte_end":13088773,"line_start":547,"line_end":547,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13088778,"byte_end":13088785,"line_start":548,"line_end":548,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13088790,"byte_end":13088797,"line_start":549,"line_end":549,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13088802,"byte_end":13088805,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ Stopping at the first `false`:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13088810,"byte_end":13088844,"line_start":551,"line_end":551,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13088849,"byte_end":13088852,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13088857,"byte_end":13088864,"line_start":553,"line_end":553,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13088869,"byte_end":13088889,"line_start":554,"line_end":554,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13088894,"byte_end":13088917,"line_start":555,"line_end":555,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13088922,"byte_end":13088963,"line_start":556,"line_end":556,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13088968,"byte_end":13088971,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13088976,"byte_end":13088998,"line_start":558,"line_end":558,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13089003,"byte_end":13089006,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ let mut iter = stream::iter(&a);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13089011,"byte_end":13089047,"line_start":560,"line_end":560,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13089052,"byte_end":13089055,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ assert!(!iter.all(|&x| x != 2).await);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13089060,"byte_end":13089102,"line_start":562,"line_end":562,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13089107,"byte_end":13089110,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ // we can still use `iter`, as there are more elements.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13089115,"byte_end":13089174,"line_start":564,"line_end":564,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(iter.next().await, Some(&3));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13089179,"byte_end":13089223,"line_start":565,"line_end":565,"column_start":5,"column_end":49}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13089228,"byte_end":13089235,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13089240,"byte_end":13089247,"line_start":567,"line_end":567,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7585},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13090783,"byte_end":13090786,"line_start":621,"line_end":621,"column_start":8,"column_end":11},"name":"any","qualname":"::stream::StreamExt::any","value":"pub fn any<F>(&mut Self, F) -> AnyFuture<, Self, F> where Self: Unpin,\nF: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":7561},"children":[],"decl_id":null,"docs":" Tests if any element of the stream matches a predicate.","sig":null,"attributes":[{"value":"/ Tests if any element of the stream matches a predicate.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13089423,"byte_end":13089482,"line_start":576,"line_end":576,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13089487,"byte_end":13089490,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ `any()` takes a closure that returns `true` or `false`. It applies","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13089495,"byte_end":13089565,"line_start":578,"line_end":578,"column_start":5,"column_end":75}},{"value":"/ this closure to each element of the stream, and if any of them return","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13089570,"byte_end":13089643,"line_start":579,"line_end":579,"column_start":5,"column_end":78}},{"value":"/ `true`, then so does `any()`. If they all return `false`, it","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13089648,"byte_end":13089712,"line_start":580,"line_end":580,"column_start":5,"column_end":69}},{"value":"/ returns `false`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13089717,"byte_end":13089737,"line_start":581,"line_end":581,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13089742,"byte_end":13089745,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ `any()` is short-circuiting; in other words, it will stop processing","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13089750,"byte_end":13089822,"line_start":583,"line_end":583,"column_start":5,"column_end":77}},{"value":"/ as soon as it finds a `true`, given that no matter what else happens,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13089827,"byte_end":13089900,"line_start":584,"line_end":584,"column_start":5,"column_end":78}},{"value":"/ the result will also be `true`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13089905,"byte_end":13089940,"line_start":585,"line_end":585,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13089945,"byte_end":13089948,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ An empty stream returns `false`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13089953,"byte_end":13089989,"line_start":587,"line_end":587,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13089994,"byte_end":13089997,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13090002,"byte_end":13090018,"line_start":589,"line_end":589,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13090023,"byte_end":13090026,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13090031,"byte_end":13090038,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13090043,"byte_end":13090063,"line_start":592,"line_end":592,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13090068,"byte_end":13090091,"line_start":593,"line_end":593,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13090096,"byte_end":13090137,"line_start":594,"line_end":594,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13090142,"byte_end":13090145,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13090150,"byte_end":13090172,"line_start":596,"line_end":596,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13090177,"byte_end":13090180,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ assert!(stream::iter(&a).any(|&x| x > 0).await);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13090185,"byte_end":13090237,"line_start":598,"line_end":598,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13090242,"byte_end":13090245,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ assert!(!stream::iter(&a).any(|&x| x > 5).await);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13090250,"byte_end":13090303,"line_start":600,"line_end":600,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13090308,"byte_end":13090315,"line_start":601,"line_end":601,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13090320,"byte_end":13090327,"line_start":602,"line_end":602,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13090332,"byte_end":13090335,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ Stopping at the first `true`:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13090340,"byte_end":13090373,"line_start":604,"line_end":604,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13090378,"byte_end":13090381,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13090386,"byte_end":13090393,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13090398,"byte_end":13090418,"line_start":607,"line_end":607,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13090423,"byte_end":13090446,"line_start":608,"line_end":608,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13090451,"byte_end":13090492,"line_start":609,"line_end":609,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13090497,"byte_end":13090500,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13090505,"byte_end":13090527,"line_start":611,"line_end":611,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13090532,"byte_end":13090535,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ let mut iter = stream::iter(&a);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13090540,"byte_end":13090576,"line_start":613,"line_end":613,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13090581,"byte_end":13090584,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ assert!(iter.any(|&x| x != 2).await);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13090589,"byte_end":13090630,"line_start":615,"line_end":615,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13090635,"byte_end":13090638,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ // we can still use `iter`, as there are more elements.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13090643,"byte_end":13090702,"line_start":617,"line_end":617,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(iter.next().await, Some(&2));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13090707,"byte_end":13090751,"line_start":618,"line_end":618,"column_start":5,"column_end":49}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13090756,"byte_end":13090763,"line_start":619,"line_end":619,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13090768,"byte_end":13090775,"line_start":620,"line_end":620,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7587},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13091929,"byte_end":13091934,"line_start":656,"line_end":656,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::StreamExt::chain","value":"pub fn chain<U>(Self, U) -> Chain<Self, U> where U: Stream<Item = Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":7561},"children":[],"decl_id":null,"docs":" Combine two streams into one by first returning all values from the\n first stream then all values from the second stream.","sig":null,"attributes":[{"value":"/ Combine two streams into one by first returning all values from the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13090951,"byte_end":13091022,"line_start":629,"line_end":629,"column_start":5,"column_end":76}},{"value":"/ first stream then all values from the second stream.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13091027,"byte_end":13091083,"line_start":630,"line_end":630,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13091088,"byte_end":13091091,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ As long as `self` still has values to emit, no values from `other` are","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13091096,"byte_end":13091170,"line_start":632,"line_end":632,"column_start":5,"column_end":79}},{"value":"/ emitted, even if some are ready.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13091175,"byte_end":13091211,"line_start":633,"line_end":633,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13091216,"byte_end":13091219,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13091224,"byte_end":13091238,"line_start":635,"line_end":635,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13091243,"byte_end":13091246,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13091251,"byte_end":13091258,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13091263,"byte_end":13091304,"line_start":638,"line_end":638,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13091309,"byte_end":13091312,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13091317,"byte_end":13091335,"line_start":640,"line_end":640,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13091340,"byte_end":13091361,"line_start":641,"line_end":641,"column_start":5,"column_end":26}},{"value":"/     let one = stream::iter(vec![1, 2, 3]);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13091366,"byte_end":13091412,"line_start":642,"line_end":642,"column_start":5,"column_end":51}},{"value":"/     let two = stream::iter(vec![4, 5, 6]);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13091417,"byte_end":13091463,"line_start":643,"line_end":643,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13091468,"byte_end":13091471,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/     let mut stream = one.chain(two);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13091476,"byte_end":13091516,"line_start":645,"line_end":645,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13091521,"byte_end":13091524,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13091529,"byte_end":13091578,"line_start":647,"line_end":647,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13091583,"byte_end":13091632,"line_start":648,"line_end":648,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13091637,"byte_end":13091686,"line_start":649,"line_end":649,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(4));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13091691,"byte_end":13091740,"line_start":650,"line_end":650,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(5));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13091745,"byte_end":13091794,"line_start":651,"line_end":651,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(6));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13091799,"byte_end":13091848,"line_start":652,"line_end":652,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13091853,"byte_end":13091899,"line_start":653,"line_end":653,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13091904,"byte_end":13091909,"line_start":654,"line_end":654,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13091914,"byte_end":13091921,"line_start":655,"line_end":655,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7589},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13092527,"byte_end":13092531,"line_start":680,"line_end":680,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::StreamExt::fold","value":"pub fn fold<B, F>(Self, B, F) -> FoldFuture<Self, B, F> where Self: Sized,\nF: FnMut(B, Self::Item) -> B","parent":{"krate":0,"index":7561},"children":[],"decl_id":null,"docs":" A combinator that applies a function to every element in a stream\n producing a single, final value.","sig":null,"attributes":[{"value":"/ A combinator that applies a function to every element in a stream","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13092090,"byte_end":13092159,"line_start":664,"line_end":664,"column_start":5,"column_end":74}},{"value":"/ producing a single, final value.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13092164,"byte_end":13092200,"line_start":665,"line_end":665,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13092205,"byte_end":13092208,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13092213,"byte_end":13092227,"line_start":667,"line_end":667,"column_start":5,"column_end":19}},{"value":"/ Basic usage:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13092232,"byte_end":13092248,"line_start":668,"line_end":668,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13092253,"byte_end":13092260,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13092265,"byte_end":13092285,"line_start":670,"line_end":670,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13092290,"byte_end":13092313,"line_start":671,"line_end":671,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, *};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13092318,"byte_end":13092351,"line_start":672,"line_end":672,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13092356,"byte_end":13092359,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ let s = stream::iter(vec![1u8, 2, 3]);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13092364,"byte_end":13092406,"line_start":674,"line_end":674,"column_start":5,"column_end":47}},{"value":"/ let sum = s.fold(0, |acc, x| acc + x).await;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13092411,"byte_end":13092459,"line_start":675,"line_end":675,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13092464,"byte_end":13092467,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, 6);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13092472,"byte_end":13092495,"line_start":677,"line_end":677,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13092500,"byte_end":13092507,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13092512,"byte_end":13092519,"line_start":679,"line_end":679,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7592},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13094844,"byte_end":13094851,"line_start":752,"line_end":752,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::StreamExt::collect","value":"pub fn collect<T>(Self) -> Collect<Self, T> where T: FromStream<Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":7561},"children":[],"decl_id":null,"docs":" Drain stream pushing all emitted values into a collection.","sig":null,"attributes":[{"value":"/ Drain stream pushing all emitted values into a collection.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13092710,"byte_end":13092772,"line_start":688,"line_end":688,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13092777,"byte_end":13092780,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ `collect` streams all values, awaiting as needed. Values are pushed into","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13092785,"byte_end":13092861,"line_start":690,"line_end":690,"column_start":5,"column_end":81}},{"value":"/ a collection. A number of different target collection types are","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13092866,"byte_end":13092933,"line_start":691,"line_end":691,"column_start":5,"column_end":72}},{"value":"/ supported, including [`Vec`](std::vec::Vec),","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13092938,"byte_end":13092986,"line_start":692,"line_end":692,"column_start":5,"column_end":53}},{"value":"/ [`String`](std::string::String), and [`Bytes`](bytes::Bytes).","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13092991,"byte_end":13093056,"line_start":693,"line_end":693,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13093061,"byte_end":13093064,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # `Result`","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13093069,"byte_end":13093083,"line_start":695,"line_end":695,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13093088,"byte_end":13093091,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ `collect()` can also be used with streams of type `Result<T, E>` where","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13093096,"byte_end":13093170,"line_start":697,"line_end":697,"column_start":5,"column_end":79}},{"value":"/ `T: FromStream<_>`. In this case, `collect()` will stream as long as","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13093175,"byte_end":13093247,"line_start":698,"line_end":698,"column_start":5,"column_end":77}},{"value":"/ values yielded from the stream are `Ok(_)`. If `Err(_)` is encountered,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13093252,"byte_end":13093327,"line_start":699,"line_end":699,"column_start":5,"column_end":80}},{"value":"/ streaming is terminated and `collect()` returns the `Err`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13093332,"byte_end":13093394,"line_start":700,"line_end":700,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13093399,"byte_end":13093402,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13093407,"byte_end":13093418,"line_start":702,"line_end":702,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13093423,"byte_end":13093426,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ `FromStream` is currently a sealed trait. Stabilization is pending","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13093431,"byte_end":13093501,"line_start":704,"line_end":704,"column_start":5,"column_end":75}},{"value":"/ enhancements to the Rust language.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13093506,"byte_end":13093544,"line_start":705,"line_end":705,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13093549,"byte_end":13093552,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13093557,"byte_end":13093571,"line_start":707,"line_end":707,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13093576,"byte_end":13093579,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13093584,"byte_end":13093600,"line_start":709,"line_end":709,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13093605,"byte_end":13093608,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13093613,"byte_end":13093620,"line_start":711,"line_end":711,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13093625,"byte_end":13093666,"line_start":712,"line_end":712,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13093671,"byte_end":13093674,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13093679,"byte_end":13093697,"line_start":714,"line_end":714,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13093702,"byte_end":13093723,"line_start":715,"line_end":715,"column_start":5,"column_end":26}},{"value":"/     let doubled: Vec<i32> =","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13093728,"byte_end":13093759,"line_start":716,"line_end":716,"column_start":5,"column_end":36}},{"value":"/         stream::iter(vec![1, 2, 3])","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13093764,"byte_end":13093803,"line_start":717,"line_end":717,"column_start":5,"column_end":44}},{"value":"/             .map(|x| x * 2)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13093808,"byte_end":13093839,"line_start":718,"line_end":718,"column_start":5,"column_end":36}},{"value":"/             .collect()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13093844,"byte_end":13093870,"line_start":719,"line_end":719,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13093875,"byte_end":13093898,"line_start":720,"line_end":720,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13093903,"byte_end":13093906,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(vec![2, 4, 6], doubled);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13093911,"byte_end":13093954,"line_start":722,"line_end":722,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13093959,"byte_end":13093964,"line_start":723,"line_end":723,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13093969,"byte_end":13093976,"line_start":724,"line_end":724,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13093981,"byte_end":13093984,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ Collecting a stream of `Result` values","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13093989,"byte_end":13094031,"line_start":726,"line_end":726,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13094036,"byte_end":13094039,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13094044,"byte_end":13094051,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13094056,"byte_end":13094097,"line_start":729,"line_end":729,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13094102,"byte_end":13094105,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13094110,"byte_end":13094128,"line_start":731,"line_end":731,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13094133,"byte_end":13094154,"line_start":732,"line_end":732,"column_start":5,"column_end":26}},{"value":"/     // A stream containing only `Ok` values will be collected","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13094159,"byte_end":13094224,"line_start":733,"line_end":733,"column_start":5,"column_end":70}},{"value":"/     let values: Result<Vec<i32>, &str> =","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13094229,"byte_end":13094273,"line_start":734,"line_end":734,"column_start":5,"column_end":49}},{"value":"/         stream::iter(vec![Ok(1), Ok(2), Ok(3)])","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13094278,"byte_end":13094329,"line_start":735,"line_end":735,"column_start":5,"column_end":56}},{"value":"/             .collect()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13094334,"byte_end":13094360,"line_start":736,"line_end":736,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13094365,"byte_end":13094388,"line_start":737,"line_end":737,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13094393,"byte_end":13094396,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Ok(vec![1, 2, 3]), values);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13094401,"byte_end":13094447,"line_start":739,"line_end":739,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13094452,"byte_end":13094455,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/     // A stream containing `Err` values will return the first error.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13094460,"byte_end":13094532,"line_start":741,"line_end":741,"column_start":5,"column_end":77}},{"value":"/     let results = vec![Ok(1), Err(\"no\"), Ok(2), Ok(3), Err(\"nein\")];","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13094537,"byte_end":13094609,"line_start":742,"line_end":742,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13094614,"byte_end":13094617,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/     let values: Result<Vec<i32>, &str> =","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13094622,"byte_end":13094666,"line_start":744,"line_end":744,"column_start":5,"column_end":49}},{"value":"/         stream::iter(results)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13094671,"byte_end":13094704,"line_start":745,"line_end":745,"column_start":5,"column_end":38}},{"value":"/             .collect()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13094709,"byte_end":13094735,"line_start":746,"line_end":746,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13094740,"byte_end":13094763,"line_start":747,"line_end":747,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13094768,"byte_end":13094771,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Err(\"no\"), values);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13094776,"byte_end":13094814,"line_start":749,"line_end":749,"column_start":5,"column_end":43}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13094819,"byte_end":13094824,"line_start":750,"line_end":750,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13094829,"byte_end":13094836,"line_start":751,"line_end":751,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7594},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13097506,"byte_end":13097513,"line_start":816,"line_end":816,"column_start":8,"column_end":15},"name":"timeout","qualname":"::stream::StreamExt::timeout","value":"pub fn timeout(Self, Duration) -> Timeout<Self> where Self: Sized","parent":{"krate":0,"index":7561},"children":[],"decl_id":null,"docs":" Applies a per-item timeout to the passed stream.","sig":null,"attributes":[{"value":"/ Applies a per-item timeout to the passed stream.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13094991,"byte_end":13095043,"line_start":760,"line_end":760,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13095048,"byte_end":13095051,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ `timeout()` takes a `Duration` that represents the maximum amount of","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13095056,"byte_end":13095128,"line_start":762,"line_end":762,"column_start":5,"column_end":77}},{"value":"/ time each element of the stream has to complete before timing out.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13095133,"byte_end":13095203,"line_start":763,"line_end":763,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13095208,"byte_end":13095211,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ If the wrapped stream yields a value before the deadline is reached, the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13095216,"byte_end":13095292,"line_start":765,"line_end":765,"column_start":5,"column_end":81}},{"value":"/ value is returned. Otherwise, an error is returned. The caller may decide","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13095297,"byte_end":13095374,"line_start":766,"line_end":766,"column_start":5,"column_end":82}},{"value":"/ to continue consuming the stream and will eventually get the next source","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13095379,"byte_end":13095455,"line_start":767,"line_end":767,"column_start":5,"column_end":81}},{"value":"/ stream value once it becomes available.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13095460,"byte_end":13095503,"line_start":768,"line_end":768,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13095508,"byte_end":13095511,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13095516,"byte_end":13095527,"line_start":770,"line_end":770,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13095532,"byte_end":13095535,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ This function consumes the stream passed into it and returns a","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13095540,"byte_end":13095606,"line_start":772,"line_end":772,"column_start":5,"column_end":71}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13095611,"byte_end":13095637,"line_start":773,"line_end":773,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13095642,"byte_end":13095645,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ Polling the returned stream will continue to poll the inner stream even","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13095650,"byte_end":13095725,"line_start":775,"line_end":775,"column_start":5,"column_end":80}},{"value":"/ if one or more items time out.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13095730,"byte_end":13095764,"line_start":776,"line_end":776,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13095769,"byte_end":13095772,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13095777,"byte_end":13095791,"line_start":778,"line_end":778,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13095796,"byte_end":13095799,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ Suppose we have a stream `int_stream` that yields 3 numbers (1, 2, 3):","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13095804,"byte_end":13095878,"line_start":780,"line_end":780,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13095883,"byte_end":13095886,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13095891,"byte_end":13095898,"line_start":782,"line_end":782,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13095903,"byte_end":13095923,"line_start":783,"line_end":783,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13095928,"byte_end":13095951,"line_start":784,"line_end":784,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13095956,"byte_end":13095997,"line_start":785,"line_end":785,"column_start":5,"column_end":46}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13096002,"byte_end":13096030,"line_start":786,"line_end":786,"column_start":5,"column_end":33}},{"value":"/ # let int_stream = stream::iter(1..=3);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13096035,"byte_end":13096078,"line_start":787,"line_end":787,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13096083,"byte_end":13096086,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ let mut int_stream = int_stream.timeout(Duration::from_secs(1));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13096091,"byte_end":13096159,"line_start":789,"line_end":789,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13096164,"byte_end":13096167,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ // When no items time out, we get the 3 elements in succession:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13096172,"byte_end":13096239,"line_start":791,"line_end":791,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13096244,"byte_end":13096301,"line_start":792,"line_end":792,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(2)));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13096306,"byte_end":13096363,"line_start":793,"line_end":793,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(3)));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13096368,"byte_end":13096425,"line_start":794,"line_end":794,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13096430,"byte_end":13096484,"line_start":795,"line_end":795,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13096489,"byte_end":13096492,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ // If the second item times out, we get an error and continue polling the stream:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13096497,"byte_end":13096582,"line_start":797,"line_end":797,"column_start":5,"column_end":90}},{"value":"/ # let mut int_stream = stream::iter(vec![Ok(1), Err(()), Ok(2), Ok(3)]);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13096587,"byte_end":13096663,"line_start":798,"line_end":798,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13096668,"byte_end":13096725,"line_start":799,"line_end":799,"column_start":5,"column_end":62}},{"value":"/ assert!(int_stream.try_next().await.is_err());","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13096730,"byte_end":13096780,"line_start":800,"line_end":800,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(2)));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13096785,"byte_end":13096842,"line_start":801,"line_end":801,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(3)));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13096847,"byte_end":13096904,"line_start":802,"line_end":802,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13096909,"byte_end":13096963,"line_start":803,"line_end":803,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13096968,"byte_end":13096971,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ // If we want to stop consuming the source stream the first time an","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13096976,"byte_end":13097047,"line_start":805,"line_end":805,"column_start":5,"column_end":76}},{"value":"/ // element times out, we can use the `take_while` operator:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13097052,"byte_end":13097115,"line_start":806,"line_end":806,"column_start":5,"column_end":68}},{"value":"/ # let int_stream = stream::iter(vec![Ok(1), Err(()), Ok(2), Ok(3)]);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13097120,"byte_end":13097192,"line_start":807,"line_end":807,"column_start":5,"column_end":77}},{"value":"/ let mut int_stream = int_stream.take_while(Result::is_ok);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13097197,"byte_end":13097259,"line_start":808,"line_end":808,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13097264,"byte_end":13097267,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13097272,"byte_end":13097329,"line_start":810,"line_end":810,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13097334,"byte_end":13097388,"line_start":811,"line_end":811,"column_start":5,"column_end":59}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13097393,"byte_end":13097400,"line_start":812,"line_end":812,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13097405,"byte_end":13097412,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"cfg(all(feature = \"time\"))","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13097417,"byte_end":13097446,"line_start":814,"line_end":814,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":8262},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":13262775,"byte_end":13262781,"line_start":72,"line_end":72,"column_start":10,"column_end":16},"name":"Permit","qualname":"::sync::mpsc::chan::Semaphore::Permit","value":"type Permit;","parent":{"krate":0,"index":8261},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":8873},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":8877},{"krate":0,"index":8878},{"krate":0,"index":8881},{"krate":0,"index":8884},{"krate":0,"index":8894},{"krate":0,"index":8897},{"krate":0,"index":8911},{"krate":0,"index":8924},{"krate":0,"index":9036},{"krate":0,"index":9037},{"krate":0,"index":9040},{"krate":0,"index":9043},{"krate":0,"index":9122}],"decl_id":null,"docs":" Asynchronous green-threads.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":21598,"byte_end":21625,"line_start":247,"line_end":247,"column_start":13,"column_end":40}},{"value":"/ Asynchronous green-threads.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13335433,"byte_end":13335464,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13335465,"byte_end":13335468,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## What are Tasks?","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13335469,"byte_end":13335491,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13335492,"byte_end":13335495,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ A _task_ is a light weight, non-blocking unit of execution. A task is similar","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13335496,"byte_end":13335577,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"/ to an OS thread, but rather than being managed by the OS scheduler, they are","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13335578,"byte_end":13335658,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ managed by the [Tokio runtime][rt]. Another name for this general pattern is","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13335659,"byte_end":13335739,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ [green threads]. If you are familiar with [Go's goroutines], [Kotlin's","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13335740,"byte_end":13335814,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ coroutines], or [Erlang's processes], you can think of Tokio's tasks as","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13335815,"byte_end":13335890,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ something similar.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13335891,"byte_end":13335913,"line_start":10,"line_end":10,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13335914,"byte_end":13335917,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Key points about tasks include:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13335918,"byte_end":13335953,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13335954,"byte_end":13335957,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **light weight**. Because tasks are scheduled by the Tokio","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13335958,"byte_end":13336032,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/   runtime rather than the operating system, creating new tasks or switching","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13336033,"byte_end":13336112,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/   between tasks does not require a context switch and has fairly low","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13336113,"byte_end":13336185,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/   overhead. Creating, running, and destroying large numbers of tasks is","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13336186,"byte_end":13336261,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/   quite cheap, especially compared to OS threads.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13336262,"byte_end":13336315,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13336316,"byte_end":13336319,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * Tasks are scheduled **cooperatively**. Most operating systems implement","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13336320,"byte_end":13336397,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/   _preemptive multitasking_. This is a scheduling technique where the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13336398,"byte_end":13336471,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/   operating system allows each thread to run for a period of time, and then","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13336472,"byte_end":13336551,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/   _preempts_ it, temporarily pausing that thread and switching to another.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13336552,"byte_end":13336630,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/   Tasks, on the other hand, implement _cooperative multitasking_. In","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13336631,"byte_end":13336703,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/   cooperative multitasking, a task is allowed to run until it _yields_,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13336704,"byte_end":13336779,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/   indicating to the Tokio runtime's scheduler that it cannot currently","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13336780,"byte_end":13336854,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/   continue executing. When a task yields, the Tokio runtime switches to","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13336855,"byte_end":13336930,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/   executing the next task.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13336931,"byte_end":13336961,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13336962,"byte_end":13336965,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **non-blocking**. Typically, when an OS thread performs I/O or","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13336966,"byte_end":13337044,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/   must synchronize with another thread, it _blocks_, allowing the OS to","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13337045,"byte_end":13337120,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/   schedule another thread. When a task cannot continue executing, it must","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13337121,"byte_end":13337198,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/   yield instead, allowing the Tokio runtime to schedule another task. Tasks","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13337199,"byte_end":13337278,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/   should generally not perform system calls or other operations that could","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13337279,"byte_end":13337357,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/   block a thread, as this would prevent other tasks running on the same","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13337358,"byte_end":13337433,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/   thread from executing as well. Instead, this module provides APIs for","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13337434,"byte_end":13337509,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/   running blocking operations in an asynchronous context.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13337510,"byte_end":13337571,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13337572,"byte_end":13337575,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [rt]: crate::runtime","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13337576,"byte_end":13337600,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ [green threads]: https://en.wikipedia.org/wiki/Green_threads","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13337601,"byte_end":13337665,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/ [Go's goroutines]: https://tour.golang.org/concurrency/1","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13337666,"byte_end":13337726,"line_start":41,"line_end":41,"column_start":1,"column_end":61}},{"value":"/ [Kotlin's coroutines]: https://kotlinlang.org/docs/reference/coroutines-overview.html","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13337727,"byte_end":13337816,"line_start":42,"line_end":42,"column_start":1,"column_end":90}},{"value":"/ [Erlang's processes]: http://erlang.org/doc/getting_started/conc_prog.html#processes","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13337817,"byte_end":13337905,"line_start":43,"line_end":43,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13337906,"byte_end":13337909,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Working with Tasks","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13337910,"byte_end":13337935,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13337936,"byte_end":13337939,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This module provides the following APIs for working with tasks:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13337940,"byte_end":13338007,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13338008,"byte_end":13338011,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ### Spawning","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13338012,"byte_end":13338028,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13338029,"byte_end":13338032,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Perhaps the most important function in this module is [`task::spawn`]. This","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13338033,"byte_end":13338112,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ function can be thought of as an async equivalent to the standard library's","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13338113,"byte_end":13338192,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ [`thread::spawn`][`std::thread::spawn`]. It takes an `async` block or other","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13338193,"byte_end":13338272,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ [future], and creates a new task to run that work concurrently:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13338273,"byte_end":13338340,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13338341,"byte_end":13338344,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13338345,"byte_end":13338352,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13338353,"byte_end":13338373,"line_start":57,"line_end":57,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13338374,"byte_end":13338377,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # async fn doc() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13338378,"byte_end":13338400,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"/ task::spawn(async {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13338401,"byte_end":13338424,"line_start":60,"line_end":60,"column_start":1,"column_end":24}},{"value":"/     // perform some work here...","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13338425,"byte_end":13338461,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"/ });","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13338462,"byte_end":13338469,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13338470,"byte_end":13338477,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13338478,"byte_end":13338485,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13338486,"byte_end":13338489,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Like [`std::thread::spawn`], `task::spawn` returns a [`JoinHandle`] struct.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13338490,"byte_end":13338569,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ A `JoinHandle` is itself a future which may be used to await the output of","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13338570,"byte_end":13338648,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ the spawned task. For example:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13338649,"byte_end":13338683,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13338684,"byte_end":13338687,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13338688,"byte_end":13338695,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13338696,"byte_end":13338716,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13338717,"byte_end":13338720,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13338721,"byte_end":13338801,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13338802,"byte_end":13338836,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13338837,"byte_end":13338851,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"/     \"hello world!\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13338852,"byte_end":13338874,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"/ });","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13338875,"byte_end":13338882,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13338883,"byte_end":13338886,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ // ...","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13338887,"byte_end":13338897,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13338898,"byte_end":13338901,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ // Await the result of the spawned task.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13338902,"byte_end":13338946,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"/ let result = join.await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13338947,"byte_end":13338976,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"hello world!\");","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13338977,"byte_end":13339016,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"/ # Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13339017,"byte_end":13339029,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13339030,"byte_end":13339037,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13339038,"byte_end":13339045,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13339046,"byte_end":13339049,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Again, like `std::thread`'s [`JoinHandle` type][thread_join], if the spawned","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13339050,"byte_end":13339130,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"/ task panics, awaiting its `JoinHandle` will return a [`JoinError`]`. For","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13339131,"byte_end":13339207,"line_start":89,"line_end":89,"column_start":1,"column_end":77}},{"value":"/ example:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13339208,"byte_end":13339220,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13339221,"byte_end":13339224,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13339225,"byte_end":13339232,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13339233,"byte_end":13339253,"line_start":93,"line_end":93,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13339254,"byte_end":13339257,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13339258,"byte_end":13339296,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13339297,"byte_end":13339331,"line_start":96,"line_end":96,"column_start":1,"column_end":35}},{"value":"/     panic!(\"something bad happened!\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13339332,"byte_end":13339373,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/ });","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13339374,"byte_end":13339381,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13339382,"byte_end":13339385,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ // The returned result indicates that the task failed.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13339386,"byte_end":13339444,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"/ assert!(join.await.is_err());","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13339445,"byte_end":13339478,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13339479,"byte_end":13339486,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13339487,"byte_end":13339494,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13339495,"byte_end":13339498,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ `spawn`, `JoinHandle`, and `JoinError` are present when the \"rt-core\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13339499,"byte_end":13339572,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"/ feature flag is enabled.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13339573,"byte_end":13339601,"line_start":106,"line_end":106,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13339602,"byte_end":13339605,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn`]: crate::task::spawn()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13339606,"byte_end":13339647,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"/ [future]: std::future::Future","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13339648,"byte_end":13339681,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/ [`std::thread::spawn`]: std::thread::spawn","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13339682,"byte_end":13339728,"line_start":110,"line_end":110,"column_start":1,"column_end":47}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13339729,"byte_end":13339772,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/ [thread_join]: std::thread::JoinHandle","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13339773,"byte_end":13339815,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/ [`JoinError`]: crate::task::JoinError","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13339816,"byte_end":13339857,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13339858,"byte_end":13339861,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ### Blocking and Yielding","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13339862,"byte_end":13339891,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13339892,"byte_end":13339895,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ As we discussed above, code running in asynchronous tasks should not perform","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13339896,"byte_end":13339976,"line_start":117,"line_end":117,"column_start":1,"column_end":81}},{"value":"/ operations that can block. A blocking operation performed in a task running","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13339977,"byte_end":13340056,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"/ on a thread that is also running other tasks would block the entire thread,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13340057,"byte_end":13340136,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"/ preventing other tasks from running.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13340137,"byte_end":13340177,"line_start":120,"line_end":120,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13340178,"byte_end":13340181,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ Instead, Tokio provides two APIs for running blocking operations in an","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13340182,"byte_end":13340256,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"/ asynchronous context: [`task::spawn_blocking`] and [`task::block_in_place`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13340257,"byte_end":13340337,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13340338,"byte_end":13340341,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ #### spawn_blocking","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13340342,"byte_end":13340365,"line_start":125,"line_end":125,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13340366,"byte_end":13340369,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ The `task::spawn_blocking` function is similar to the `task::spawn` function","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13340370,"byte_end":13340450,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/ discussed in the previous section, but rather than spawning an","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13340451,"byte_end":13340517,"line_start":128,"line_end":128,"column_start":1,"column_end":67}},{"value":"/ _non-blocking_ future on the Tokio runtime, it instead spawns a","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13340518,"byte_end":13340585,"line_start":129,"line_end":129,"column_start":1,"column_end":68}},{"value":"/ _blocking_ function on a dedicated thread pool for blocking tasks. For","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13340586,"byte_end":13340660,"line_start":130,"line_end":130,"column_start":1,"column_end":75}},{"value":"/ example:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13340661,"byte_end":13340673,"line_start":131,"line_end":131,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13340674,"byte_end":13340677,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13340678,"byte_end":13340685,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13340686,"byte_end":13340706,"line_start":134,"line_end":134,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13340707,"byte_end":13340710,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13340711,"byte_end":13340734,"line_start":136,"line_end":136,"column_start":1,"column_end":24}},{"value":"/ task::spawn_blocking(|| {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13340735,"byte_end":13340764,"line_start":137,"line_end":137,"column_start":1,"column_end":30}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13340765,"byte_end":13340827,"line_start":138,"line_end":138,"column_start":1,"column_end":63}},{"value":"/ });","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13340828,"byte_end":13340835,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13340836,"byte_end":13340843,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13340844,"byte_end":13340851,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13340852,"byte_end":13340855,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ Just like `task::spawn`, `task::spawn_blocking` returns a `JoinHandle`","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13340856,"byte_end":13340930,"line_start":143,"line_end":143,"column_start":1,"column_end":75}},{"value":"/ which we can use to await the result of the blocking operation:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13340931,"byte_end":13340998,"line_start":144,"line_end":144,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13340999,"byte_end":13341002,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13341003,"byte_end":13341014,"line_start":146,"line_end":146,"column_start":1,"column_end":12}},{"value":"/ # use tokio::task;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13341015,"byte_end":13341037,"line_start":147,"line_end":147,"column_start":1,"column_end":23}},{"value":"/ # async fn docs() -> Result<(), Box<dyn std::error::Error>>{","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13341038,"byte_end":13341102,"line_start":148,"line_end":148,"column_start":1,"column_end":65}},{"value":"/ let join = task::spawn_blocking(|| {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13341103,"byte_end":13341143,"line_start":149,"line_end":149,"column_start":1,"column_end":41}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13341144,"byte_end":13341206,"line_start":150,"line_end":150,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13341207,"byte_end":13341235,"line_start":151,"line_end":151,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13341236,"byte_end":13341243,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13341244,"byte_end":13341247,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ let result = join.await?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13341248,"byte_end":13341277,"line_start":154,"line_end":154,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13341278,"byte_end":13341323,"line_start":155,"line_end":155,"column_start":1,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13341324,"byte_end":13341336,"line_start":156,"line_end":156,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13341337,"byte_end":13341344,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13341345,"byte_end":13341352,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13341353,"byte_end":13341356,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ #### block_in_place","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13341357,"byte_end":13341380,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13341381,"byte_end":13341384,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ When using the [threaded runtime][rt-threaded], the [`task::block_in_place`]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13341385,"byte_end":13341465,"line_start":162,"line_end":162,"column_start":1,"column_end":81}},{"value":"/ function is also available. Like `task::spawn_blocking`, this function","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13341466,"byte_end":13341540,"line_start":163,"line_end":163,"column_start":1,"column_end":75}},{"value":"/ allows running a blocking operation from an asynchronous context. Unlike","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13341541,"byte_end":13341617,"line_start":164,"line_end":164,"column_start":1,"column_end":77}},{"value":"/ `spawn_blocking`, however, `block_in_place` works by transitioning the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13341618,"byte_end":13341692,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"/ _current_ worker thread to a blocking thread, moving other tasks running on","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13341693,"byte_end":13341772,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"/ that thread to another worker thread. This can improve performance by avoiding","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13341773,"byte_end":13341855,"line_start":167,"line_end":167,"column_start":1,"column_end":83}},{"value":"/ context switches.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13341856,"byte_end":13341877,"line_start":168,"line_end":168,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13341878,"byte_end":13341881,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13341882,"byte_end":13341898,"line_start":170,"line_end":170,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13341899,"byte_end":13341902,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13341903,"byte_end":13341910,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13341911,"byte_end":13341931,"line_start":173,"line_end":173,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13341932,"byte_end":13341935,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13341936,"byte_end":13341959,"line_start":175,"line_end":175,"column_start":1,"column_end":24}},{"value":"/ let result = task::block_in_place(|| {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13341960,"byte_end":13342002,"line_start":176,"line_end":176,"column_start":1,"column_end":43}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13342003,"byte_end":13342065,"line_start":177,"line_end":177,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13342066,"byte_end":13342094,"line_start":178,"line_end":178,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13342095,"byte_end":13342102,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13342103,"byte_end":13342106,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13342107,"byte_end":13342152,"line_start":181,"line_end":181,"column_start":1,"column_end":46}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13342153,"byte_end":13342160,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13342161,"byte_end":13342168,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13342169,"byte_end":13342172,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ #### yield_now","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13342173,"byte_end":13342191,"line_start":185,"line_end":185,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13342192,"byte_end":13342195,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ In addition, this module provides a [`task::yield_now`] async function","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13342196,"byte_end":13342270,"line_start":187,"line_end":187,"column_start":1,"column_end":75}},{"value":"/ that is analogous to the standard library's [`thread::yield_now`]. Calling","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13342271,"byte_end":13342349,"line_start":188,"line_end":188,"column_start":1,"column_end":79}},{"value":"/ and `await`ing this function will cause the current task to yield to the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13342350,"byte_end":13342426,"line_start":189,"line_end":189,"column_start":1,"column_end":77}},{"value":"/ Tokio runtime's scheduler, allowing other tasks to be","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13342427,"byte_end":13342484,"line_start":190,"line_end":190,"column_start":1,"column_end":58}},{"value":"/ scheduled. Eventually, the yielding task will be polled again, allowing it","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13342485,"byte_end":13342563,"line_start":191,"line_end":191,"column_start":1,"column_end":79}},{"value":"/ to execute. For example:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13342564,"byte_end":13342592,"line_start":192,"line_end":192,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13342593,"byte_end":13342596,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13342597,"byte_end":13342608,"line_start":194,"line_end":194,"column_start":1,"column_end":12}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13342609,"byte_end":13342629,"line_start":195,"line_end":195,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13342630,"byte_end":13342633,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13342634,"byte_end":13342672,"line_start":197,"line_end":197,"column_start":1,"column_end":39}},{"value":"/ async {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13342673,"byte_end":13342684,"line_start":198,"line_end":198,"column_start":1,"column_end":12}},{"value":"/     task::spawn(async {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13342685,"byte_end":13342712,"line_start":199,"line_end":199,"column_start":1,"column_end":28}},{"value":"/         // ...","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13342713,"byte_end":13342731,"line_start":200,"line_end":200,"column_start":1,"column_end":19}},{"value":"/         println!(\"spawned task done!\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13342732,"byte_end":13342774,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/     });","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13342775,"byte_end":13342786,"line_start":202,"line_end":202,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13342787,"byte_end":13342790,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/     // Yield, allowing the newly-spawned task to execute first.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13342791,"byte_end":13342858,"line_start":204,"line_end":204,"column_start":1,"column_end":68}},{"value":"/     task::yield_now().await;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13342859,"byte_end":13342891,"line_start":205,"line_end":205,"column_start":1,"column_end":33}},{"value":"/     println!(\"main task done!\");","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13342892,"byte_end":13342928,"line_start":206,"line_end":206,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13342929,"byte_end":13342934,"line_start":207,"line_end":207,"column_start":1,"column_end":6}},{"value":"/ # .await;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13342935,"byte_end":13342948,"line_start":208,"line_end":208,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13342949,"byte_end":13342956,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13342957,"byte_end":13342964,"line_start":210,"line_end":210,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13342965,"byte_end":13342968,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: crate::task::spawn_blocking","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13342969,"byte_end":13343026,"line_start":212,"line_end":212,"column_start":1,"column_end":58}},{"value":"/ [`task::block_in_place`]: crate::task::block_in_place","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13343027,"byte_end":13343084,"line_start":213,"line_end":213,"column_start":1,"column_end":58}},{"value":"/ [rt-threaded]: ../runtime/index.html#threaded-scheduler","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13343085,"byte_end":13343144,"line_start":214,"line_end":214,"column_start":1,"column_end":60}},{"value":"/ [`task::yield_now`]: crate::task::yield_now()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13343145,"byte_end":13343194,"line_start":215,"line_end":215,"column_start":1,"column_end":50}},{"value":"/ [`thread::yield_now`]: std::thread::yield_now","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":13343195,"byte_end":13343244,"line_start":216,"line_end":216,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":8914},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/spawn.rs","byte_start":13347327,"byte_end":13347332,"line_start":125,"line_end":125,"column_start":12,"column_end":17},"name":"spawn","qualname":"::task::spawn::spawn","value":"pub fn spawn<T>(T) -> JoinHandle<T::Output> where T: Future + Send + 'static,\nT::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a new asynchronous task, returning a\n [`JoinHandle`](super::JoinHandle) for it.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":21740,"byte_end":21767,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":8916},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/yield_now.rs","byte_start":13348413,"byte_end":13348422,"line_start":16,"line_end":16,"column_start":18,"column_end":27},"name":"yield_now","qualname":"::task::yield_now::yield_now","value":"pub async fn yield_now() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Yields execution back to the Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":21740,"byte_end":21767,"line_start":256,"line_end":256,"column_start":13,"column_end":40}},{"value":"must_use = \"yield_now does nothing unless polled/`await`-ed\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/yield_now.rs","byte_start":13348332,"byte_end":13348395,"line_start":15,"line_end":15,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":9125},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13352820,"byte_end":13352828,"line_start":112,"line_end":112,"column_start":16,"column_end":24},"name":"LocalSet","qualname":"::task::local::LocalSet","value":"LocalSet {  }","parent":null,"children":[{"krate":0,"index":9126},{"krate":0,"index":9127},{"krate":0,"index":9128}],"decl_id":null,"docs":" A set of tasks which are executed on the same thread.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-util\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":22281,"byte_end":22308,"line_start":282,"line_end":282,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":9134},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13354840,"byte_end":13354851,"line_start":193,"line_end":193,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"::task::local::spawn_local","value":"pub fn spawn_local<F>(F) -> JoinHandle<F::Output> where F: Future + 'static,\nF::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` future on the local task set.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-util\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":22281,"byte_end":22308,"line_start":282,"line_end":282,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":8989},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13355748,"byte_end":13355751,"line_start":223,"line_end":223,"column_start":12,"column_end":15},"name":"new","qualname":"<LocalSet>::new","value":"pub fn new() -> LocalSet","parent":null,"children":[],"decl_id":null,"docs":" Returns a new local task set.\n","sig":null,"attributes":[{"value":"/ Returns a new local task set.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13355703,"byte_end":13355736,"line_start":222,"line_end":222,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":8990},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13357456,"byte_end":13357467,"line_start":276,"line_end":276,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"<LocalSet>::spawn_local","value":"pub fn spawn_local<F>(&Self, F) -> JoinHandle<F::Output> where F: Future +\n'static, F::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` task onto the local task set.","sig":null,"attributes":[{"value":"/ Spawns a `!Send` task onto the local task set.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13356293,"byte_end":13356343,"line_start":240,"line_end":240,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13356348,"byte_end":13356351,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ This task is guaranteed to be run on the current thread.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13356356,"byte_end":13356416,"line_start":242,"line_end":242,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13356421,"byte_end":13356424,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ Unlike the free function [`spawn_local`], this method may be used to","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13356429,"byte_end":13356501,"line_start":244,"line_end":244,"column_start":5,"column_end":77}},{"value":"/ spawn local tasks when the task set is _not_ running. For example:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13356506,"byte_end":13356576,"line_start":245,"line_end":245,"column_start":5,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13356581,"byte_end":13356592,"line_start":246,"line_end":246,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13356597,"byte_end":13356617,"line_start":247,"line_end":247,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13356622,"byte_end":13356625,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13356630,"byte_end":13356648,"line_start":249,"line_end":249,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13356653,"byte_end":13356674,"line_start":250,"line_end":250,"column_start":5,"column_end":26}},{"value":"/     let local = task::LocalSet::new();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13356679,"byte_end":13356721,"line_start":251,"line_end":251,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13356726,"byte_end":13356729,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/     // Spawn a future on the local set. This future will be run when","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13356734,"byte_end":13356806,"line_start":253,"line_end":253,"column_start":5,"column_end":77}},{"value":"/     // we call `run_until` to drive the task set.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13356811,"byte_end":13356864,"line_start":254,"line_end":254,"column_start":5,"column_end":58}},{"value":"/     local.spawn_local(async {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13356869,"byte_end":13356902,"line_start":255,"line_end":255,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13356907,"byte_end":13356924,"line_start":256,"line_end":256,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13356929,"byte_end":13356940,"line_start":257,"line_end":257,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13356945,"byte_end":13356948,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/     // Run the local task set.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13356953,"byte_end":13356987,"line_start":259,"line_end":259,"column_start":5,"column_end":39}},{"value":"/     local.run_until(async move {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13356992,"byte_end":13357028,"line_start":260,"line_end":260,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13357033,"byte_end":13357051,"line_start":261,"line_end":261,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13357056,"byte_end":13357073,"line_start":262,"line_end":262,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13357078,"byte_end":13357081,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/     // When `run` finishes, we can spawn _more_ futures, which will","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13357086,"byte_end":13357157,"line_start":264,"line_end":264,"column_start":5,"column_end":76}},{"value":"/     // run in subsequent calls to `run_until`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13357162,"byte_end":13357212,"line_start":265,"line_end":265,"column_start":5,"column_end":55}},{"value":"/     local.spawn_local(async {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13357217,"byte_end":13357250,"line_start":266,"line_end":266,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13357255,"byte_end":13357272,"line_start":267,"line_end":267,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13357277,"byte_end":13357288,"line_start":268,"line_end":268,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13357293,"byte_end":13357296,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/     local.run_until(async move {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13357301,"byte_end":13357337,"line_start":270,"line_end":270,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13357342,"byte_end":13357360,"line_start":271,"line_end":271,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13357365,"byte_end":13357382,"line_start":272,"line_end":272,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13357387,"byte_end":13357392,"line_start":273,"line_end":273,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13357397,"byte_end":13357404,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13357409,"byte_end":13357444,"line_start":275,"line_end":275,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":8992},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13360202,"byte_end":13360210,"line_start":349,"line_end":349,"column_start":12,"column_end":20},"name":"block_on","qualname":"<LocalSet>::block_on","value":"pub fn block_on<F>(&Self, &mut crate::runtime::Runtime, F) -> F::Output where\nF: Future","parent":null,"children":[],"decl_id":null,"docs":" Runs a future to completion on the provided runtime, driving any local\n futures spawned on this task set on the current thread.","sig":null,"attributes":[{"value":"/ Runs a future to completion on the provided runtime, driving any local","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13357810,"byte_end":13357884,"line_start":287,"line_end":287,"column_start":5,"column_end":79}},{"value":"/ futures spawned on this task set on the current thread.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13357889,"byte_end":13357948,"line_start":288,"line_end":288,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13357953,"byte_end":13357956,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13357961,"byte_end":13358028,"line_start":290,"line_end":290,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13358033,"byte_end":13358106,"line_start":291,"line_end":291,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime. The future","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13358111,"byte_end":13358187,"line_start":292,"line_end":292,"column_start":5,"column_end":81}},{"value":"/ may also call [`spawn_local`] to spawn_local additional local futures on the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13358192,"byte_end":13358272,"line_start":293,"line_end":293,"column_start":5,"column_end":85}},{"value":"/ current thread.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13358277,"byte_end":13358296,"line_start":294,"line_end":294,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13358301,"byte_end":13358304,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ This method should not be called from an asynchronous context.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13358309,"byte_end":13358375,"line_start":296,"line_end":296,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13358380,"byte_end":13358383,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13358388,"byte_end":13358400,"line_start":298,"line_end":298,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13358405,"byte_end":13358408,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ This function panics if the executor is at capacity, if the provided","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13358413,"byte_end":13358485,"line_start":300,"line_end":300,"column_start":5,"column_end":77}},{"value":"/ future panics, or if called within an asynchronous execution context.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13358490,"byte_end":13358563,"line_start":301,"line_end":301,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13358568,"byte_end":13358571,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13358576,"byte_end":13358587,"line_start":303,"line_end":303,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13358592,"byte_end":13358595,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ Since this function internally calls [`Runtime::block_on`], and drives","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13358600,"byte_end":13358674,"line_start":305,"line_end":305,"column_start":5,"column_end":79}},{"value":"/ futures in the local task set inside that call to `block_on`, the local","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13358679,"byte_end":13358754,"line_start":306,"line_end":306,"column_start":5,"column_end":80}},{"value":"/ futures may not use [in-place blocking]. If a blocking call needs to be","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13358759,"byte_end":13358834,"line_start":307,"line_end":307,"column_start":5,"column_end":80}},{"value":"/ issued from a local task, the [`spawn_blocking`] API may be used instead.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13358839,"byte_end":13358916,"line_start":308,"line_end":308,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13358921,"byte_end":13358924,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ For example, this will panic:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13358929,"byte_end":13358962,"line_start":310,"line_end":310,"column_start":5,"column_end":38}},{"value":"/ ```should_panic","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13358967,"byte_end":13358986,"line_start":311,"line_end":311,"column_start":5,"column_end":24}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13358991,"byte_end":13359023,"line_start":312,"line_end":312,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13359028,"byte_end":13359048,"line_start":313,"line_end":313,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13359053,"byte_end":13359056,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13359061,"byte_end":13359102,"line_start":315,"line_end":315,"column_start":5,"column_end":46}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13359107,"byte_end":13359145,"line_start":316,"line_end":316,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&mut rt, async {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13359150,"byte_end":13359185,"line_start":317,"line_end":317,"column_start":5,"column_end":40}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13359190,"byte_end":13359234,"line_start":318,"line_end":318,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::block_in_place(|| {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13359239,"byte_end":13359298,"line_start":319,"line_end":319,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13359303,"byte_end":13359325,"line_start":320,"line_end":320,"column_start":5,"column_end":27}},{"value":"/         });","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13359330,"byte_end":13359345,"line_start":321,"line_end":321,"column_start":5,"column_end":20}},{"value":"/         // ...","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13359350,"byte_end":13359368,"line_start":322,"line_end":322,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13359373,"byte_end":13359384,"line_start":323,"line_end":323,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13359389,"byte_end":13359417,"line_start":324,"line_end":324,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13359422,"byte_end":13359428,"line_start":325,"line_end":325,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13359433,"byte_end":13359440,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/ This, however, will not panic:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13359445,"byte_end":13359479,"line_start":327,"line_end":327,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13359484,"byte_end":13359491,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13359496,"byte_end":13359528,"line_start":329,"line_end":329,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13359533,"byte_end":13359553,"line_start":330,"line_end":330,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13359558,"byte_end":13359561,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13359566,"byte_end":13359607,"line_start":332,"line_end":332,"column_start":5,"column_end":46}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13359612,"byte_end":13359650,"line_start":333,"line_end":333,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&mut rt, async {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13359655,"byte_end":13359690,"line_start":334,"line_end":334,"column_start":5,"column_end":40}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13359695,"byte_end":13359739,"line_start":335,"line_end":335,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::spawn_blocking(|| {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13359744,"byte_end":13359803,"line_start":336,"line_end":336,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13359808,"byte_end":13359830,"line_start":337,"line_end":337,"column_start":5,"column_end":27}},{"value":"/         }).await;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13359835,"byte_end":13359856,"line_start":338,"line_end":338,"column_start":5,"column_end":26}},{"value":"/         // ...","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13359861,"byte_end":13359879,"line_start":339,"line_end":339,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13359884,"byte_end":13359895,"line_start":340,"line_end":340,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13359900,"byte_end":13359928,"line_start":341,"line_end":341,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13359933,"byte_end":13359939,"line_start":342,"line_end":342,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13359944,"byte_end":13359951,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13359956,"byte_end":13359959,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13359964,"byte_end":13359999,"line_start":345,"line_end":345,"column_start":5,"column_end":40}},{"value":"/ [`Runtime::block_on`]: method@crate::runtime::Runtime::block_on","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13360004,"byte_end":13360071,"line_start":346,"line_end":346,"column_start":5,"column_end":72}},{"value":"/ [in-place blocking]: fn@crate::task::block_in_place","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13360076,"byte_end":13360131,"line_start":347,"line_end":347,"column_start":5,"column_end":60}},{"value":"/ [`spawn_blocking`]: fn@crate::task::spawn_blocking","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13360136,"byte_end":13360190,"line_start":348,"line_end":348,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":8994},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13361461,"byte_end":13361470,"line_start":384,"line_end":384,"column_start":18,"column_end":27},"name":"run_until","qualname":"<LocalSet>::run_until","value":"pub async fn run_until<F, '_>(&'_ Self, F) -> /*impl Trait*/ where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the local set, returning its output.","sig":null,"attributes":[{"value":"/ Run a future to completion on the local set, returning its output.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13360369,"byte_end":13360439,"line_start":356,"line_end":356,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13360444,"byte_end":13360447,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ This returns a future that runs the given future with a local set,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13360452,"byte_end":13360522,"line_start":358,"line_end":358,"column_start":5,"column_end":75}},{"value":"/ allowing it to call [`spawn_local`] to spawn additional `!Send` futures.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13360527,"byte_end":13360603,"line_start":359,"line_end":359,"column_start":5,"column_end":81}},{"value":"/ Any local futures spawned on the local set will be driven in the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13360608,"byte_end":13360676,"line_start":360,"line_end":360,"column_start":5,"column_end":73}},{"value":"/ background until the future passed to `run_until` completes. When the future","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13360681,"byte_end":13360761,"line_start":361,"line_end":361,"column_start":5,"column_end":85}},{"value":"/ passed to `run` finishes, any local futures which have not completed","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13360766,"byte_end":13360838,"line_start":362,"line_end":362,"column_start":5,"column_end":77}},{"value":"/ will remain on the local set, and will be driven on subsequent calls to","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13360843,"byte_end":13360918,"line_start":363,"line_end":363,"column_start":5,"column_end":80}},{"value":"/ `run_until` or when [awaiting the local set] itself.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13360923,"byte_end":13360979,"line_start":364,"line_end":364,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13360984,"byte_end":13360987,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13360992,"byte_end":13361006,"line_start":366,"line_end":366,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13361011,"byte_end":13361014,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13361019,"byte_end":13361030,"line_start":368,"line_end":368,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13361035,"byte_end":13361055,"line_start":369,"line_end":369,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13361060,"byte_end":13361063,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13361068,"byte_end":13361086,"line_start":371,"line_end":371,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13361091,"byte_end":13361112,"line_start":372,"line_end":372,"column_start":5,"column_end":26}},{"value":"/     task::LocalSet::new().run_until(async {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13361117,"byte_end":13361164,"line_start":373,"line_end":373,"column_start":5,"column_end":52}},{"value":"/         task::spawn_local(async move {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13361169,"byte_end":13361211,"line_start":374,"line_end":374,"column_start":5,"column_end":47}},{"value":"/             // ...","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13361216,"byte_end":13361238,"line_start":375,"line_end":375,"column_start":5,"column_end":27}},{"value":"/         }).await.unwrap();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13361243,"byte_end":13361273,"line_start":376,"line_end":376,"column_start":5,"column_end":35}},{"value":"/         // ...","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13361278,"byte_end":13361296,"line_start":377,"line_end":377,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13361301,"byte_end":13361318,"line_start":378,"line_end":378,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13361323,"byte_end":13361328,"line_start":379,"line_end":379,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13361333,"byte_end":13361340,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13361345,"byte_end":13361348,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13361353,"byte_end":13361388,"line_start":382,"line_end":382,"column_start":5,"column_end":40}},{"value":"/ [awaiting the local set]: #awaiting-a-localset","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13361393,"byte_end":13361443,"line_start":383,"line_end":383,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":9075},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13370541,"byte_end":13370549,"line_start":95,"line_end":95,"column_start":12,"column_end":20},"name":"LocalKey","qualname":"::task::task_local::LocalKey","value":"LocalKey { inner }","parent":null,"children":[{"krate":0,"index":9077}],"decl_id":null,"docs":" A key for task-local data.","sig":null,"attributes":[{"value":"/ A key for task-local data.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13369631,"byte_end":13369661,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13369662,"byte_end":13369665,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ This type is generated by the `task_local!` macro.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13369666,"byte_end":13369720,"line_start":65,"line_end":65,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13369721,"byte_end":13369724,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Unlike [`std::thread::LocalKey`], `tokio::task::LocalKey` will","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13369725,"byte_end":13369791,"line_start":67,"line_end":67,"column_start":1,"column_end":67}},{"value":"/ _not_ lazily initialize the value on first access. Instead, the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13369792,"byte_end":13369859,"line_start":68,"line_end":68,"column_start":1,"column_end":68}},{"value":"/ value is first initialized when the future containing","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13369860,"byte_end":13369917,"line_start":69,"line_end":69,"column_start":1,"column_end":58}},{"value":"/ the task-local is first polled by a futures executor, like Tokio.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13369918,"byte_end":13369987,"line_start":70,"line_end":70,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13369988,"byte_end":13369991,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13369992,"byte_end":13370006,"line_start":72,"line_end":72,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13370007,"byte_end":13370010,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13370011,"byte_end":13370018,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13370019,"byte_end":13370041,"line_start":75,"line_end":75,"column_start":1,"column_end":23}},{"value":"/ tokio::task_local! {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13370042,"byte_end":13370066,"line_start":76,"line_end":76,"column_start":1,"column_end":25}},{"value":"/     static NUMBER: u32;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13370067,"byte_end":13370094,"line_start":77,"line_end":77,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13370095,"byte_end":13370100,"line_start":78,"line_end":78,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13370101,"byte_end":13370104,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13370105,"byte_end":13370137,"line_start":80,"line_end":80,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 1);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13370138,"byte_end":13370174,"line_start":81,"line_end":81,"column_start":1,"column_end":37}},{"value":"/ }).await;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13370175,"byte_end":13370188,"line_start":82,"line_end":82,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13370189,"byte_end":13370192,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(2, async move {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13370193,"byte_end":13370225,"line_start":84,"line_end":84,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 2);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13370226,"byte_end":13370262,"line_start":85,"line_end":85,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13370263,"byte_end":13370266,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     NUMBER.scope(3, async move {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13370267,"byte_end":13370303,"line_start":87,"line_end":87,"column_start":1,"column_end":37}},{"value":"/         assert_eq!(NUMBER.get(), 3);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13370304,"byte_end":13370344,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/     }).await;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13370345,"byte_end":13370362,"line_start":89,"line_end":89,"column_start":1,"column_end":18}},{"value":"/ }).await;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13370363,"byte_end":13370376,"line_start":90,"line_end":90,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13370377,"byte_end":13370384,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13370385,"byte_end":13370392,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ [`std::thread::LocalKey`]: struct@std::thread::LocalKey","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13370393,"byte_end":13370452,"line_start":93,"line_end":93,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":9077},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13370591,"byte_end":13370596,"line_start":97,"line_end":97,"column_start":9,"column_end":14},"name":"inner","qualname":"::task::task_local::LocalKey::inner","value":"std::thread::LocalKey<std::cell::RefCell<std::option::Option<T>>>","parent":{"krate":0,"index":9075},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9080},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13371124,"byte_end":13371129,"line_start":118,"line_end":118,"column_start":18,"column_end":23},"name":"scope","qualname":"<LocalKey<T>>::scope","value":"pub async fn scope<F>(&'static Self, T, F) -> /*impl Trait*/ where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Sets a value `T` as the task-local value for the future `F`.","sig":null,"attributes":[{"value":"/ Sets a value `T` as the task-local value for the future `F`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13370674,"byte_end":13370738,"line_start":101,"line_end":101,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13370743,"byte_end":13370746,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ On completion of `scope`, the task-local will be dropped.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13370751,"byte_end":13370812,"line_start":103,"line_end":103,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13370817,"byte_end":13370820,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ### Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13370825,"byte_end":13370841,"line_start":105,"line_end":105,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13370846,"byte_end":13370849,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13370854,"byte_end":13370861,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13370866,"byte_end":13370888,"line_start":108,"line_end":108,"column_start":5,"column_end":27}},{"value":"/ tokio::task_local! {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13370893,"byte_end":13370917,"line_start":109,"line_end":109,"column_start":5,"column_end":29}},{"value":"/     static NUMBER: u32;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13370922,"byte_end":13370949,"line_start":110,"line_end":110,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13370954,"byte_end":13370959,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13370964,"byte_end":13370967,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13370972,"byte_end":13371004,"line_start":113,"line_end":113,"column_start":5,"column_end":37}},{"value":"/     println!(\"task local value: {}\", NUMBER.get());","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13371009,"byte_end":13371064,"line_start":114,"line_end":114,"column_start":5,"column_end":60}},{"value":"/ }).await;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13371069,"byte_end":13371082,"line_start":115,"line_end":115,"column_start":5,"column_end":18}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13371087,"byte_end":13371094,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13371099,"byte_end":13371106,"line_start":117,"line_end":117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9084},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13371603,"byte_end":13371607,"line_start":136,"line_end":136,"column_start":12,"column_end":16},"name":"with","qualname":"<LocalKey<T>>::with","value":"pub fn with<F, R>(&'static Self, F) -> R where F: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13371354,"byte_end":13371420,"line_start":130,"line_end":130,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13371425,"byte_end":13371428,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13371433,"byte_end":13371445,"line_start":132,"line_end":132,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13371450,"byte_end":13371453,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13371458,"byte_end":13371519,"line_start":134,"line_end":134,"column_start":5,"column_end":66}},{"value":"/ of a future containing a task-local with the corresponding key.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13371524,"byte_end":13371591,"line_start":135,"line_end":135,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":9087},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13372095,"byte_end":13372103,"line_start":151,"line_end":151,"column_start":12,"column_end":20},"name":"try_with","qualname":"<LocalKey<T>>::try_with","value":"pub fn try_with<F, R>(&'static Self, F) -> Result<R, AccessError> where\nF: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13371848,"byte_end":13371914,"line_start":146,"line_end":146,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13371919,"byte_end":13371922,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ If the task-local with the accociated key is not present, this","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13371927,"byte_end":13371993,"line_start":148,"line_end":148,"column_start":5,"column_end":71}},{"value":"/ method will return an `AccessError`. For a panicking variant,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13371998,"byte_end":13372063,"line_start":149,"line_end":149,"column_start":5,"column_end":70}},{"value":"/ see `with`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13372068,"byte_end":13372083,"line_start":150,"line_end":150,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":9093},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13372563,"byte_end":13372566,"line_start":168,"line_end":168,"column_start":12,"column_end":15},"name":"get","qualname":"<LocalKey<T>>::get","value":"pub fn get(&'static Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the task-local value\n if the task-local value implements `Copy`.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the task-local value","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13372458,"byte_end":13372500,"line_start":166,"line_end":166,"column_start":5,"column_end":47}},{"value":"/ if the task-local value implements `Copy`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13372505,"byte_end":13372551,"line_start":167,"line_end":167,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":9137},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13374055,"byte_end":13374066,"line_start":226,"line_end":226,"column_start":12,"column_end":23},"name":"AccessError","qualname":"::task::task_local::AccessError","value":"AccessError {  }","parent":null,"children":[{"krate":0,"index":9138}],"decl_id":null,"docs":" An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).\n","sig":null,"attributes":[{"value":"/ An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13373930,"byte_end":13374005,"line_start":224,"line_end":224,"column_start":1,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":9149},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","parent":null,"children":[{"krate":0,"index":9150},{"krate":0,"index":9151},{"krate":0,"index":9154},{"krate":0,"index":9267},{"krate":0,"index":9270},{"krate":0,"index":9304},{"krate":0,"index":9305},{"krate":0,"index":9308},{"krate":0,"index":9311},{"krate":0,"index":9314},{"krate":0,"index":9622},{"krate":0,"index":9643},{"krate":0,"index":9646},{"krate":0,"index":9690},{"krate":0,"index":9693},{"krate":0,"index":9734},{"krate":0,"index":9735},{"krate":0,"index":9738},{"krate":0,"index":9741},{"krate":0,"index":9744},{"krate":0,"index":9798},{"krate":0,"index":9799},{"krate":0,"index":9802},{"krate":0,"index":9805},{"krate":0,"index":9808},{"krate":0,"index":10074},{"krate":0,"index":10118},{"krate":0,"index":10119},{"krate":0,"index":10122},{"krate":0,"index":9811},{"krate":0,"index":9891},{"krate":0,"index":9894},{"krate":0,"index":9899}],"decl_id":null,"docs":" Utilities for tracking time.","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":23137,"byte_end":23161,"line_start":324,"line_end":324,"column_start":13,"column_end":37}},{"value":"/ Utilities for tracking time.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13374439,"byte_end":13374471,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13374472,"byte_end":13374475,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides a number of types for executing code after a set period","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13374476,"byte_end":13374556,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ of time.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13374557,"byte_end":13374569,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13374570,"byte_end":13374573,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * `Delay` is a future that does no work and completes at a specific `Instant`","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13374574,"byte_end":13374655,"line_start":6,"line_end":6,"column_start":1,"column_end":82}},{"value":"/   in time.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13374656,"byte_end":13374670,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13374671,"byte_end":13374674,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * `Interval` is a stream yielding a value at a fixed period. It is","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13374675,"byte_end":13374745,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/   initialized with a `Duration` and repeatedly yields each time the duration","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13374746,"byte_end":13374826,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/   elapses.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13374827,"byte_end":13374841,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13374842,"byte_end":13374845,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ * `Timeout`: Wraps a future or stream, setting an upper bound to the amount","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13374846,"byte_end":13374925,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/   of time it is allowed to execute. If the future or stream does not","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13374926,"byte_end":13374998,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/   complete in time, then it is canceled and an error is returned.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13374999,"byte_end":13375068,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13375069,"byte_end":13375072,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ * `DelayQueue`: A queue where items are returned once the requested delay","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13375073,"byte_end":13375150,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/   has expired.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13375151,"byte_end":13375169,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13375170,"byte_end":13375173,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ These types are sufficient for handling a large number of scenarios","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13375174,"byte_end":13375245,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ involving time.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13375246,"byte_end":13375265,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13375266,"byte_end":13375269,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ These types must be used from within the context of the `Runtime`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13375270,"byte_end":13375340,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13375341,"byte_end":13375344,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13375345,"byte_end":13375359,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13375360,"byte_end":13375363,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13375364,"byte_end":13375410,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13375411,"byte_end":13375414,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13375415,"byte_end":13375422,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::delay_for;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13375423,"byte_end":13375454,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13375455,"byte_end":13375458,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13375459,"byte_end":13375487,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13375488,"byte_end":13375491,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13375492,"byte_end":13375495,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13375496,"byte_end":13375514,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13375515,"byte_end":13375536,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/     delay_for(Duration::from_millis(100)).await;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13375537,"byte_end":13375589,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13375590,"byte_end":13375630,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13375631,"byte_end":13375636,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13375637,"byte_end":13375644,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13375645,"byte_end":13375648,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Require that an operation takes no more than 300ms. Note that this uses the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13375649,"byte_end":13375728,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ `timeout` function on the `FutureExt` trait. This trait is included in the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13375729,"byte_end":13375807,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"/ prelude.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13375808,"byte_end":13375820,"line_start":44,"line_end":44,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13375821,"byte_end":13375824,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13375825,"byte_end":13375832,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{timeout, Duration};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13375833,"byte_end":13375874,"line_start":47,"line_end":47,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13375875,"byte_end":13375878,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ async fn long_future() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13375879,"byte_end":13375907,"line_start":49,"line_end":49,"column_start":1,"column_end":29}},{"value":"/     // do work here","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13375908,"byte_end":13375931,"line_start":50,"line_end":50,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13375932,"byte_end":13375937,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13375938,"byte_end":13375941,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13375942,"byte_end":13375964,"line_start":53,"line_end":53,"column_start":1,"column_end":23}},{"value":"/ let res = timeout(Duration::from_secs(1), long_future()).await;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13375965,"byte_end":13376032,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13376033,"byte_end":13376036,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ if res.is_err() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13376037,"byte_end":13376058,"line_start":56,"line_end":56,"column_start":1,"column_end":22}},{"value":"/     println!(\"operation timed out\");","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13376059,"byte_end":13376099,"line_start":57,"line_end":57,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13376100,"byte_end":13376105,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13376106,"byte_end":13376113,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13376114,"byte_end":13376121,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13376122,"byte_end":13376125,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ A simple example using [`interval`] to execute a task every two seconds.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13376126,"byte_end":13376202,"line_start":62,"line_end":62,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13376203,"byte_end":13376206,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ The difference between [`interval`] and [`delay_for`] is that an","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13376207,"byte_end":13376275,"line_start":64,"line_end":64,"column_start":1,"column_end":69}},{"value":"/ [`interval`] measures the time since the last tick, which means that","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13376276,"byte_end":13376348,"line_start":65,"line_end":65,"column_start":1,"column_end":73}},{"value":"/ `.tick().await` may wait for a shorter time than the duration specified","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13376349,"byte_end":13376424,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"/ for the interval if some time has passed between calls to `.tick().await`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13376425,"byte_end":13376503,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13376504,"byte_end":13376507,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`delay_for`], the task","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13376508,"byte_end":13376586,"line_start":69,"line_end":69,"column_start":1,"column_end":79}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13376587,"byte_end":13376657,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13376658,"byte_end":13376670,"line_start":71,"line_end":71,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13376671,"byte_end":13376674,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13376675,"byte_end":13376682,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13376683,"byte_end":13376703,"line_start":74,"line_end":74,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13376704,"byte_end":13376707,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13376708,"byte_end":13376749,"line_start":76,"line_end":76,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13376750,"byte_end":13376776,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"/     time::delay_for(time::Duration::from_secs(1)).await","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13376777,"byte_end":13376836,"line_start":78,"line_end":78,"column_start":1,"column_end":60}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13376837,"byte_end":13376842,"line_start":79,"line_end":79,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13376843,"byte_end":13376846,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13376847,"byte_end":13376865,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13376866,"byte_end":13376887,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13376888,"byte_end":13376960,"line_start":83,"line_end":83,"column_start":1,"column_end":73}},{"value":"/     for _i in 0..5 {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13376961,"byte_end":13376985,"line_start":84,"line_end":84,"column_start":1,"column_end":25}},{"value":"/         interval.tick().await;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13376986,"byte_end":13377020,"line_start":85,"line_end":85,"column_start":1,"column_end":35}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13377021,"byte_end":13377066,"line_start":86,"line_end":86,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13377067,"byte_end":13377076,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13377077,"byte_end":13377082,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13377083,"byte_end":13377090,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13377091,"byte_end":13377094,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ [`delay_for`]: crate::time::delay_for()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13377095,"byte_end":13377138,"line_start":91,"line_end":91,"column_start":1,"column_end":44}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13377139,"byte_end":13377180,"line_start":92,"line_end":92,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":9154},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"delay_queue","qualname":"::time::delay_queue","value":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","parent":null,"children":[{"krate":0,"index":9155},{"krate":0,"index":9156},{"krate":0,"index":9159},{"krate":0,"index":9162},{"krate":0,"index":9163},{"krate":0,"index":9166},{"krate":0,"index":9169},{"krate":0,"index":9172},{"krate":0,"index":9175},{"krate":0,"index":9178},{"krate":0,"index":9181},{"krate":0,"index":9184},{"krate":0,"index":9187},{"krate":0,"index":9188},{"krate":0,"index":9190},{"krate":0,"index":9193},{"krate":0,"index":9194},{"krate":0,"index":9197},{"krate":0,"index":9920},{"krate":0,"index":9928},{"krate":0,"index":9931},{"krate":0,"index":9936},{"krate":0,"index":9939},{"krate":0,"index":9941},{"krate":0,"index":9943},{"krate":0,"index":9945},{"krate":0,"index":9949},{"krate":0,"index":9952},{"krate":0,"index":9959},{"krate":0,"index":9200},{"krate":0,"index":9201},{"krate":0,"index":9237},{"krate":0,"index":9239},{"krate":0,"index":9242},{"krate":0,"index":9246},{"krate":0,"index":9256},{"krate":0,"index":9259},{"krate":0,"index":9261}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"/ A queue of delayed elements.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13383331,"byte_end":13383363,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13383364,"byte_end":13383367,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ See [`DelayQueue`] for more details.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13383368,"byte_end":13383408,"line_start":3,"line_end":3,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13383409,"byte_end":13383412,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13383413,"byte_end":13383450,"line_start":5,"line_end":5,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":9920},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13387761,"byte_end":13387771,"line_start":126,"line_end":126,"column_start":12,"column_end":22},"name":"DelayQueue","qualname":"::time::delay_queue::DelayQueue","value":"DelayQueue {  }","parent":null,"children":[{"krate":0,"index":9922},{"krate":0,"index":9923},{"krate":0,"index":9924},{"krate":0,"index":9925},{"krate":0,"index":9926},{"krate":0,"index":9927}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"/ A queue of delayed elements.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13383691,"byte_end":13383723,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13383724,"byte_end":13383727,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Once an element is inserted into the `DelayQueue`, it is yielded once the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13383728,"byte_end":13383805,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ specified deadline has been reached.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13383806,"byte_end":13383846,"line_start":20,"line_end":20,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13383847,"byte_end":13383850,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13383851,"byte_end":13383862,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13383863,"byte_end":13383866,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Elements are inserted into `DelayQueue` using the [`insert`] or","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13383867,"byte_end":13383934,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ [`insert_at`] methods. A deadline is provided with the item and a [`Key`] is","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13383935,"byte_end":13384015,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ returned. The key is used to remove the entry or to change the deadline at","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13384016,"byte_end":13384094,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ which it should be yielded back.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13384095,"byte_end":13384131,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13384132,"byte_end":13384135,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Once delays have been configured, the `DelayQueue` is used via its","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13384136,"byte_end":13384206,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ [`Stream`] implementation. [`poll_expired`] is called. If an entry has reached its","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13384207,"byte_end":13384293,"line_start":30,"line_end":30,"column_start":1,"column_end":87}},{"value":"/ deadline, it is returned. If not, `Poll::Pending` indicating that the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13384294,"byte_end":13384367,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ current task will be notified once the deadline has been reached.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13384368,"byte_end":13384437,"line_start":32,"line_end":32,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13384438,"byte_end":13384441,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # `Stream` implementation","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13384442,"byte_end":13384471,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13384472,"byte_end":13384475,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Items are retrieved from the queue via [`DelayQueue::poll_expired`]. If no delays have","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13384476,"byte_end":13384566,"line_start":36,"line_end":36,"column_start":1,"column_end":91}},{"value":"/ expired, no items are returned. In this case, `NotReady` is returned and the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13384567,"byte_end":13384647,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ current task is registered to be notified once the next item's delay has","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13384648,"byte_end":13384724,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/ expired.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13384725,"byte_end":13384737,"line_start":39,"line_end":39,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13384738,"byte_end":13384741,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ If no items are in the queue, i.e. `is_empty()` returns `true`, then `poll`","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13384742,"byte_end":13384821,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ returns `Ready(None)`. This indicates that the stream has reached an end.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13384822,"byte_end":13384899,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ However, if a new item is inserted *after*, `poll` will once again start","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13384900,"byte_end":13384976,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ returning items or `NotReady.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13384977,"byte_end":13385010,"line_start":44,"line_end":44,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13385011,"byte_end":13385014,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Items are returned ordered by their expirations. Items that are configured","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13385015,"byte_end":13385093,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/ to expire first will be returned first. There are no ordering guarantees","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13385094,"byte_end":13385170,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/ for items configured to expire the same instant. Also note that delays are","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13385171,"byte_end":13385249,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ rounded to the closest millisecond.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13385250,"byte_end":13385289,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13385290,"byte_end":13385293,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13385294,"byte_end":13385314,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13385315,"byte_end":13385318,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ The [`DelayQueue`] is backed by a separate instance of the same timer wheel used internally by","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13385319,"byte_end":13385417,"line_start":53,"line_end":53,"column_start":1,"column_end":99}},{"value":"/ Tokio's standalone timer utilities such as [`delay_for`]. Because of this, it offers the same","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13385418,"byte_end":13385515,"line_start":54,"line_end":54,"column_start":1,"column_end":98}},{"value":"/ performance and scalability benefits.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13385516,"byte_end":13385557,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13385558,"byte_end":13385561,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ State associated with each entry is stored in a [`slab`]. This amortizes the cost of allocation,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13385562,"byte_end":13385662,"line_start":57,"line_end":57,"column_start":1,"column_end":101}},{"value":"/ and allows reuse of the memory allocated for expired entires.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13385663,"byte_end":13385728,"line_start":58,"line_end":58,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13385729,"byte_end":13385732,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Capacity can be checked using [`capacity`] and allocated preemptively by using","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13385733,"byte_end":13385815,"line_start":60,"line_end":60,"column_start":1,"column_end":83}},{"value":"/ the [`reserve`] method.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13385816,"byte_end":13385843,"line_start":61,"line_end":61,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13385844,"byte_end":13385847,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13385848,"byte_end":13385859,"line_start":63,"line_end":63,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13385860,"byte_end":13385863,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Using `DelayQueue` to manage cache entries.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13385864,"byte_end":13385911,"line_start":65,"line_end":65,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13385912,"byte_end":13385915,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13385916,"byte_end":13385934,"line_start":67,"line_end":67,"column_start":1,"column_end":19}},{"value":"/ use tokio::time::{delay_queue, DelayQueue, Error};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13385935,"byte_end":13385989,"line_start":68,"line_end":68,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13385990,"byte_end":13385993,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ use futures::ready;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13385994,"byte_end":13386017,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13386018,"byte_end":13386052,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13386053,"byte_end":13386088,"line_start":72,"line_end":72,"column_start":1,"column_end":36}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13386089,"byte_end":13386117,"line_start":73,"line_end":73,"column_start":1,"column_end":29}},{"value":"/ # type CacheKey = String;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13386118,"byte_end":13386147,"line_start":74,"line_end":74,"column_start":1,"column_end":30}},{"value":"/ # type Value = String;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13386148,"byte_end":13386174,"line_start":75,"line_end":75,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13386175,"byte_end":13386178,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ struct Cache {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13386179,"byte_end":13386197,"line_start":77,"line_end":77,"column_start":1,"column_end":19}},{"value":"/     entries: HashMap<CacheKey, (Value, delay_queue::Key)>,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13386198,"byte_end":13386260,"line_start":78,"line_end":78,"column_start":1,"column_end":63}},{"value":"/     expirations: DelayQueue<CacheKey>,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13386261,"byte_end":13386303,"line_start":79,"line_end":79,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13386304,"byte_end":13386309,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13386310,"byte_end":13386313,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ const TTL_SECS: u64 = 30;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13386314,"byte_end":13386343,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13386344,"byte_end":13386347,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ impl Cache {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13386348,"byte_end":13386364,"line_start":84,"line_end":84,"column_start":1,"column_end":17}},{"value":"/     fn insert(&mut self, key: CacheKey, value: Value) {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13386365,"byte_end":13386424,"line_start":85,"line_end":85,"column_start":1,"column_end":60}},{"value":"/         let delay = self.expirations","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13386425,"byte_end":13386465,"line_start":86,"line_end":86,"column_start":1,"column_end":41}},{"value":"/             .insert(key.clone(), Duration::from_secs(TTL_SECS));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13386466,"byte_end":13386534,"line_start":87,"line_end":87,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13386535,"byte_end":13386538,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/         self.entries.insert(key, (value, delay));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13386539,"byte_end":13386592,"line_start":89,"line_end":89,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13386593,"byte_end":13386602,"line_start":90,"line_end":90,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13386603,"byte_end":13386606,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/     fn get(&self, key: &CacheKey) -> Option<&Value> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13386607,"byte_end":13386664,"line_start":92,"line_end":92,"column_start":1,"column_end":58}},{"value":"/         self.entries.get(key)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13386665,"byte_end":13386698,"line_start":93,"line_end":93,"column_start":1,"column_end":34}},{"value":"/             .map(|&(ref v, _)| v)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13386699,"byte_end":13386736,"line_start":94,"line_end":94,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13386737,"byte_end":13386746,"line_start":95,"line_end":95,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13386747,"byte_end":13386750,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn remove(&mut self, key: &CacheKey) {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13386751,"byte_end":13386797,"line_start":97,"line_end":97,"column_start":1,"column_end":47}},{"value":"/         if let Some((_, cache_key)) = self.entries.remove(key) {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13386798,"byte_end":13386866,"line_start":98,"line_end":98,"column_start":1,"column_end":69}},{"value":"/             self.expirations.remove(&cache_key);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13386867,"byte_end":13386919,"line_start":99,"line_end":99,"column_start":1,"column_end":53}},{"value":"/         }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13386920,"byte_end":13386933,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13386934,"byte_end":13386943,"line_start":101,"line_end":101,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13386944,"byte_end":13386947,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/     fn poll_purge(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Error>> {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13386948,"byte_end":13387031,"line_start":103,"line_end":103,"column_start":1,"column_end":84}},{"value":"/         while let Some(res) = ready!(self.expirations.poll_expired(cx)) {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13387032,"byte_end":13387109,"line_start":104,"line_end":104,"column_start":1,"column_end":78}},{"value":"/             let entry = res?;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13387110,"byte_end":13387143,"line_start":105,"line_end":105,"column_start":1,"column_end":34}},{"value":"/             self.entries.remove(entry.get_ref());","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13387144,"byte_end":13387197,"line_start":106,"line_end":106,"column_start":1,"column_end":54}},{"value":"/         }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13387198,"byte_end":13387211,"line_start":107,"line_end":107,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13387212,"byte_end":13387215,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/         Poll::Ready(Ok(()))","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13387216,"byte_end":13387247,"line_start":109,"line_end":109,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13387248,"byte_end":13387257,"line_start":110,"line_end":110,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13387258,"byte_end":13387263,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13387264,"byte_end":13387271,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13387272,"byte_end":13387275,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ [`insert`]: method@Self::insert","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13387276,"byte_end":13387311,"line_start":114,"line_end":114,"column_start":1,"column_end":36}},{"value":"/ [`insert_at`]: method@Self::insert_at","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13387312,"byte_end":13387353,"line_start":115,"line_end":115,"column_start":1,"column_end":42}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13387354,"byte_end":13387377,"line_start":116,"line_end":116,"column_start":1,"column_end":24}},{"value":"/ [`Stream`]: https://docs.rs/futures/0.1/futures/stream/trait.Stream.html","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13387378,"byte_end":13387454,"line_start":117,"line_end":117,"column_start":1,"column_end":77}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13387455,"byte_end":13387502,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/ [`Stream::poll_expired`]: method@Self::poll_expired","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13387503,"byte_end":13387558,"line_start":119,"line_end":119,"column_start":1,"column_end":56}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13387559,"byte_end":13387596,"line_start":120,"line_end":120,"column_start":1,"column_end":38}},{"value":"/ [`delay_for`]: fn@super::delay_for","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13387597,"byte_end":13387635,"line_start":121,"line_end":121,"column_start":1,"column_end":39}},{"value":"/ [`slab`]: slab","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13387636,"byte_end":13387654,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/ [`capacity`]: method@Self::capacity","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13387655,"byte_end":13387694,"line_start":123,"line_end":123,"column_start":1,"column_end":40}},{"value":"/ [`reserve`]: method@Self::reserve","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13387695,"byte_end":13387732,"line_start":124,"line_end":124,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":9931},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13388486,"byte_end":13388493,"line_start":153,"line_end":153,"column_start":12,"column_end":19},"name":"Expired","qualname":"::time::delay_queue::Expired","value":"Expired {  }","parent":null,"children":[{"krate":0,"index":9933},{"krate":0,"index":9934},{"krate":0,"index":9935}],"decl_id":null,"docs":" An entry in `DelayQueue` that has expired and removed.","sig":null,"attributes":[{"value":"/ An entry in `DelayQueue` that has expired and removed.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13388268,"byte_end":13388326,"line_start":147,"line_end":147,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13388327,"byte_end":13388330,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ Values are returned by [`DelayQueue::poll_expired`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13388331,"byte_end":13388387,"line_start":149,"line_end":149,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13388388,"byte_end":13388391,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue::poll_expired`]: method@DelayQueue::poll_expired","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13388392,"byte_end":13388457,"line_start":151,"line_end":151,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":9939},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13388961,"byte_end":13388964,"line_start":172,"line_end":172,"column_start":12,"column_end":15},"name":"Key","qualname":"::time::delay_queue::Key","value":"Key {  }","parent":null,"children":[{"krate":0,"index":9940}],"decl_id":null,"docs":" Token to a value stored in a `DelayQueue`.","sig":null,"attributes":[{"value":"/ Token to a value stored in a `DelayQueue`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13388661,"byte_end":13388707,"line_start":164,"line_end":164,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13388708,"byte_end":13388711,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ Instances of `Key` are returned by [`DelayQueue::insert`]. See [`DelayQueue`]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13388712,"byte_end":13388793,"line_start":166,"line_end":166,"column_start":1,"column_end":82}},{"value":"/ documentation for more details.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13388794,"byte_end":13388829,"line_start":167,"line_end":167,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13388830,"byte_end":13388833,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13388834,"byte_end":13388871,"line_start":169,"line_end":169,"column_start":1,"column_end":38}},{"value":"/ [`DelayQueue::insert`]: method@DelayQueue::insert","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13388872,"byte_end":13388925,"line_start":170,"line_end":170,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":9203},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13389942,"byte_end":13389945,"line_start":216,"line_end":216,"column_start":12,"column_end":15},"name":"new","qualname":"<DelayQueue<T>>::new","value":"pub fn new() -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty, `DelayQueue`","sig":null,"attributes":[{"value":"/ Creates a new, empty, `DelayQueue`","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13389642,"byte_end":13389680,"line_start":206,"line_end":206,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13389685,"byte_end":13389688,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ The queue will not allocate storage until items are inserted into it.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13389693,"byte_end":13389766,"line_start":208,"line_end":208,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13389771,"byte_end":13389774,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13389779,"byte_end":13389793,"line_start":210,"line_end":210,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13389798,"byte_end":13389801,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13389806,"byte_end":13389817,"line_start":212,"line_end":212,"column_start":5,"column_end":16}},{"value":"/ # use tokio::time::DelayQueue;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13389822,"byte_end":13389856,"line_start":213,"line_end":213,"column_start":5,"column_end":39}},{"value":"/ let delay_queue: DelayQueue<u32> = DelayQueue::new();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13389861,"byte_end":13389918,"line_start":214,"line_end":214,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13389923,"byte_end":13389930,"line_start":215,"line_end":215,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9204},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13390863,"byte_end":13390876,"line_start":245,"line_end":245,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<DelayQueue<T>>::with_capacity","value":"pub fn with_capacity(usize) -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty, `DelayQueue` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates a new, empty, `DelayQueue` with the specified capacity.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13390015,"byte_end":13390082,"line_start":220,"line_end":220,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13390087,"byte_end":13390090,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ The queue will be able to hold at least `capacity` elements without","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13390095,"byte_end":13390166,"line_start":222,"line_end":222,"column_start":5,"column_end":76}},{"value":"/ reallocating. If `capacity` is 0, the queue will not allocate for","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13390171,"byte_end":13390240,"line_start":223,"line_end":223,"column_start":5,"column_end":74}},{"value":"/ storage.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13390245,"byte_end":13390257,"line_start":224,"line_end":224,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13390262,"byte_end":13390265,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13390270,"byte_end":13390284,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13390289,"byte_end":13390292,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13390297,"byte_end":13390308,"line_start":228,"line_end":228,"column_start":5,"column_end":16}},{"value":"/ # use tokio::time::DelayQueue;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13390313,"byte_end":13390347,"line_start":229,"line_end":229,"column_start":5,"column_end":39}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13390352,"byte_end":13390382,"line_start":230,"line_end":230,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13390387,"byte_end":13390390,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13390395,"byte_end":13390415,"line_start":232,"line_end":232,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13390420,"byte_end":13390443,"line_start":233,"line_end":233,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::with_capacity(10);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13390448,"byte_end":13390508,"line_start":234,"line_end":234,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13390513,"byte_end":13390516,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/     // These insertions are done without further allocation","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13390521,"byte_end":13390584,"line_start":236,"line_end":236,"column_start":5,"column_end":68}},{"value":"/     for i in 0..10 {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13390589,"byte_end":13390613,"line_start":237,"line_end":237,"column_start":5,"column_end":29}},{"value":"/         delay_queue.insert(i, Duration::from_secs(i));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13390618,"byte_end":13390676,"line_start":238,"line_end":238,"column_start":5,"column_end":63}},{"value":"/     }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13390681,"byte_end":13390690,"line_start":239,"line_end":239,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13390695,"byte_end":13390698,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/     // This will make the queue allocate additional storage","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13390703,"byte_end":13390766,"line_start":241,"line_end":241,"column_start":5,"column_end":68}},{"value":"/     delay_queue.insert(11, Duration::from_secs(11));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13390771,"byte_end":13390827,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13390832,"byte_end":13390839,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13390844,"byte_end":13390851,"line_start":244,"line_end":244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9205},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13392944,"byte_end":13392953,"line_start":303,"line_end":303,"column_start":12,"column_end":21},"name":"insert_at","qualname":"<DelayQueue<T>>::insert_at","value":"pub fn insert_at(&mut Self, T, Instant) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Inserts `value` into the queue set to expire at a specific instant in\n time.","sig":null,"attributes":[{"value":"/ Inserts `value` into the queue set to expire at a specific instant in","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13391175,"byte_end":13391248,"line_start":256,"line_end":256,"column_start":5,"column_end":78}},{"value":"/ time.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13391253,"byte_end":13391262,"line_start":257,"line_end":257,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13391267,"byte_end":13391270,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert`, but takes an `Instant` instead","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13391275,"byte_end":13391349,"line_start":259,"line_end":259,"column_start":5,"column_end":79}},{"value":"/ of a `Duration`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13391354,"byte_end":13391374,"line_start":260,"line_end":260,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13391379,"byte_end":13391382,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `when` is reached. At which point,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13391387,"byte_end":13391462,"line_start":262,"line_end":262,"column_start":5,"column_end":80}},{"value":"/ `value` will be returned from [`poll_expired`]. If `when` has already been","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13391467,"byte_end":13391545,"line_start":263,"line_end":263,"column_start":5,"column_end":83}},{"value":"/ reached, then `value` is immediately made available to poll.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13391550,"byte_end":13391614,"line_start":264,"line_end":264,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13391619,"byte_end":13391622,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used at an argument to","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13391627,"byte_end":13391702,"line_start":266,"line_end":266,"column_start":5,"column_end":80}},{"value":"/ [`remove`] and [`reset`]. Note that [`Key`] is token and is reused once","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13391707,"byte_end":13391782,"line_start":267,"line_end":267,"column_start":5,"column_end":80}},{"value":"/ `value` is removed from the queue either by calling [`poll_expired`] after","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13391787,"byte_end":13391865,"line_start":268,"line_end":268,"column_start":5,"column_end":83}},{"value":"/ `when` is reached or by calling [`remove`]. At this point, the caller","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13391870,"byte_end":13391943,"line_start":269,"line_end":269,"column_start":5,"column_end":78}},{"value":"/ must take care to not use the returned [`Key`] again as it may reference","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13391948,"byte_end":13392024,"line_start":270,"line_end":270,"column_start":5,"column_end":81}},{"value":"/ a different item in the queue.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13392029,"byte_end":13392063,"line_start":271,"line_end":271,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13392068,"byte_end":13392071,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13392076,"byte_end":13392128,"line_start":273,"line_end":273,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13392133,"byte_end":13392136,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13392141,"byte_end":13392153,"line_start":275,"line_end":275,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13392158,"byte_end":13392161,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13392166,"byte_end":13392226,"line_start":277,"line_end":277,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13392231,"byte_end":13392234,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13392239,"byte_end":13392253,"line_start":279,"line_end":279,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13392258,"byte_end":13392261,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13392266,"byte_end":13392281,"line_start":281,"line_end":281,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13392286,"byte_end":13392289,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13392294,"byte_end":13392305,"line_start":283,"line_end":283,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{DelayQueue, Duration, Instant};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13392310,"byte_end":13392363,"line_start":284,"line_end":284,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13392368,"byte_end":13392371,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13392376,"byte_end":13392396,"line_start":286,"line_end":286,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13392401,"byte_end":13392424,"line_start":287,"line_end":287,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13392429,"byte_end":13392477,"line_start":288,"line_end":288,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert_at(","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13392482,"byte_end":13392522,"line_start":289,"line_end":289,"column_start":5,"column_end":45}},{"value":"/         \"foo\", Instant::now() + Duration::from_secs(5));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13392527,"byte_end":13392587,"line_start":290,"line_end":290,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13392592,"byte_end":13392595,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13392600,"byte_end":13392627,"line_start":292,"line_end":292,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13392632,"byte_end":13392676,"line_start":293,"line_end":293,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13392681,"byte_end":13392724,"line_start":294,"line_end":294,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13392729,"byte_end":13392736,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13392741,"byte_end":13392748,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13392753,"byte_end":13392756,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13392761,"byte_end":13392808,"line_start":298,"line_end":298,"column_start":5,"column_end":52}},{"value":"/ [`remove`]: method@Self::remove","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13392813,"byte_end":13392848,"line_start":299,"line_end":299,"column_start":5,"column_end":40}},{"value":"/ [`reset`]: method@Self::reset","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13392853,"byte_end":13392886,"line_start":300,"line_end":300,"column_start":5,"column_end":38}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13392891,"byte_end":13392914,"line_start":301,"line_end":301,"column_start":5,"column_end":28}},{"value":"/ [type]: #","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13392919,"byte_end":13392932,"line_start":302,"line_end":302,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":9206},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13394313,"byte_end":13394325,"line_start":343,"line_end":343,"column_start":12,"column_end":24},"name":"poll_expired","qualname":"<DelayQueue<T>>::poll_expired","value":"pub fn poll_expired(&mut Self, &mut task::Context)\n-> Poll<Option<Result<Expired<T>, Error>>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to pull out the next value of the delay queue, registering the\n current task for wakeup if the value is not yet available, and returning\n None if the queue is exhausted.\n","sig":null,"attributes":[{"value":"/ Attempts to pull out the next value of the delay queue, registering the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13394105,"byte_end":13394180,"line_start":340,"line_end":340,"column_start":5,"column_end":80}},{"value":"/ current task for wakeup if the value is not yet available, and returning","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13394185,"byte_end":13394261,"line_start":341,"line_end":341,"column_start":5,"column_end":81}},{"value":"/ None if the queue is exhausted.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13394266,"byte_end":13394301,"line_start":342,"line_end":342,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":9209},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13396729,"byte_end":13396735,"line_start":411,"line_end":411,"column_start":12,"column_end":18},"name":"insert","qualname":"<DelayQueue<T>>::insert","value":"pub fn insert(&mut Self, T, Duration) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Inserts `value` into the queue set to expire after the requested duration\n elapses.","sig":null,"attributes":[{"value":"/ Inserts `value` into the queue set to expire after the requested duration","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13394942,"byte_end":13395019,"line_start":363,"line_end":363,"column_start":5,"column_end":82}},{"value":"/ elapses.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13395024,"byte_end":13395036,"line_start":364,"line_end":364,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13395041,"byte_end":13395044,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert_at`, but takes a `Duration`","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13395049,"byte_end":13395118,"line_start":366,"line_end":366,"column_start":5,"column_end":74}},{"value":"/ instead of an `Instant`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13395123,"byte_end":13395151,"line_start":367,"line_end":367,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13395156,"byte_end":13395159,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `when` is reached. At which point,","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13395164,"byte_end":13395239,"line_start":369,"line_end":369,"column_start":5,"column_end":80}},{"value":"/ `value` will be returned from [`poll_expired`]. If `when` has already been","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13395244,"byte_end":13395322,"line_start":370,"line_end":370,"column_start":5,"column_end":83}},{"value":"/ reached, then `value` is immediately made available to poll.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13395327,"byte_end":13395391,"line_start":371,"line_end":371,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13395396,"byte_end":13395399,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used at an argument to","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13395404,"byte_end":13395479,"line_start":373,"line_end":373,"column_start":5,"column_end":80}},{"value":"/ [`remove`] and [`reset`]. Note that [`Key`] is token and is reused once","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13395484,"byte_end":13395559,"line_start":374,"line_end":374,"column_start":5,"column_end":80}},{"value":"/ `value` is removed from the queue either by calling [`poll_expired`] after","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13395564,"byte_end":13395642,"line_start":375,"line_end":375,"column_start":5,"column_end":83}},{"value":"/ `when` is reached or by calling [`remove`]. At this point, the caller","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13395647,"byte_end":13395720,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ must take care to not use the returned [`Key`] again as it may reference","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13395725,"byte_end":13395801,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ a different item in the queue.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13395806,"byte_end":13395840,"line_start":378,"line_end":378,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13395845,"byte_end":13395848,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13395853,"byte_end":13395905,"line_start":380,"line_end":380,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13395910,"byte_end":13395913,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13395918,"byte_end":13395930,"line_start":382,"line_end":382,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13395935,"byte_end":13395938,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum supported","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13395943,"byte_end":13396018,"line_start":384,"line_end":384,"column_start":5,"column_end":80}},{"value":"/ duration.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13396023,"byte_end":13396036,"line_start":385,"line_end":385,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13396041,"byte_end":13396044,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13396049,"byte_end":13396063,"line_start":387,"line_end":387,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13396068,"byte_end":13396071,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13396076,"byte_end":13396091,"line_start":389,"line_end":389,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13396096,"byte_end":13396099,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13396104,"byte_end":13396115,"line_start":391,"line_end":391,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13396120,"byte_end":13396152,"line_start":392,"line_end":392,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13396157,"byte_end":13396185,"line_start":393,"line_end":393,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13396190,"byte_end":13396193,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13396198,"byte_end":13396218,"line_start":395,"line_end":395,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13396223,"byte_end":13396246,"line_start":396,"line_end":396,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13396251,"byte_end":13396299,"line_start":397,"line_end":397,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13396304,"byte_end":13396372,"line_start":398,"line_end":398,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13396377,"byte_end":13396380,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13396385,"byte_end":13396412,"line_start":400,"line_end":400,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13396417,"byte_end":13396461,"line_start":401,"line_end":401,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13396466,"byte_end":13396509,"line_start":402,"line_end":402,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13396514,"byte_end":13396521,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13396526,"byte_end":13396533,"line_start":404,"line_end":404,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13396538,"byte_end":13396541,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13396546,"byte_end":13396593,"line_start":406,"line_end":406,"column_start":5,"column_end":52}},{"value":"/ [`remove`]: method@Self::remove","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13396598,"byte_end":13396633,"line_start":407,"line_end":407,"column_start":5,"column_end":40}},{"value":"/ [`reset`]: method@Self::reset","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13396638,"byte_end":13396671,"line_start":408,"line_end":408,"column_start":5,"column_end":38}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13396676,"byte_end":13396699,"line_start":409,"line_end":409,"column_start":5,"column_end":28}},{"value":"/ [type]: #","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13396704,"byte_end":13396717,"line_start":410,"line_end":410,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":9222},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13398812,"byte_end":13398818,"line_start":474,"line_end":474,"column_start":12,"column_end":18},"name":"remove","qualname":"<DelayQueue<T>>::remove","value":"pub fn remove(&mut Self, &Key) -> Expired<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the item associated with `key` from the queue.","sig":null,"attributes":[{"value":"/ Removes the item associated with `key` from the queue.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13397958,"byte_end":13398016,"line_start":446,"line_end":446,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13398021,"byte_end":13398024,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ There must be an item associated with `key`. The function returns the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13398029,"byte_end":13398102,"line_start":448,"line_end":448,"column_start":5,"column_end":78}},{"value":"/ removed item as well as the `Instant` at which it will the delay will","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13398107,"byte_end":13398180,"line_start":449,"line_end":449,"column_start":5,"column_end":78}},{"value":"/ have expired.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13398185,"byte_end":13398202,"line_start":450,"line_end":450,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13398207,"byte_end":13398210,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13398215,"byte_end":13398227,"line_start":452,"line_end":452,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13398232,"byte_end":13398235,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ The function panics if `key` is not contained by the queue.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13398240,"byte_end":13398303,"line_start":454,"line_end":454,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13398308,"byte_end":13398311,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13398316,"byte_end":13398330,"line_start":456,"line_end":456,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13398335,"byte_end":13398338,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13398343,"byte_end":13398358,"line_start":458,"line_end":458,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13398363,"byte_end":13398366,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13398371,"byte_end":13398382,"line_start":460,"line_end":460,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13398387,"byte_end":13398419,"line_start":461,"line_end":461,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13398424,"byte_end":13398452,"line_start":462,"line_end":462,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13398457,"byte_end":13398460,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13398465,"byte_end":13398485,"line_start":464,"line_end":464,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13398490,"byte_end":13398513,"line_start":465,"line_end":465,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13398518,"byte_end":13398566,"line_start":466,"line_end":466,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13398571,"byte_end":13398639,"line_start":467,"line_end":467,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13398644,"byte_end":13398647,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13398652,"byte_end":13398679,"line_start":469,"line_end":469,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13398684,"byte_end":13398728,"line_start":470,"line_end":470,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13398733,"byte_end":13398776,"line_start":471,"line_end":471,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13398781,"byte_end":13398788,"line_start":472,"line_end":472,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13398793,"byte_end":13398800,"line_start":473,"line_end":473,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9223},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13400226,"byte_end":13400234,"line_start":518,"line_end":518,"column_start":12,"column_end":20},"name":"reset_at","qualname":"<DelayQueue<T>>::reset_at","value":"pub fn reset_at(&mut Self, &Key, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire at `when`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire at `when`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13399112,"byte_end":13399185,"line_start":485,"line_end":485,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13399190,"byte_end":13399193,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset` but takes an `Instant` instead of","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13399198,"byte_end":13399273,"line_start":487,"line_end":487,"column_start":5,"column_end":80}},{"value":"/ a `Duration`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13399278,"byte_end":13399295,"line_start":488,"line_end":488,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13399300,"byte_end":13399303,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire at `when`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13399308,"byte_end":13399383,"line_start":490,"line_end":490,"column_start":5,"column_end":80}},{"value":"/ If `when` is in the past, then the item is immediately made available to","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13399388,"byte_end":13399464,"line_start":491,"line_end":491,"column_start":5,"column_end":81}},{"value":"/ the caller.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13399469,"byte_end":13399484,"line_start":492,"line_end":492,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13399489,"byte_end":13399492,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13399497,"byte_end":13399509,"line_start":494,"line_end":494,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13399514,"byte_end":13399517,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future or if `key` is","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13399522,"byte_end":13399596,"line_start":496,"line_end":496,"column_start":5,"column_end":79}},{"value":"/ not contained by the queue.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13399601,"byte_end":13399632,"line_start":497,"line_end":497,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13399637,"byte_end":13399640,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13399645,"byte_end":13399659,"line_start":499,"line_end":499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13399664,"byte_end":13399667,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13399672,"byte_end":13399687,"line_start":501,"line_end":501,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13399692,"byte_end":13399695,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13399700,"byte_end":13399711,"line_start":503,"line_end":503,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{DelayQueue, Duration, Instant};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13399716,"byte_end":13399769,"line_start":504,"line_end":504,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13399774,"byte_end":13399777,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13399782,"byte_end":13399802,"line_start":506,"line_end":506,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13399807,"byte_end":13399830,"line_start":507,"line_end":507,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13399835,"byte_end":13399883,"line_start":508,"line_end":508,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13399888,"byte_end":13399956,"line_start":509,"line_end":509,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13399961,"byte_end":13399964,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/     // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13399969,"byte_end":13400026,"line_start":511,"line_end":511,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13400031,"byte_end":13400034,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/     delay_queue.reset_at(&key, Instant::now() + Duration::from_secs(10));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13400039,"byte_end":13400116,"line_start":513,"line_end":513,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13400121,"byte_end":13400124,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/     // \"foo\"is now scheduled to be returned in 10 seconds","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13400129,"byte_end":13400190,"line_start":515,"line_end":515,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13400195,"byte_end":13400202,"line_start":516,"line_end":516,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13400207,"byte_end":13400214,"line_start":517,"line_end":517,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9226},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13402102,"byte_end":13402107,"line_start":575,"line_end":575,"column_start":12,"column_end":17},"name":"reset","qualname":"<DelayQueue<T>>::reset","value":"pub fn reset(&mut Self, &Key, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire after\n `timeout`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire after","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13400952,"byte_end":13401020,"line_start":540,"line_end":540,"column_start":5,"column_end":73}},{"value":"/ `timeout`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13401025,"byte_end":13401039,"line_start":541,"line_end":541,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13401044,"byte_end":13401047,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset_at` but takes a `Duration` instead","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13401052,"byte_end":13401127,"line_start":543,"line_end":543,"column_start":5,"column_end":80}},{"value":"/ of an `Instant`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13401132,"byte_end":13401152,"line_start":544,"line_end":544,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13401157,"byte_end":13401160,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire after","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13401165,"byte_end":13401235,"line_start":546,"line_end":546,"column_start":5,"column_end":75}},{"value":"/ `timeout`. If `timeout` is zero, then the item is immediately made","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13401240,"byte_end":13401310,"line_start":547,"line_end":547,"column_start":5,"column_end":75}},{"value":"/ available to the caller.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13401315,"byte_end":13401343,"line_start":548,"line_end":548,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13401348,"byte_end":13401351,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13401356,"byte_end":13401368,"line_start":550,"line_end":550,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13401373,"byte_end":13401376,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum supported","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13401381,"byte_end":13401456,"line_start":552,"line_end":552,"column_start":5,"column_end":80}},{"value":"/ duration or if `key` is not contained by the queue.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13401461,"byte_end":13401516,"line_start":553,"line_end":553,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13401521,"byte_end":13401524,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13401529,"byte_end":13401543,"line_start":555,"line_end":555,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13401548,"byte_end":13401551,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13401556,"byte_end":13401571,"line_start":557,"line_end":557,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13401576,"byte_end":13401579,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13401584,"byte_end":13401595,"line_start":559,"line_end":559,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13401600,"byte_end":13401632,"line_start":560,"line_end":560,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13401637,"byte_end":13401665,"line_start":561,"line_end":561,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13401670,"byte_end":13401673,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13401678,"byte_end":13401698,"line_start":563,"line_end":563,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13401703,"byte_end":13401726,"line_start":564,"line_end":564,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13401731,"byte_end":13401779,"line_start":565,"line_end":565,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13401784,"byte_end":13401852,"line_start":566,"line_end":566,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13401857,"byte_end":13401860,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/     // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13401865,"byte_end":13401922,"line_start":568,"line_end":568,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13401927,"byte_end":13401930,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/     delay_queue.reset(&key, Duration::from_secs(10));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13401935,"byte_end":13401992,"line_start":570,"line_end":570,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13401997,"byte_end":13402000,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/     // \"foo\"is now scheduled to be returned in 10 seconds","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13402005,"byte_end":13402066,"line_start":572,"line_end":572,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13402071,"byte_end":13402078,"line_start":573,"line_end":573,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13402083,"byte_end":13402090,"line_start":574,"line_end":574,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9227},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13402973,"byte_end":13402978,"line_start":606,"line_end":606,"column_start":12,"column_end":17},"name":"clear","qualname":"<DelayQueue<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the queue, removing all items.","sig":null,"attributes":[{"value":"/ Clears the queue, removing all items.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13402216,"byte_end":13402257,"line_start":579,"line_end":579,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13402262,"byte_end":13402265,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ After calling `clear`, [`poll_expired`] will return `Ok(Ready(None))`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13402270,"byte_end":13402344,"line_start":581,"line_end":581,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13402349,"byte_end":13402352,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ Note that this method has no effect on the allocated capacity.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13402357,"byte_end":13402423,"line_start":583,"line_end":583,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13402428,"byte_end":13402431,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13402436,"byte_end":13402483,"line_start":585,"line_end":585,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13402488,"byte_end":13402491,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13402496,"byte_end":13402510,"line_start":587,"line_end":587,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13402515,"byte_end":13402518,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13402523,"byte_end":13402534,"line_start":589,"line_end":589,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13402539,"byte_end":13402571,"line_start":590,"line_end":590,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13402576,"byte_end":13402604,"line_start":591,"line_end":591,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13402609,"byte_end":13402612,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13402617,"byte_end":13402637,"line_start":593,"line_end":593,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13402642,"byte_end":13402665,"line_start":594,"line_end":594,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13402670,"byte_end":13402718,"line_start":595,"line_end":595,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13402723,"byte_end":13402726,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13402731,"byte_end":13402789,"line_start":597,"line_end":597,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13402794,"byte_end":13402797,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/     assert!(!delay_queue.is_empty());","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13402802,"byte_end":13402843,"line_start":599,"line_end":599,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13402848,"byte_end":13402851,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/     delay_queue.clear();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13402856,"byte_end":13402884,"line_start":601,"line_end":601,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13402889,"byte_end":13402892,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/     assert!(delay_queue.is_empty());","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13402897,"byte_end":13402937,"line_start":603,"line_end":603,"column_start":5,"column_end":45}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13402942,"byte_end":13402949,"line_start":604,"line_end":604,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13402954,"byte_end":13402961,"line_start":605,"line_end":605,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9228},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13403450,"byte_end":13403458,"line_start":623,"line_end":623,"column_start":12,"column_end":20},"name":"capacity","qualname":"<DelayQueue<T>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the queue can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the queue can hold without reallocating.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13403133,"byte_end":13403208,"line_start":613,"line_end":613,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13403213,"byte_end":13403216,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13403221,"byte_end":13403235,"line_start":615,"line_end":615,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13403240,"byte_end":13403243,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13403248,"byte_end":13403259,"line_start":617,"line_end":617,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13403264,"byte_end":13403296,"line_start":618,"line_end":618,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13403301,"byte_end":13403304,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ let delay_queue: DelayQueue<i32> = DelayQueue::with_capacity(10);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13403309,"byte_end":13403378,"line_start":620,"line_end":620,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(delay_queue.capacity(), 10);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13403383,"byte_end":13403426,"line_start":621,"line_end":621,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13403431,"byte_end":13403438,"line_start":622,"line_end":622,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9229},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13404026,"byte_end":13404029,"line_start":643,"line_end":643,"column_start":12,"column_end":15},"name":"len","qualname":"<DelayQueue<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements currently in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of elements currently in the queue.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13403517,"byte_end":13403575,"line_start":627,"line_end":627,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13403580,"byte_end":13403583,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13403588,"byte_end":13403602,"line_start":629,"line_end":629,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13403607,"byte_end":13403610,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13403615,"byte_end":13403626,"line_start":631,"line_end":631,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13403631,"byte_end":13403663,"line_start":632,"line_end":632,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13403668,"byte_end":13403696,"line_start":633,"line_end":633,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13403701,"byte_end":13403704,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13403709,"byte_end":13403729,"line_start":635,"line_end":635,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13403734,"byte_end":13403757,"line_start":636,"line_end":636,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue: DelayQueue<i32> = DelayQueue::with_capacity(10);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13403762,"byte_end":13403839,"line_start":637,"line_end":637,"column_start":5,"column_end":82}},{"value":"/     assert_eq!(delay_queue.len(), 0);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13403844,"byte_end":13403885,"line_start":638,"line_end":638,"column_start":5,"column_end":46}},{"value":"/     delay_queue.insert(3, Duration::from_secs(5));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13403890,"byte_end":13403944,"line_start":639,"line_end":639,"column_start":5,"column_end":59}},{"value":"/     assert_eq!(delay_queue.len(), 1);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13403949,"byte_end":13403990,"line_start":640,"line_end":640,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13403995,"byte_end":13404002,"line_start":641,"line_end":641,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13404007,"byte_end":13404014,"line_start":642,"line_end":642,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9230},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13405238,"byte_end":13405245,"line_start":680,"line_end":680,"column_start":12,"column_end":19},"name":"reserve","qualname":"<DelayQueue<T>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more items to be queued\n without allocating.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more items to be queued","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13404083,"byte_end":13404154,"line_start":647,"line_end":647,"column_start":5,"column_end":76}},{"value":"/ without allocating.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13404159,"byte_end":13404182,"line_start":648,"line_end":648,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13404187,"byte_end":13404190,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ `reserve` does nothing if the queue already has sufficient capacity for","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13404195,"byte_end":13404270,"line_start":650,"line_end":650,"column_start":5,"column_end":80}},{"value":"/ `additional` more values. If more capacity is required, a new segment of","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13404275,"byte_end":13404351,"line_start":651,"line_end":651,"column_start":5,"column_end":81}},{"value":"/ memory will be allocated and all existing values will be copied into it.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13404356,"byte_end":13404432,"line_start":652,"line_end":652,"column_start":5,"column_end":81}},{"value":"/ As such, if the queue is already very large, a call to `reserve` can end","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13404437,"byte_end":13404513,"line_start":653,"line_end":653,"column_start":5,"column_end":81}},{"value":"/ up being expensive.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13404518,"byte_end":13404541,"line_start":654,"line_end":654,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13404546,"byte_end":13404549,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ The queue may reserve more than `additional` extra space in order to","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13404554,"byte_end":13404626,"line_start":656,"line_end":656,"column_start":5,"column_end":77}},{"value":"/ avoid frequent reallocations.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13404631,"byte_end":13404664,"line_start":657,"line_end":657,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13404669,"byte_end":13404672,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13404677,"byte_end":13404689,"line_start":659,"line_end":659,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13404694,"byte_end":13404697,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity exceeds the maximum number of entries the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13404702,"byte_end":13404774,"line_start":661,"line_end":661,"column_start":5,"column_end":77}},{"value":"/ queue can contain.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13404779,"byte_end":13404801,"line_start":662,"line_end":662,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13404806,"byte_end":13404809,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13404814,"byte_end":13404828,"line_start":664,"line_end":664,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13404833,"byte_end":13404836,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13404841,"byte_end":13404848,"line_start":666,"line_end":666,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13404853,"byte_end":13404885,"line_start":667,"line_end":667,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13404890,"byte_end":13404918,"line_start":668,"line_end":668,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13404923,"byte_end":13404926,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13404931,"byte_end":13404951,"line_start":670,"line_end":670,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13404956,"byte_end":13404979,"line_start":671,"line_end":671,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13404984,"byte_end":13405032,"line_start":672,"line_end":672,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13405037,"byte_end":13405040,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"hello\", Duration::from_secs(10));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13405045,"byte_end":13405106,"line_start":674,"line_end":674,"column_start":5,"column_end":66}},{"value":"/     delay_queue.reserve(10);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13405111,"byte_end":13405143,"line_start":675,"line_end":675,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13405148,"byte_end":13405151,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/     assert!(delay_queue.capacity() >= 11);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13405156,"byte_end":13405202,"line_start":677,"line_end":677,"column_start":5,"column_end":51}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13405207,"byte_end":13405214,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13405219,"byte_end":13405226,"line_start":679,"line_end":679,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9231},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13405961,"byte_end":13405969,"line_start":704,"line_end":704,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<DelayQueue<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if there are no items in the queue.","sig":null,"attributes":[{"value":"/ Returns `true` if there are no items in the queue.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13405328,"byte_end":13405382,"line_start":684,"line_end":684,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13405387,"byte_end":13405390,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ Note that this function returns `false` even if all items have not yet","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13405395,"byte_end":13405469,"line_start":686,"line_end":686,"column_start":5,"column_end":79}},{"value":"/ expired and a call to `poll` will return `NotReady`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13405474,"byte_end":13405530,"line_start":687,"line_end":687,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13405535,"byte_end":13405538,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13405543,"byte_end":13405557,"line_start":689,"line_end":689,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13405562,"byte_end":13405565,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13405570,"byte_end":13405577,"line_start":691,"line_end":691,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13405582,"byte_end":13405614,"line_start":692,"line_end":692,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13405619,"byte_end":13405647,"line_start":693,"line_end":693,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13405652,"byte_end":13405655,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13405660,"byte_end":13405680,"line_start":695,"line_end":695,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13405685,"byte_end":13405708,"line_start":696,"line_end":696,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13405713,"byte_end":13405761,"line_start":697,"line_end":697,"column_start":5,"column_end":53}},{"value":"/     assert!(delay_queue.is_empty());","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13405766,"byte_end":13405806,"line_start":698,"line_end":698,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13405811,"byte_end":13405814,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"hello\", Duration::from_secs(5));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13405819,"byte_end":13405879,"line_start":700,"line_end":700,"column_start":5,"column_end":65}},{"value":"/     assert!(!delay_queue.is_empty());","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13405884,"byte_end":13405925,"line_start":701,"line_end":701,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13405930,"byte_end":13405937,"line_start":702,"line_end":702,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13405942,"byte_end":13405949,"line_start":703,"line_end":703,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9263},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13410632,"byte_end":13410639,"line_start":877,"line_end":877,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Expired<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13410577,"byte_end":13410620,"line_start":876,"line_end":876,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":9264},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13410748,"byte_end":13410755,"line_start":882,"line_end":882,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Expired<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner value.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13410685,"byte_end":13410736,"line_start":881,"line_end":881,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":9265},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13410873,"byte_end":13410883,"line_start":887,"line_end":887,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Expired<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and returns the inner value.\n","sig":null,"attributes":[{"value":"/ Consumes `self` and returns the inner value.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13410813,"byte_end":13410861,"line_start":886,"line_end":886,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":9266},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13410994,"byte_end":13411002,"line_start":892,"line_end":892,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Expired<T>>::deadline","value":"pub fn deadline(&Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the deadline that the expiration was set to.\n","sig":null,"attributes":[{"value":"/ Returns the deadline that the expiration was set to.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13410926,"byte_end":13410982,"line_start":891,"line_end":891,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":9294},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13411580,"byte_end":13411591,"line_start":18,"line_end":18,"column_start":8,"column_end":19},"name":"delay_until","qualname":"::time::delay::delay_until","value":"pub fn delay_until(Instant) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Waits until `deadline` is reached.","sig":null,"attributes":[{"value":"/ Waits until `deadline` is reached.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13411206,"byte_end":13411244,"line_start":8,"line_end":8,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13411245,"byte_end":13411248,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the delay to complete. The delay","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13411249,"byte_end":13411324,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13411325,"byte_end":13411402,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13411403,"byte_end":13411438,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13411439,"byte_end":13411442,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13411443,"byte_end":13411461,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13411462,"byte_end":13411465,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Canceling a delay is done by dropping the returned future. No additional","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13411466,"byte_end":13411542,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ cleanup work is required.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13411543,"byte_end":13411572,"line_start":17,"line_end":17,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":9295},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13412657,"byte_end":13412666,"line_start":55,"line_end":55,"column_start":8,"column_end":17},"name":"delay_for","qualname":"::time::delay::delay_for","value":"pub fn delay_for(Duration) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Waits until `duration` has elapsed.","sig":null,"attributes":[{"value":"/ Waits until `duration` has elapsed.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13411730,"byte_end":13411769,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13411770,"byte_end":13411773,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Equivalent to `delay_until(Instant::now() + duration)`. An asynchronous","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13411774,"byte_end":13411849,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ analog to `std::thread::sleep`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13411850,"byte_end":13411885,"line_start":26,"line_end":26,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13411886,"byte_end":13411889,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the delay to complete. The delay","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13411890,"byte_end":13411965,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13411966,"byte_end":13412043,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13412044,"byte_end":13412079,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13412080,"byte_end":13412083,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ To run something regularly on a schedule, see [`interval`].","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13412084,"byte_end":13412147,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13412148,"byte_end":13412151,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13412152,"byte_end":13412170,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13412171,"byte_end":13412174,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Canceling a delay is done by dropping the returned future. No additional","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13412175,"byte_end":13412251,"line_start":36,"line_end":36,"column_start":1,"column_end":77}},{"value":"/ cleanup work is required.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13412252,"byte_end":13412281,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13412282,"byte_end":13412285,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13412286,"byte_end":13412300,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13412301,"byte_end":13412304,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\".","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13412305,"byte_end":13412352,"line_start":41,"line_end":41,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13412353,"byte_end":13412356,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13412357,"byte_end":13412364,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{delay_for, Duration};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13412365,"byte_end":13412408,"line_start":44,"line_end":44,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13412409,"byte_end":13412412,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13412413,"byte_end":13412431,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13412432,"byte_end":13412453,"line_start":47,"line_end":47,"column_start":1,"column_end":22}},{"value":"/     delay_for(Duration::from_millis(100)).await;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13412454,"byte_end":13412506,"line_start":48,"line_end":48,"column_start":1,"column_end":53}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13412507,"byte_end":13412547,"line_start":49,"line_end":49,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13412548,"byte_end":13412553,"line_start":50,"line_end":50,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13412554,"byte_end":13412561,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13412562,"byte_end":13412565,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13412566,"byte_end":13412607,"line_start":53,"line_end":53,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":9962},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13412926,"byte_end":13412931,"line_start":63,"line_end":63,"column_start":12,"column_end":17},"name":"Delay","qualname":"::time::delay::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":9963}],"decl_id":null,"docs":" Future returned by [`delay_until`](delay_until) and\n [`delay_for`](delay_for).\n","sig":null,"attributes":[{"value":"/ Future returned by [`delay_until`](delay_until) and","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13412744,"byte_end":13412799,"line_start":59,"line_end":59,"column_start":1,"column_end":56}},{"value":"/ [`delay_for`](delay_for).","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13412800,"byte_end":13412829,"line_start":60,"line_end":60,"column_start":1,"column_end":30}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13412847,"byte_end":13412914,"line_start":62,"line_end":62,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":9298},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13413371,"byte_end":13413379,"line_start":77,"line_end":77,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Delay>::deadline","value":"pub fn deadline(&Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the instant at which the future will complete.\n","sig":null,"attributes":[{"value":"/ Returns the instant at which the future will complete.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13413301,"byte_end":13413359,"line_start":76,"line_end":76,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":9299},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13413583,"byte_end":13413593,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"is_elapsed","qualname":"<Delay>::is_elapsed","value":"pub fn is_elapsed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Delay` has elapsed","sig":null,"attributes":[{"value":"/ Returns `true` if the `Delay` has elapsed","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13413448,"byte_end":13413493,"line_start":81,"line_end":81,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13413498,"byte_end":13413501,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ A `Delay` is elapsed when the requested duration has elapsed.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13413506,"byte_end":13413571,"line_start":83,"line_end":83,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":9300},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13413982,"byte_end":13413987,"line_start":95,"line_end":95,"column_start":12,"column_end":17},"name":"reset","qualname":"<Delay>::reset","value":"pub fn reset(&mut Self, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Resets the `Delay` instance to a new deadline.","sig":null,"attributes":[{"value":"/ Resets the `Delay` instance to a new deadline.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13413661,"byte_end":13413711,"line_start":88,"line_end":88,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13413716,"byte_end":13413719,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Calling this function allows changing the instant at which the `Delay`","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13413724,"byte_end":13413798,"line_start":90,"line_end":90,"column_start":5,"column_end":79}},{"value":"/ future completes without having to create new associated state.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13413803,"byte_end":13413870,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13413875,"byte_end":13413878,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This function can be called both before and after the future has","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13413883,"byte_end":13413951,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/ completed.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13413956,"byte_end":13413970,"line_start":94,"line_end":94,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":10021},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":13448550,"byte_end":13448555,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"name":"Error","qualname":"::time::error::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" Errors encountered by the timer implementation.","sig":null,"attributes":[{"value":"/ Errors encountered by the timer implementation.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":13447437,"byte_end":13447488,"line_start":5,"line_end":5,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":13447489,"byte_end":13447492,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Currently, there are two different errors that can occur:","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":13447493,"byte_end":13447554,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":13447555,"byte_end":13447558,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * `shutdown` occurs when a timer operation is attempted, but the timer","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":13447559,"byte_end":13447633,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/   instance has been dropped. In this case, the operation will never be able","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":13447634,"byte_end":13447713,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/   to complete and the `shutdown` error is returned. This is a permanent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":13447714,"byte_end":13447789,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/   error, i.e., once this error is observed, timer operations will never","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":13447790,"byte_end":13447865,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"/   succeed in the future.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":13447866,"byte_end":13447894,"line_start":13,"line_end":13,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":13447895,"byte_end":13447898,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * `at_capacity` occurs when a timer operation is attempted, but the timer","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":13447899,"byte_end":13447976,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/   instance is currently handling its maximum number of outstanding delays.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":13447977,"byte_end":13448055,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/   In this case, the operation is not able to be performed at the current","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":13448056,"byte_end":13448132,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/   moment, and `at_capacity` is returned. This is a transient error, i.e., at","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":13448133,"byte_end":13448213,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/   some point in the future, if the operation is attempted again, it might","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":13448214,"byte_end":13448291,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/   succeed. Callers that observe this error should attempt to [shed load]. One","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":13448292,"byte_end":13448373,"line_start":20,"line_end":20,"column_start":1,"column_end":82}},{"value":"/   way to do this would be dropping the future that issued the timer operation.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":13448374,"byte_end":13448456,"line_start":21,"line_end":21,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":13448457,"byte_end":13448460,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [shed load]: https://en.wikipedia.org/wiki/Load_Shedding","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":13448461,"byte_end":13448521,"line_start":23,"line_end":23,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":9631},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":13448756,"byte_end":13448764,"line_start":37,"line_end":37,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<Error>::shutdown","value":"pub fn shutdown() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a shutdown timer.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a shutdown timer.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":13448693,"byte_end":13448744,"line_start":36,"line_end":36,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":9632},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":13448896,"byte_end":13448907,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"name":"is_shutdown","qualname":"<Error>::is_shutdown","value":"pub fn is_shutdown(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being shutdown.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being shutdown.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":13448813,"byte_end":13448884,"line_start":41,"line_end":41,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":9633},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":13449095,"byte_end":13449106,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"at_capacity","qualname":"<Error>::at_capacity","value":"pub fn at_capacity() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a timer at capacity.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a timer at capacity.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":13449029,"byte_end":13449083,"line_start":49,"line_end":49,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":9634},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":13449243,"byte_end":13449257,"line_start":55,"line_end":55,"column_start":12,"column_end":26},"name":"is_at_capacity","qualname":"<Error>::is_at_capacity","value":"pub fn is_at_capacity(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being at capacity.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being at capacity.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":13449157,"byte_end":13449231,"line_start":54,"line_end":54,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":9635},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":13449448,"byte_end":13449455,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"invalid","qualname":"<Error>::invalid","value":"pub fn invalid() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Create an error representing a misconfigured timer.\n","sig":null,"attributes":[{"value":"/ Create an error representing a misconfigured timer.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":13449381,"byte_end":13449436,"line_start":62,"line_end":62,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":9636},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":13449591,"byte_end":13449601,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"is_invalid","qualname":"<Error>::is_invalid","value":"pub fn is_invalid(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being misconfigured.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being misconfigured.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":13449503,"byte_end":13449579,"line_start":67,"line_end":67,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":10041},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13450815,"byte_end":13450822,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Instant","qualname":"::time::instant::Instant","value":"Instant {  }","parent":null,"children":[{"krate":0,"index":10042}],"decl_id":null,"docs":" A measurement of the system clock, useful for talking to\n external entities like the file system or other processes.\n","sig":null,"attributes":[{"value":"/ A measurement of the system clock, useful for talking to","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13450619,"byte_end":13450679,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/ external entities like the file system or other processes.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13450680,"byte_end":13450742,"line_start":8,"line_end":8,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":9657},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13451069,"byte_end":13451072,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"now","qualname":"<Instant>::now","value":"pub fn now() -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns an instant corresponding to \"now\".","sig":null,"attributes":[{"value":"/ Returns an instant corresponding to \"now\".","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13450876,"byte_end":13450922,"line_start":15,"line_end":15,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13450927,"byte_end":13450930,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13450935,"byte_end":13450949,"line_start":17,"line_end":17,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13450954,"byte_end":13450957,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13450962,"byte_end":13450969,"line_start":19,"line_end":19,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::Instant;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13450974,"byte_end":13451003,"line_start":20,"line_end":20,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13451008,"byte_end":13451011,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ let now = Instant::now();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13451016,"byte_end":13451045,"line_start":22,"line_end":22,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13451050,"byte_end":13451057,"line_start":23,"line_end":23,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9658},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13451198,"byte_end":13451206,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"from_std","qualname":"<Instant>::from_std","value":"pub fn from_std(std::time::Instant) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Create a `tokio::time::Instant` from a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Create a `tokio::time::Instant` from a `std::time::Instant`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13451122,"byte_end":13451186,"line_start":28,"line_end":28,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":9659},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13451342,"byte_end":13451350,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"into_std","qualname":"<Instant>::into_std","value":"pub fn into_std(Self) -> std::time::Instant","parent":null,"children":[],"decl_id":null,"docs":" Convert the value into a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Convert the value into a `std::time::Instant`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13451280,"byte_end":13451330,"line_start":33,"line_end":33,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":9660},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13451594,"byte_end":13451608,"line_start":43,"line_end":43,"column_start":12,"column_end":26},"name":"duration_since","qualname":"<Instant>::duration_since","value":"pub fn duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13451409,"byte_end":13451481,"line_start":38,"line_end":38,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13451486,"byte_end":13451489,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13451494,"byte_end":13451506,"line_start":40,"line_end":40,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13451511,"byte_end":13451514,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ This function will panic if `earlier` is later than `self`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13451519,"byte_end":13451582,"line_start":42,"line_end":42,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":9661},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13452299,"byte_end":13452321,"line_start":64,"line_end":64,"column_start":12,"column_end":34},"name":"checked_duration_since","qualname":"<Instant>::checked_duration_since","value":"pub fn checked_duration_since(&Self, Instant) -> Option<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n None if that instant is later than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13451704,"byte_end":13451779,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ None if that instant is later than this one.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13451784,"byte_end":13451832,"line_start":48,"line_end":48,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13451837,"byte_end":13451840,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13451845,"byte_end":13451859,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13451864,"byte_end":13451867,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13451872,"byte_end":13451879,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13451884,"byte_end":13451936,"line_start":53,"line_end":53,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13451941,"byte_end":13451944,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13451949,"byte_end":13451967,"line_start":55,"line_end":55,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13451972,"byte_end":13451993,"line_start":56,"line_end":56,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13451998,"byte_end":13452031,"line_start":57,"line_end":57,"column_start":5,"column_end":38}},{"value":"/     delay_for(Duration::new(1, 0)).await;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13452036,"byte_end":13452081,"line_start":58,"line_end":58,"column_start":5,"column_end":50}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13452086,"byte_end":13452123,"line_start":59,"line_end":59,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.checked_duration_since(now));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13452128,"byte_end":13452190,"line_start":60,"line_end":60,"column_start":5,"column_end":67}},{"value":"/     println!(\"{:?}\", now.checked_duration_since(new_now)); // None","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13452195,"byte_end":13452265,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13452270,"byte_end":13452275,"line_start":62,"line_end":62,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13452280,"byte_end":13452287,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9662},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13453044,"byte_end":13453069,"line_start":85,"line_end":85,"column_start":12,"column_end":37},"name":"saturating_duration_since","qualname":"<Instant>::saturating_duration_since","value":"pub fn saturating_duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n zero duration if that instant is earlier than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13452433,"byte_end":13452508,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/ zero duration if that instant is earlier than this one.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13452513,"byte_end":13452572,"line_start":69,"line_end":69,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13452577,"byte_end":13452580,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13452585,"byte_end":13452599,"line_start":71,"line_end":71,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13452604,"byte_end":13452607,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13452612,"byte_end":13452619,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13452624,"byte_end":13452676,"line_start":74,"line_end":74,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13452681,"byte_end":13452684,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13452689,"byte_end":13452707,"line_start":76,"line_end":76,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13452712,"byte_end":13452733,"line_start":77,"line_end":77,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13452738,"byte_end":13452771,"line_start":78,"line_end":78,"column_start":5,"column_end":38}},{"value":"/     delay_for(Duration::new(1, 0)).await;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13452776,"byte_end":13452821,"line_start":79,"line_end":79,"column_start":5,"column_end":50}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13452826,"byte_end":13452863,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.saturating_duration_since(now));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13452868,"byte_end":13452933,"line_start":81,"line_end":81,"column_start":5,"column_end":70}},{"value":"/     println!(\"{:?}\", now.saturating_duration_since(new_now)); // 0ns","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13452938,"byte_end":13453010,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13453015,"byte_end":13453020,"line_start":83,"line_end":83,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13453025,"byte_end":13453032,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9663},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13453840,"byte_end":13453847,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Instant>::elapsed","value":"pub fn elapsed(&Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed since this instant was created.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed since this instant was created.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13453176,"byte_end":13453246,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13453251,"byte_end":13453254,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13453259,"byte_end":13453271,"line_start":91,"line_end":91,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13453276,"byte_end":13453279,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This function may panic if the current time is earlier than this","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13453284,"byte_end":13453352,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/ instant, which is something that can happen if an `Instant` is","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13453357,"byte_end":13453423,"line_start":94,"line_end":94,"column_start":5,"column_end":71}},{"value":"/ produced synthetically.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13453428,"byte_end":13453455,"line_start":95,"line_end":95,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13453460,"byte_end":13453463,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13453468,"byte_end":13453482,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13453487,"byte_end":13453490,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13453495,"byte_end":13453502,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13453507,"byte_end":13453559,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13453564,"byte_end":13453567,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13453572,"byte_end":13453590,"line_start":102,"line_end":102,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13453595,"byte_end":13453616,"line_start":103,"line_end":103,"column_start":5,"column_end":26}},{"value":"/     let instant = Instant::now();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13453621,"byte_end":13453658,"line_start":104,"line_end":104,"column_start":5,"column_end":42}},{"value":"/     let three_secs = Duration::from_secs(3);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13453663,"byte_end":13453711,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/     delay_for(three_secs).await;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13453716,"byte_end":13453752,"line_start":106,"line_end":106,"column_start":5,"column_end":41}},{"value":"/     assert!(instant.elapsed() >= three_secs);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13453757,"byte_end":13453806,"line_start":107,"line_end":107,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13453811,"byte_end":13453816,"line_start":108,"line_end":108,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13453821,"byte_end":13453828,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9664},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13454128,"byte_end":13454139,"line_start":117,"line_end":117,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Instant>::checked_add","value":"pub fn checked_add(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self + duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self + duration` if `t` can be","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13453911,"byte_end":13453986,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13453991,"byte_end":13454062,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13454067,"byte_end":13454116,"line_start":116,"line_end":116,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":9665},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13454478,"byte_end":13454489,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Instant>::checked_sub","value":"pub fn checked_sub(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self - duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self - duration` if `t` can be","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13454261,"byte_end":13454336,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13454341,"byte_end":13454412,"line_start":122,"line_end":122,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13454417,"byte_end":13454466,"line_start":123,"line_end":123,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":9723},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13457953,"byte_end":13457961,"line_start":67,"line_end":67,"column_start":8,"column_end":16},"name":"interval","qualname":"::time::interval::interval","value":"pub fn interval(Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `duration`. The first\n tick completes immediately.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `duration`. The first","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13456211,"byte_end":13456288,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ tick completes immediately.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13456289,"byte_end":13456320,"line_start":9,"line_end":9,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13456321,"byte_end":13456324,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13456325,"byte_end":13456405,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13456406,"byte_end":13456445,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13456446,"byte_end":13456449,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is equivalent to `interval_at(Instant::now(), period)`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13456450,"byte_end":13456523,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13456524,"byte_end":13456527,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13456528,"byte_end":13456540,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13456541,"byte_end":13456544,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13456545,"byte_end":13456590,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13456591,"byte_end":13456594,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13456595,"byte_end":13456609,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13456610,"byte_end":13456613,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13456614,"byte_end":13456621,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13456622,"byte_end":13456660,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13456661,"byte_end":13456664,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13456665,"byte_end":13456683,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13456684,"byte_end":13456705,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13456706,"byte_end":13456775,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13456776,"byte_end":13456779,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13456780,"byte_end":13456810,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13456811,"byte_end":13456841,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13456842,"byte_end":13456872,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13456873,"byte_end":13456876,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13456877,"byte_end":13456920,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13456921,"byte_end":13456926,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13456927,"byte_end":13456934,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13456935,"byte_end":13456938,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ A simple example using `interval` to execute a task every two seconds.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13456939,"byte_end":13457013,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13457014,"byte_end":13457017,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The difference between `interval` and [`delay_for`] is that an `interval`","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13457018,"byte_end":13457095,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ measures the time since the last tick, which means that `.tick().await`","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13457096,"byte_end":13457171,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ may wait for a shorter time than the duration specified for the interval","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13457172,"byte_end":13457248,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ if some time has passed between calls to `.tick().await`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13457249,"byte_end":13457310,"line_start":42,"line_end":42,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13457311,"byte_end":13457314,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`delay_for`], the task","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13457315,"byte_end":13457393,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13457394,"byte_end":13457464,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13457465,"byte_end":13457477,"line_start":46,"line_end":46,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13457478,"byte_end":13457481,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13457482,"byte_end":13457489,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13457490,"byte_end":13457510,"line_start":49,"line_end":49,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13457511,"byte_end":13457514,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13457515,"byte_end":13457556,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13457557,"byte_end":13457583,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/     time::delay_for(time::Duration::from_secs(1)).await","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13457584,"byte_end":13457643,"line_start":53,"line_end":53,"column_start":1,"column_end":60}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13457644,"byte_end":13457649,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13457650,"byte_end":13457653,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13457654,"byte_end":13457672,"line_start":56,"line_end":56,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13457673,"byte_end":13457694,"line_start":57,"line_end":57,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13457695,"byte_end":13457767,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/     for _i in 0..5 {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13457768,"byte_end":13457792,"line_start":59,"line_end":59,"column_start":1,"column_end":25}},{"value":"/         interval.tick().await;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13457793,"byte_end":13457827,"line_start":60,"line_end":60,"column_start":1,"column_end":35}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13457828,"byte_end":13457873,"line_start":61,"line_end":61,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13457874,"byte_end":13457883,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13457884,"byte_end":13457889,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13457890,"byte_end":13457897,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13457898,"byte_end":13457901,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ [`delay_for`]: crate::time::delay_for()","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13457902,"byte_end":13457945,"line_start":66,"line_end":66,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":9724},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13458850,"byte_end":13458861,"line_start":100,"line_end":100,"column_start":8,"column_end":19},"name":"interval_at","qualname":"::time::interval::interval_at","value":"pub fn interval_at(Instant, Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `period` with the\n first tick completing at `start`.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `period` with the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13458111,"byte_end":13458184,"line_start":73,"line_end":73,"column_start":1,"column_end":74}},{"value":"/ first tick completing at `start`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13458185,"byte_end":13458222,"line_start":74,"line_end":74,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13458223,"byte_end":13458226,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13458227,"byte_end":13458307,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13458308,"byte_end":13458347,"line_start":77,"line_end":77,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13458348,"byte_end":13458351,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13458352,"byte_end":13458364,"line_start":79,"line_end":79,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13458365,"byte_end":13458368,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13458369,"byte_end":13458414,"line_start":81,"line_end":81,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13458415,"byte_end":13458418,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13458419,"byte_end":13458433,"line_start":83,"line_end":83,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13458434,"byte_end":13458437,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13458438,"byte_end":13458445,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{interval_at, Duration, Instant};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13458446,"byte_end":13458500,"line_start":86,"line_end":86,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13458501,"byte_end":13458504,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13458505,"byte_end":13458523,"line_start":88,"line_end":88,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13458524,"byte_end":13458545,"line_start":89,"line_end":89,"column_start":1,"column_end":22}},{"value":"/     let start = Instant::now() + Duration::from_millis(50);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13458546,"byte_end":13458609,"line_start":90,"line_end":90,"column_start":1,"column_end":64}},{"value":"/     let mut interval = interval_at(start, Duration::from_millis(10));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13458610,"byte_end":13458683,"line_start":91,"line_end":91,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13458684,"byte_end":13458687,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13458688,"byte_end":13458718,"line_start":93,"line_end":93,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13458719,"byte_end":13458749,"line_start":94,"line_end":94,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13458750,"byte_end":13458780,"line_start":95,"line_end":95,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13458781,"byte_end":13458784,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     // approximately 70ms have elapsed.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13458785,"byte_end":13458828,"line_start":97,"line_end":97,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13458829,"byte_end":13458834,"line_start":98,"line_end":98,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13458835,"byte_end":13458842,"line_start":99,"line_end":99,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10060},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13459310,"byte_end":13459318,"line_start":116,"line_end":116,"column_start":12,"column_end":20},"name":"Interval","qualname":"::time::interval::Interval","value":"Interval {  }","parent":null,"children":[{"krate":0,"index":10061},{"krate":0,"index":10062}],"decl_id":null,"docs":" Stream returned by [`interval`](interval) and [`interval_at`](interval_at).","sig":null,"attributes":[{"value":"/ Stream returned by [`interval`](interval) and [`interval_at`](interval_at).","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13459059,"byte_end":13459138,"line_start":109,"line_end":109,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13459139,"byte_end":13459142,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ This type only implements the [`Stream`] trait if the \"stream\" feature is","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13459143,"byte_end":13459220,"line_start":111,"line_end":111,"column_start":1,"column_end":78}},{"value":"/ enabled.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13459221,"byte_end":13459233,"line_start":112,"line_end":112,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13459234,"byte_end":13459237,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ [`Stream`]: trait@crate::stream::Stream","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13459238,"byte_end":13459281,"line_start":114,"line_end":114,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":9726},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13459563,"byte_end":13459572,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"poll_tick","qualname":"<Interval>::poll_tick","value":"pub fn poll_tick(&mut Self, &mut Context) -> Poll<Instant>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9727},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13460664,"byte_end":13460668,"line_start":163,"line_end":163,"column_start":18,"column_end":22},"name":"tick","qualname":"<Interval>::tick","value":"pub async fn tick<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the next instant in the interval has been reached.","sig":null,"attributes":[{"value":"/ Completes when the next instant in the interval has been reached.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13460059,"byte_end":13460128,"line_start":142,"line_end":142,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13460133,"byte_end":13460136,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13460141,"byte_end":13460155,"line_start":144,"line_end":144,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13460160,"byte_end":13460163,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13460168,"byte_end":13460175,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ use tokio::time;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13460180,"byte_end":13460200,"line_start":147,"line_end":147,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13460205,"byte_end":13460208,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13460213,"byte_end":13460241,"line_start":149,"line_end":149,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13460246,"byte_end":13460249,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13460254,"byte_end":13460272,"line_start":151,"line_end":151,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13460277,"byte_end":13460298,"line_start":152,"line_end":152,"column_start":5,"column_end":26}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13460303,"byte_end":13460372,"line_start":153,"line_end":153,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13460377,"byte_end":13460380,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13460385,"byte_end":13460415,"line_start":155,"line_end":155,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13460420,"byte_end":13460450,"line_start":156,"line_end":156,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13460455,"byte_end":13460485,"line_start":157,"line_end":157,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13460490,"byte_end":13460493,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13460498,"byte_end":13460541,"line_start":159,"line_end":159,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13460546,"byte_end":13460551,"line_start":160,"line_end":160,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13460556,"byte_end":13460563,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13460568,"byte_end":13460608,"line_start":162,"line_end":162,"column_start":5,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":9777},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13462350,"byte_end":13462357,"line_start":49,"line_end":49,"column_start":8,"column_end":15},"name":"timeout","qualname":"::time::timeout::timeout","value":"pub fn timeout<T>(Duration, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified duration has elapsed.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified duration has elapsed.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13461335,"byte_end":13461412,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13461413,"byte_end":13461416,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the duration has elapsed, then the completed","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13461417,"byte_end":13461496,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ value is returned. Otherwise, an error is returned and the future is","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13461497,"byte_end":13461569,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ canceled.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13461570,"byte_end":13461583,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13461584,"byte_end":13461587,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13461588,"byte_end":13461605,"line_start":21,"line_end":21,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13461606,"byte_end":13461609,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13461610,"byte_end":13461688,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13461689,"byte_end":13461719,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13461720,"byte_end":13461723,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13461724,"byte_end":13461804,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13461805,"byte_end":13461832,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13461833,"byte_end":13461836,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13461837,"byte_end":13461851,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13461852,"byte_end":13461855,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13461856,"byte_end":13461916,"line_start":31,"line_end":31,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13461917,"byte_end":13461920,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13461921,"byte_end":13461932,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::timeout;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13461933,"byte_end":13461962,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13461963,"byte_end":13461992,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13461993,"byte_end":13461996,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13461997,"byte_end":13462025,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13462026,"byte_end":13462029,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13462030,"byte_end":13462052,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13462053,"byte_end":13462091,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13462092,"byte_end":13462119,"line_start":41,"line_end":41,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13462120,"byte_end":13462123,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13462124,"byte_end":13462197,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ if let Err(_) = timeout(Duration::from_millis(10), rx).await {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13462198,"byte_end":13462264,"line_start":44,"line_end":44,"column_start":1,"column_end":67}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13462265,"byte_end":13462320,"line_start":45,"line_end":45,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13462321,"byte_end":13462326,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13462327,"byte_end":13462334,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13462335,"byte_end":13462342,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":9779},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13463579,"byte_end":13463589,"line_start":91,"line_end":91,"column_start":8,"column_end":18},"name":"timeout_at","qualname":"::time::timeout::timeout_at","value":"pub fn timeout_at<T>(Instant, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified instant in time.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified instant in time.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13462548,"byte_end":13462620,"line_start":57,"line_end":57,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13462621,"byte_end":13462624,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the instant is reached, then the completed","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13462625,"byte_end":13462702,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"/ value is returned. Otherwise, an error is returned.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13462703,"byte_end":13462758,"line_start":60,"line_end":60,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13462759,"byte_end":13462762,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13462763,"byte_end":13462780,"line_start":62,"line_end":62,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13462781,"byte_end":13462784,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13462785,"byte_end":13462863,"line_start":64,"line_end":64,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13462864,"byte_end":13462894,"line_start":65,"line_end":65,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13462895,"byte_end":13462898,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13462899,"byte_end":13462979,"line_start":67,"line_end":67,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13462980,"byte_end":13463007,"line_start":68,"line_end":68,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13463008,"byte_end":13463011,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13463012,"byte_end":13463026,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13463027,"byte_end":13463030,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13463031,"byte_end":13463091,"line_start":72,"line_end":72,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13463092,"byte_end":13463095,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13463096,"byte_end":13463107,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::{Instant, timeout_at};","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13463108,"byte_end":13463151,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13463152,"byte_end":13463181,"line_start":76,"line_end":76,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13463182,"byte_end":13463185,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13463186,"byte_end":13463214,"line_start":78,"line_end":78,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13463215,"byte_end":13463218,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13463219,"byte_end":13463241,"line_start":80,"line_end":80,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13463242,"byte_end":13463280,"line_start":81,"line_end":81,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13463281,"byte_end":13463308,"line_start":82,"line_end":82,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13463309,"byte_end":13463312,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire 10 milliseconds into the","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13463313,"byte_end":13463391,"line_start":84,"line_end":84,"column_start":1,"column_end":79}},{"value":"/ // future.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13463392,"byte_end":13463406,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/ if let Err(_) = timeout_at(Instant::now() + Duration::from_millis(10), rx).await {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13463407,"byte_end":13463493,"line_start":86,"line_end":86,"column_start":1,"column_end":87}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13463494,"byte_end":13463549,"line_start":87,"line_end":87,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13463550,"byte_end":13463555,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13463556,"byte_end":13463563,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13463564,"byte_end":13463571,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10550},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13463964,"byte_end":13463971,"line_start":107,"line_end":107,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::time::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":10552},{"krate":0,"index":10553}],"decl_id":null,"docs":" Future returned by [`timeout`](timeout) and [`timeout_at`](timeout_at).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.12/src/lib.rs","byte_start":12429821,"byte_end":12429830,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10065},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13464128,"byte_end":13464135,"line_start":117,"line_end":117,"column_start":12,"column_end":19},"name":"Elapsed","qualname":"::time::timeout::Elapsed","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Timeout`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Timeout`.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13464056,"byte_end":13464088,"line_start":115,"line_end":115,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":9786},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13464486,"byte_end":13464493,"line_start":133,"line_end":133,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Timeout<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this timeout.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13464413,"byte_end":13464474,"line_start":132,"line_end":132,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":9787},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13464621,"byte_end":13464628,"line_start":138,"line_end":138,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Timeout<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this timeout.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13464540,"byte_end":13464609,"line_start":137,"line_end":137,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":9788},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13464757,"byte_end":13464767,"line_start":143,"line_end":143,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Timeout<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this timeout, returning the underlying value.\n","sig":null,"attributes":[{"value":"/ Consumes this timeout, returning the underlying value.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13464687,"byte_end":13464745,"line_start":142,"line_end":142,"column_start":5,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":10107},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":13482900,"byte_end":13482908,"line_start":33,"line_end":33,"column_start":8,"column_end":16},"name":"throttle","qualname":"::time::throttle::throttle","value":"pub fn throttle<T>(Duration, T) -> Throttle<T> where T: Stream","parent":null,"children":[],"decl_id":null,"docs":" Slows down a stream by enforcing a delay between items.\n They will be produced not more often than the specified interval.","sig":null,"attributes":[{"value":"/ Slows down a stream by enforcing a delay between items.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":13482326,"byte_end":13482385,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ They will be produced not more often than the specified interval.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":13482386,"byte_end":13482455,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":13482456,"byte_end":13482459,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":13482460,"byte_end":13482473,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":13482474,"byte_end":13482477,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Create a throttled stream.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":13482478,"byte_end":13482508,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":13482509,"byte_end":13482527,"line_start":19,"line_end":19,"column_start":1,"column_end":19}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":13482528,"byte_end":13482556,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":13482557,"byte_end":13482590,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/ use tokio::time::throttle;","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":13482591,"byte_end":13482621,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":13482622,"byte_end":13482625,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":13482626,"byte_end":13482648,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/ let mut item_stream = throttle(Duration::from_secs(2), futures::stream::repeat(\"one\"));","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":13482649,"byte_end":13482740,"line_start":25,"line_end":25,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":13482741,"byte_end":13482744,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":13482745,"byte_end":13482755,"line_start":27,"line_end":27,"column_start":1,"column_end":11}},{"value":"/     // The string will be produced at most every 2 seconds","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":13482756,"byte_end":13482818,"line_start":28,"line_end":28,"column_start":1,"column_end":63}},{"value":"/     println!(\"{:?}\", item_stream.next().await);","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":13482819,"byte_end":13482870,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":13482871,"byte_end":13482876,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":13482877,"byte_end":13482884,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":13482885,"byte_end":13482892,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10502},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":13483403,"byte_end":13483411,"line_start":55,"line_end":55,"column_start":16,"column_end":24},"name":"Throttle","qualname":"::time::throttle::Throttle","value":"Throttle {  }","parent":null,"children":[{"krate":0,"index":10504},{"krate":0,"index":10505},{"krate":0,"index":10506},{"krate":0,"index":10507}],"decl_id":null,"docs":" Stream for the [`throttle`](throttle) function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.12/src/lib.rs","byte_start":12429821,"byte_end":12429830,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":10111},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":13483878,"byte_end":13483885,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Throttle<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":13483771,"byte_end":13483844,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":13483849,"byte_end":13483866,"line_start":72,"line_end":72,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":10112},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":13484194,"byte_end":13484201,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Throttle<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this combinator\n is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this combinator","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":13483933,"byte_end":13484011,"line_start":77,"line_end":77,"column_start":5,"column_end":83}},{"value":"/ is pulling from.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":13484016,"byte_end":13484036,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":13484041,"byte_end":13484044,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the stream","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":13484049,"byte_end":13484129,"line_start":80,"line_end":80,"column_start":5,"column_end":85}},{"value":"/ which may otherwise confuse this combinator.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":13484134,"byte_end":13484182,"line_start":81,"line_end":81,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":10113},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":13484496,"byte_end":13484506,"line_start":90,"line_end":90,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Throttle<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":13484261,"byte_end":13484323,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":13484328,"byte_end":13484331,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so care","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":13484336,"byte_end":13484413,"line_start":88,"line_end":88,"column_start":5,"column_end":82}},{"value":"/ should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":13484418,"byte_end":13484484,"line_start":89,"line_end":89,"column_start":5,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":9853},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/stack.rs","byte_start":13481459,"byte_end":13481464,"line_start":6,"line_end":6,"column_start":10,"column_end":15},"name":"Owned","qualname":"::time::wheel::stack::Stack::Owned","value":"type Owned: Borrow<Self::Borrowed>;","parent":{"krate":0,"index":9852},"children":[],"decl_id":null,"docs":" Type of the item stored in the stack\n","sig":null,"attributes":[{"value":"/ Type of the item stored in the stack","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/stack.rs","byte_start":13481409,"byte_end":13481449,"line_start":5,"line_end":5,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":9854},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/stack.rs","byte_start":13481522,"byte_end":13481530,"line_start":9,"line_end":9,"column_start":10,"column_end":18},"name":"Borrowed","qualname":"::time::wheel::stack::Stack::Borrowed","value":"type Borrowed;","parent":{"krate":0,"index":9852},"children":[],"decl_id":null,"docs":" Borrowed item\n","sig":null,"attributes":[{"value":"/ Borrowed item","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/stack.rs","byte_start":13481495,"byte_end":13481512,"line_start":8,"line_end":8,"column_start":5,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":9855},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/stack.rs","byte_start":13481619,"byte_end":13481624,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Store","qualname":"::time::wheel::stack::Stack::Store","value":"type Store;","parent":{"krate":0,"index":9852},"children":[],"decl_id":null,"docs":" Item storage, this allows a slab to be used instead of just the heap\n","sig":null,"attributes":[{"value":"/ Item storage, this allows a slab to be used instead of just the heap","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/stack.rs","byte_start":13481537,"byte_end":13481609,"line_start":11,"line_end":11,"column_start":5,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":1157},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":182194,"byte_end":182200,"line_start":40,"line_end":40,"column_start":10,"column_end":16},"name":"Handle","qualname":"::util::linked_list::Link::Handle","value":"type Handle;","parent":{"krate":0,"index":1156},"children":[],"decl_id":null,"docs":" Handle to the list entry.","sig":null,"attributes":[{"value":"/ Handle to the list entry.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":182103,"byte_end":182132,"line_start":37,"line_end":37,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":182137,"byte_end":182140,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ This is usually a pointer-ish type.","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":182145,"byte_end":182184,"line_start":39,"line_end":39,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":1158},"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":182230,"byte_end":182236,"line_start":43,"line_end":43,"column_start":10,"column_end":16},"name":"Target","qualname":"::util::linked_list::Link::Target","value":"type Target;","parent":{"krate":0,"index":1156},"children":[],"decl_id":null,"docs":" Node type\n","sig":null,"attributes":[{"value":"/ Node type","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":182207,"byte_end":182220,"line_start":42,"line_end":42,"column_start":5,"column_end":18}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/scoped_tls.rs","byte_start":29760,"byte_end":29769,"line_start":32,"line_end":32,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/scoped_tls.rs","byte_start":29785,"byte_end":29794,"line_start":34,"line_end":34,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/scoped_tls.rs","byte_start":30144,"byte_end":30149,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":31905,"byte_end":31914,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":32077,"byte_end":32086,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":33273,"byte_end":33282,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/poll_fn.rs","byte_start":34036,"byte_end":34042,"line_start":13,"line_end":13,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/poll_fn.rs","byte_start":34256,"byte_end":34262,"line_start":23,"line_end":23,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/poll_fn.rs","byte_start":34404,"byte_end":34410,"line_start":29,"line_end":29,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/ready.rs","byte_start":34941,"byte_end":34946,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/ready.rs","byte_start":34973,"byte_end":34978,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/try_join.rs","byte_start":36175,"byte_end":36183,"line_start":41,"line_end":41,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":50006,"byte_end":50009,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1369},{"krate":0,"index":1370}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":50169,"byte_end":50172,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":50801,"byte_end":50807,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":281},{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":56771,"byte_end":56774,"line_start":153,"line_end":153,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1373},{"krate":0,"index":1374}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":56917,"byte_end":56920,"line_start":161,"line_end":161,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":57716,"byte_end":57722,"line_start":193,"line_end":193,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":60148,"byte_end":60151,"line_start":64,"line_end":64,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1377},{"krate":0,"index":1378}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":60294,"byte_end":60297,"line_start":72,"line_end":72,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":60751,"byte_end":60757,"line_start":90,"line_end":90,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":368},{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":68662,"byte_end":68665,"line_start":174,"line_end":174,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1381},{"krate":0,"index":1382},{"krate":0,"index":1383}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":68813,"byte_end":68816,"line_start":182,"line_end":182,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":69385,"byte_end":69388,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":69896,"byte_end":69902,"line_start":223,"line_end":223,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":70415,"byte_end":70421,"line_start":241,"line_end":241,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":70937,"byte_end":70943,"line_start":259,"line_end":259,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":71454,"byte_end":71460,"line_start":277,"line_end":277,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/scheduled_io.rs","byte_start":12618607,"byte_end":12618618,"line_start":17,"line_end":17,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1433},{"krate":0,"index":1434}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/scheduled_io.rs","byte_start":12619377,"byte_end":12619388,"line_start":48,"line_end":48,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1436}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/scheduled_io.rs","byte_start":12619595,"byte_end":12619606,"line_start":58,"line_end":58,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1438}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/scheduled_io.rs","byte_start":12622228,"byte_end":12622239,"line_start":132,"line_end":132,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1441}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":12607927,"byte_end":12607933,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1505},{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":1508}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":12610794,"byte_end":12610800,"line_start":167,"line_end":167,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1511},{"krate":0,"index":1512},{"krate":0,"index":1513},{"krate":0,"index":1514},{"krate":0,"index":1515},{"krate":0,"index":1516}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":12611199,"byte_end":12611205,"line_start":188,"line_end":188,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1518}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":12611341,"byte_end":12611347,"line_start":196,"line_end":196,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1520},{"krate":0,"index":1521},{"krate":0,"index":1522}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":12612508,"byte_end":12612514,"line_start":228,"line_end":228,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1524}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":12612592,"byte_end":12612598,"line_start":234,"line_end":234,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1526}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":12612733,"byte_end":12612738,"line_start":242,"line_end":242,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1528},{"krate":0,"index":1530},{"krate":0,"index":1531},{"krate":0,"index":1532}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":12614282,"byte_end":12614291,"line_start":296,"line_end":296,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1535}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12628797,"byte_end":12628808,"line_start":164,"line_end":164,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1592},{"krate":0,"index":1593},{"krate":0,"index":1594},{"krate":0,"index":1595},{"krate":0,"index":1596},{"krate":0,"index":1597},{"krate":0,"index":1598},{"krate":0,"index":1599},{"krate":0,"index":1600}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12636599,"byte_end":12636610,"line_start":380,"line_end":380,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1603}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12637103,"byte_end":12637114,"line_start":402,"line_end":402,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1606},{"krate":0,"index":1607},{"krate":0,"index":1608}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12638195,"byte_end":12638206,"line_start":448,"line_end":448,"column_start":46,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1613}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12638379,"byte_end":12638390,"line_start":454,"line_end":454,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1616}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12640538,"byte_end":12640550,"line_start":49,"line_end":49,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1652},{"krate":0,"index":1654},{"krate":0,"index":1656},{"krate":0,"index":1658},{"krate":0,"index":1660},{"krate":0,"index":1661},{"krate":0,"index":1663},{"krate":0,"index":1664}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12651420,"byte_end":12651432,"line_start":329,"line_end":329,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12651457,"byte_end":12651469,"line_start":330,"line_end":330,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12651488,"byte_end":12651500,"line_start":332,"line_end":332,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1672}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12653282,"byte_end":12653290,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1768},{"krate":0,"index":1769}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12654207,"byte_end":12654216,"line_start":93,"line_end":93,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1772}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12654466,"byte_end":12654474,"line_start":101,"line_end":101,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1775},{"krate":0,"index":1776}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12655029,"byte_end":12655038,"line_start":121,"line_end":121,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1780},{"krate":0,"index":1781},{"krate":0,"index":1782},{"krate":0,"index":1783}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12655987,"byte_end":12655992,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1787}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12656385,"byte_end":12656390,"line_start":166,"line_end":166,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1790}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12656643,"byte_end":12656648,"line_start":174,"line_end":174,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1793}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12656771,"byte_end":12656779,"line_start":180,"line_end":180,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12656816,"byte_end":12656825,"line_start":181,"line_end":181,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12656862,"byte_end":12656870,"line_start":182,"line_end":182,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12656907,"byte_end":12656916,"line_start":183,"line_end":183,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12656959,"byte_end":12656967,"line_start":185,"line_end":185,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1804}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12657135,"byte_end":12657144,"line_start":191,"line_end":191,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1807}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/seek.rs","byte_start":12657834,"byte_end":12657838,"line_start":25,"line_end":25,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1846},{"krate":0,"index":1847}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_buf_read_ext.rs","byte_start":12669933,"byte_end":12669934,"line_start":258,"line_end":258,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":12709366,"byte_end":12709367,"line_start":1118,"line_end":1118,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12711125,"byte_end":12711126,"line_start":67,"line_end":67,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":12746473,"byte_end":12746474,"line_start":1006,"line_end":1006,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":12747890,"byte_end":12747899,"line_start":38,"line_end":38,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2257},{"krate":0,"index":2258},{"krate":0,"index":2259},{"krate":0,"index":2260},{"krate":0,"index":2261},{"krate":0,"index":2262},{"krate":0,"index":2263},{"krate":0,"index":2264}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":12750078,"byte_end":12750087,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2267},{"krate":0,"index":2268}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":12751063,"byte_end":12751072,"line_start":135,"line_end":135,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2271},{"krate":0,"index":2272}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":12751903,"byte_end":12751912,"line_start":157,"line_end":157,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2275},{"krate":0,"index":2276},{"krate":0,"index":2278},{"krate":0,"index":2279}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":12752628,"byte_end":12752637,"line_start":183,"line_end":183,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2282}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":12754144,"byte_end":12754153,"line_start":26,"line_end":26,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2325},{"krate":0,"index":2326},{"krate":0,"index":2327},{"krate":0,"index":2328},{"krate":0,"index":2329},{"krate":0,"index":2330}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":12755990,"byte_end":12755999,"line_start":82,"line_end":82,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2333}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":12756141,"byte_end":12756150,"line_start":88,"line_end":88,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2336}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":12756862,"byte_end":12756871,"line_start":118,"line_end":118,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2339},{"krate":0,"index":2340},{"krate":0,"index":2341}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":12757401,"byte_end":12757410,"line_start":136,"line_end":136,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2344},{"krate":0,"index":2345}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":12757889,"byte_end":12757898,"line_start":151,"line_end":151,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2348},{"krate":0,"index":2349}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":12759852,"byte_end":12759861,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2395},{"krate":0,"index":2396},{"krate":0,"index":2397},{"krate":0,"index":2398},{"krate":0,"index":2399},{"krate":0,"index":2400},{"krate":0,"index":2401},{"krate":0,"index":2402}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":12762139,"byte_end":12762148,"line_start":117,"line_end":117,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2405},{"krate":0,"index":2406},{"krate":0,"index":2407}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":12763038,"byte_end":12763047,"line_start":146,"line_end":146,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2410},{"krate":0,"index":2411}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":12763529,"byte_end":12763538,"line_start":161,"line_end":161,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2414},{"krate":0,"index":2415}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":12763825,"byte_end":12763834,"line_start":171,"line_end":171,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2418}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":12765003,"byte_end":12765008,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2455},{"krate":0,"index":2456},{"krate":0,"index":2457},{"krate":0,"index":2458}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":12766148,"byte_end":12766153,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2462}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":12766432,"byte_end":12766437,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2466},{"krate":0,"index":2467}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":12767260,"byte_end":12767265,"line_start":113,"line_end":113,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2471},{"krate":0,"index":2472}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/copy.rs","byte_start":12770308,"byte_end":12770312,"line_start":78,"line_end":78,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2500},{"krate":0,"index":2501}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/empty.rs","byte_start":12773422,"byte_end":12773427,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2534},{"krate":0,"index":2535}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/empty.rs","byte_start":12773756,"byte_end":12773761,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2537},{"krate":0,"index":2538}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/empty.rs","byte_start":12773994,"byte_end":12773999,"line_start":73,"line_end":73,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2540}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/flush.rs","byte_start":12774820,"byte_end":12774825,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2572},{"krate":0,"index":2573}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":12776005,"byte_end":12776010,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2604},{"krate":0,"index":2611},{"krate":0,"index":2612},{"krate":0,"index":2613}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":12777262,"byte_end":12777267,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2616}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":12778014,"byte_end":12778019,"line_start":113,"line_end":113,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2619},{"krate":0,"index":2620}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12781179,"byte_end":12781191,"line_start":91,"line_end":91,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2661}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12781740,"byte_end":12781752,"line_start":107,"line_end":107,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2663},{"krate":0,"index":2664},{"krate":0,"index":2665}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12782477,"byte_end":12782489,"line_start":134,"line_end":134,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2667}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12782649,"byte_end":12782653,"line_start":143,"line_end":143,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2669},{"krate":0,"index":2670}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12783059,"byte_end":12783063,"line_start":162,"line_end":162,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2672}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12783889,"byte_end":12783893,"line_start":188,"line_end":188,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2674},{"krate":0,"index":2675},{"krate":0,"index":2676}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read.rs","byte_start":12785821,"byte_end":12785825,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2712},{"krate":0,"index":2713}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_buf.rs","byte_start":12786886,"byte_end":12786893,"line_start":27,"line_end":27,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2744},{"krate":0,"index":2745}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_exact.rs","byte_start":12788258,"byte_end":12788267,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2775},{"krate":0,"index":2776}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_line.rs","byte_start":12796545,"byte_end":12796553,"line_start":105,"line_end":105,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2849},{"krate":0,"index":2850}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_to_end.rs","byte_start":12802473,"byte_end":12802482,"line_start":147,"line_end":147,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2892},{"krate":0,"index":2893}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_to_string.rs","byte_start":12805221,"byte_end":12805233,"line_start":66,"line_end":66,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2935},{"krate":0,"index":2936}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_until.rs","byte_start":12807673,"byte_end":12807682,"line_start":66,"line_end":66,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2967},{"krate":0,"index":2968}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/repeat.rs","byte_start":12809516,"byte_end":12809522,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2987},{"krate":0,"index":2988}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/shutdown.rs","byte_start":12810644,"byte_end":12810652,"line_start":27,"line_end":27,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3020},{"krate":0,"index":3021}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/sink.rs","byte_start":12812485,"byte_end":12812489,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3043},{"krate":0,"index":3044},{"krate":0,"index":3045}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/sink.rs","byte_start":12812999,"byte_end":12813003,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3047}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":12813968,"byte_end":12813973,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3085}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":12814712,"byte_end":12814717,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3094}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":12815496,"byte_end":12815501,"line_start":94,"line_end":94,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3097},{"krate":0,"index":3098}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12829040,"byte_end":12829052,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3701},{"krate":0,"index":3702}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12829557,"byte_end":12829569,"line_start":98,"line_end":98,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3706},{"krate":0,"index":3707},{"krate":0,"index":3709}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12831108,"byte_end":12831120,"line_start":151,"line_end":151,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3713},{"krate":0,"index":3714}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":12834649,"byte_end":12834661,"line_start":75,"line_end":75,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3754},{"krate":0,"index":3755}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":12816669,"byte_end":12816673,"line_start":29,"line_end":29,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3137},{"krate":0,"index":3138},{"krate":0,"index":3139},{"krate":0,"index":3140},{"krate":0,"index":3141},{"krate":0,"index":3142}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":12818301,"byte_end":12818305,"line_start":78,"line_end":78,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3145},{"krate":0,"index":3146}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":12818962,"byte_end":12818966,"line_start":100,"line_end":100,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3149},{"krate":0,"index":3150}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write.rs","byte_start":12820523,"byte_end":12820528,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3179},{"krate":0,"index":3180}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_all.rs","byte_start":12821321,"byte_end":12821329,"line_start":25,"line_end":25,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3209},{"krate":0,"index":3210}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_buf.rs","byte_start":12822837,"byte_end":12822845,"line_start":29,"line_end":29,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3241},{"krate":0,"index":3242}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":74569,"byte_end":74579,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":74619,"byte_end":74629,"line_start":46,"line_end":46,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":74910,"byte_end":74922,"line_start":58,"line_end":58,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":74962,"byte_end":74974,"line_start":60,"line_end":60,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":75234,"byte_end":75246,"line_start":71,"line_end":71,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":75286,"byte_end":75298,"line_start":73,"line_end":73,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12838344,"byte_end":12838355,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3990},{"krate":0,"index":3995},{"krate":0,"index":3996},{"krate":0,"index":4000},{"krate":0,"index":4001},{"krate":0,"index":4002},{"krate":0,"index":4003},{"krate":0,"index":4004},{"krate":0,"index":4005},{"krate":0,"index":4006},{"krate":0,"index":4007}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12849050,"byte_end":12849061,"line_start":398,"line_end":398,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4009},{"krate":0,"index":4010}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12849376,"byte_end":12849387,"line_start":410,"line_end":410,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4012},{"krate":0,"index":4013}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12849827,"byte_end":12849838,"line_start":424,"line_end":424,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4015},{"krate":0,"index":4016}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12850164,"byte_end":12850175,"line_start":436,"line_end":436,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4018}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12850391,"byte_end":12850402,"line_start":447,"line_end":447,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4025}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/incoming.rs","byte_start":12851234,"byte_end":12851242,"line_start":15,"line_end":15,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4051},{"krate":0,"index":4052}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/incoming.rs","byte_start":12851880,"byte_end":12851888,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4054},{"krate":0,"index":4055}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12854051,"byte_end":12854059,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4097},{"krate":0,"index":4098}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12856514,"byte_end":12856522,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4103},{"krate":0,"index":4104}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12856842,"byte_end":12856851,"line_start":147,"line_end":147,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4106},{"krate":0,"index":4107},{"krate":0,"index":4109},{"krate":0,"index":4110}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12857664,"byte_end":12857672,"line_start":176,"line_end":176,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4112}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12857766,"byte_end":12857775,"line_start":182,"line_end":182,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4114}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12860863,"byte_end":12860875,"line_start":90,"line_end":90,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4171}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12861078,"byte_end":12861090,"line_start":99,"line_end":99,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12861100,"byte_end":12861113,"line_start":101,"line_end":101,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4174},{"krate":0,"index":4175},{"krate":0,"index":4176}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12863947,"byte_end":12863960,"line_start":188,"line_end":188,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4181},{"krate":0,"index":4182}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12864265,"byte_end":12864279,"line_start":202,"line_end":202,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4184},{"krate":0,"index":4185}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12864962,"byte_end":12864976,"line_start":221,"line_end":221,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4187}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12865136,"byte_end":12865150,"line_start":229,"line_end":229,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4189},{"krate":0,"index":4190},{"krate":0,"index":4192},{"krate":0,"index":4193}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12866089,"byte_end":12866102,"line_start":262,"line_end":262,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4195}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12866198,"byte_end":12866212,"line_start":268,"line_end":268,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4197}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12868347,"byte_end":12868356,"line_start":63,"line_end":63,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4294},{"krate":0,"index":4299},{"krate":0,"index":4303},{"krate":0,"index":4304},{"krate":0,"index":4305},{"krate":0,"index":4309},{"krate":0,"index":4310},{"krate":0,"index":4311},{"krate":0,"index":4312},{"krate":0,"index":4313},{"krate":0,"index":4317},{"krate":0,"index":4318},{"krate":0,"index":4319},{"krate":0,"index":4320},{"krate":0,"index":4321},{"krate":0,"index":4322},{"krate":0,"index":4323},{"krate":0,"index":4324},{"krate":0,"index":4325},{"krate":0,"index":4326},{"krate":0,"index":4327},{"krate":0,"index":4328},{"krate":0,"index":4329},{"krate":0,"index":4330},{"krate":0,"index":4332},{"krate":0,"index":4333},{"krate":0,"index":4334},{"krate":0,"index":4335}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12893413,"byte_end":12893422,"line_start":838,"line_end":838,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4345},{"krate":0,"index":4346}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12893858,"byte_end":12893867,"line_start":852,"line_end":852,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4348},{"krate":0,"index":4349}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12894220,"byte_end":12894229,"line_start":866,"line_end":866,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4351},{"krate":0,"index":4352}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12894543,"byte_end":12894552,"line_start":880,"line_end":880,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4354},{"krate":0,"index":4355},{"krate":0,"index":4357},{"krate":0,"index":4358}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12895296,"byte_end":12895305,"line_start":909,"line_end":909,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4360}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12895519,"byte_end":12895528,"line_start":920,"line_end":920,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4367}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12896534,"byte_end":12896543,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4467},{"krate":0,"index":4472},{"krate":0,"index":4473},{"krate":0,"index":4474},{"krate":0,"index":4475},{"krate":0,"index":4476},{"krate":0,"index":4477},{"krate":0,"index":4482},{"krate":0,"index":4486},{"krate":0,"index":4487},{"krate":0,"index":4488},{"krate":0,"index":4492},{"krate":0,"index":4493},{"krate":0,"index":4498},{"krate":0,"index":4499},{"krate":0,"index":4500},{"krate":0,"index":4504},{"krate":0,"index":4505},{"krate":0,"index":4506},{"krate":0,"index":4507},{"krate":0,"index":4508},{"krate":0,"index":4509},{"krate":0,"index":4510},{"krate":0,"index":4511},{"krate":0,"index":4512},{"krate":0,"index":4513},{"krate":0,"index":4514},{"krate":0,"index":4515},{"krate":0,"index":4516},{"krate":0,"index":4517},{"krate":0,"index":4518}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12911204,"byte_end":12911213,"line_start":398,"line_end":398,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4520},{"krate":0,"index":4521}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12911649,"byte_end":12911658,"line_start":412,"line_end":412,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4523},{"krate":0,"index":4524}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12911978,"byte_end":12911987,"line_start":424,"line_end":424,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4526}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12912206,"byte_end":12912215,"line_start":435,"line_end":435,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4533}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12914301,"byte_end":12914313,"line_start":50,"line_end":50,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4561}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12914516,"byte_end":12914528,"line_start":59,"line_end":59,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12915055,"byte_end":12915063,"line_start":74,"line_end":74,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4565},{"krate":0,"index":4566},{"krate":0,"index":4570}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12916695,"byte_end":12916703,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4575},{"krate":0,"index":4576},{"krate":0,"index":4580}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12918023,"byte_end":12918031,"line_start":138,"line_end":138,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4585}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12918122,"byte_end":12918130,"line_start":144,"line_end":144,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4587}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12919388,"byte_end":12919400,"line_start":22,"line_end":22,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4685},{"krate":0,"index":4687},{"krate":0,"index":4688},{"krate":0,"index":4689},{"krate":0,"index":4690},{"krate":0,"index":4691},{"krate":0,"index":4693},{"krate":0,"index":4697},{"krate":0,"index":4698},{"krate":0,"index":4700},{"krate":0,"index":4701},{"krate":0,"index":4705},{"krate":0,"index":4706},{"krate":0,"index":4707},{"krate":0,"index":4712},{"krate":0,"index":4713},{"krate":0,"index":4717},{"krate":0,"index":4718},{"krate":0,"index":4719},{"krate":0,"index":4720},{"krate":0,"index":4721},{"krate":0,"index":4722},{"krate":0,"index":4723},{"krate":0,"index":4725}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12929821,"byte_end":12929833,"line_start":314,"line_end":314,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4727},{"krate":0,"index":4728}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12930275,"byte_end":12930287,"line_start":328,"line_end":328,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4730},{"krate":0,"index":4731}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12930616,"byte_end":12930628,"line_start":340,"line_end":340,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4733}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12930753,"byte_end":12930765,"line_start":346,"line_end":346,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4735}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":12931702,"byte_end":12931710,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4754},{"krate":0,"index":4758}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":12932102,"byte_end":12932110,"line_start":43,"line_end":43,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4763},{"krate":0,"index":4768}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":12932613,"byte_end":12932621,"line_start":58,"line_end":58,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4773}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":12932721,"byte_end":12932729,"line_start":64,"line_end":64,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4775}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12934206,"byte_end":12934218,"line_start":53,"line_end":53,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4807}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12934421,"byte_end":12934433,"line_start":62,"line_end":62,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12934997,"byte_end":12935010,"line_start":77,"line_end":77,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4811},{"krate":0,"index":4812},{"krate":0,"index":4816}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12935795,"byte_end":12935808,"line_start":98,"line_end":98,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4821},{"krate":0,"index":4822},{"krate":0,"index":4827},{"krate":0,"index":4831}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12936978,"byte_end":12936991,"line_start":130,"line_end":130,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4833}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12937160,"byte_end":12937173,"line_start":138,"line_end":138,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4835}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12937274,"byte_end":12937287,"line_start":144,"line_end":144,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4837}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/incoming.rs","byte_start":12937632,"byte_end":12937640,"line_start":14,"line_end":14,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4877},{"krate":0,"index":4878}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/incoming.rs","byte_start":12938372,"byte_end":12938380,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4880},{"krate":0,"index":4881}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12940507,"byte_end":12940519,"line_start":54,"line_end":54,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4936},{"krate":0,"index":4938},{"krate":0,"index":4939},{"krate":0,"index":4940},{"krate":0,"index":4941},{"krate":0,"index":4945},{"krate":0,"index":4946},{"krate":0,"index":4947}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12945223,"byte_end":12945235,"line_start":184,"line_end":184,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4949},{"krate":0,"index":4950}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12945551,"byte_end":12945563,"line_start":196,"line_end":196,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4952},{"krate":0,"index":4953}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12946005,"byte_end":12946017,"line_start":210,"line_end":210,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4955},{"krate":0,"index":4956}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12946337,"byte_end":12946349,"line_start":222,"line_end":222,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4958}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12946474,"byte_end":12946486,"line_start":228,"line_end":228,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4960}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":12948463,"byte_end":12948471,"line_start":53,"line_end":53,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4996},{"krate":0,"index":4997}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":12948791,"byte_end":12948800,"line_start":67,"line_end":67,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4999},{"krate":0,"index":5000},{"krate":0,"index":5001}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":12949284,"byte_end":12949292,"line_start":85,"line_end":85,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5003}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":12949388,"byte_end":12949397,"line_start":91,"line_end":91,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5005}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12952502,"byte_end":12952514,"line_start":89,"line_end":89,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5056}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12952717,"byte_end":12952729,"line_start":98,"line_end":98,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12952739,"byte_end":12952752,"line_start":100,"line_end":100,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5059}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12953168,"byte_end":12953181,"line_start":111,"line_end":111,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5061},{"krate":0,"index":5062}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12953486,"byte_end":12953500,"line_start":125,"line_end":125,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5064},{"krate":0,"index":5065}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12954198,"byte_end":12954212,"line_start":144,"line_end":144,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5067}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12954372,"byte_end":12954386,"line_start":152,"line_end":152,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5069},{"krate":0,"index":5070},{"krate":0,"index":5071}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12955120,"byte_end":12955133,"line_start":177,"line_end":177,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5073}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12955231,"byte_end":12955245,"line_start":183,"line_end":183,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5075}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12956266,"byte_end":12956276,"line_start":29,"line_end":29,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5177},{"krate":0,"index":5182},{"krate":0,"index":5183},{"krate":0,"index":5184},{"krate":0,"index":5185},{"krate":0,"index":5186},{"krate":0,"index":5187},{"krate":0,"index":5188},{"krate":0,"index":5189},{"krate":0,"index":5190},{"krate":0,"index":5192}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12960623,"byte_end":12960633,"line_start":143,"line_end":143,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5194},{"krate":0,"index":5195}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12961071,"byte_end":12961081,"line_start":157,"line_end":157,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5197},{"krate":0,"index":5198}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12961394,"byte_end":12961404,"line_start":169,"line_end":169,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5200},{"krate":0,"index":5201}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12961718,"byte_end":12961728,"line_start":183,"line_end":183,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5203},{"krate":0,"index":5204},{"krate":0,"index":5205}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12962215,"byte_end":12962225,"line_start":202,"line_end":202,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5207},{"krate":0,"index":5208}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12963742,"byte_end":12963752,"line_start":247,"line_end":247,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5210}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12963877,"byte_end":12963887,"line_start":253,"line_end":253,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5212}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_ptr.rs","byte_start":84816,"byte_end":84825,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_ptr.rs","byte_start":84999,"byte_end":85008,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":551},{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_ptr.rs","byte_start":85157,"byte_end":85166,"line_start":24,"line_end":24,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u16.rs","byte_start":85510,"byte_end":85519,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u16.rs","byte_start":85544,"byte_end":85553,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u16.rs","byte_start":85563,"byte_end":85572,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u16.rs","byte_start":86058,"byte_end":86067,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":574},{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u16.rs","byte_start":86352,"byte_end":86361,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u32.rs","byte_start":86702,"byte_end":86711,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u32.rs","byte_start":86736,"byte_end":86745,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u32.rs","byte_start":86755,"byte_end":86764,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u32.rs","byte_start":86943,"byte_end":86952,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u32.rs","byte_start":87237,"byte_end":87246,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u8.rs","byte_start":89361,"byte_end":89369,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u8.rs","byte_start":89394,"byte_end":89402,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u8.rs","byte_start":89412,"byte_end":89420,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u8.rs","byte_start":89595,"byte_end":89603,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u8.rs","byte_start":89887,"byte_end":89895,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":627}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_usize.rs","byte_start":90235,"byte_end":90246,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_usize.rs","byte_start":90271,"byte_end":90282,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_usize.rs","byte_start":90292,"byte_end":90303,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_usize.rs","byte_start":90986,"byte_end":90997,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":649},{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_usize.rs","byte_start":91287,"byte_end":91298,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_usize.rs","byte_start":91462,"byte_end":91473,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/unsafe_cell.rs","byte_start":91661,"byte_end":91671,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/either.rs","byte_start":12968244,"byte_end":12968250,"line_start":11,"line_end":11,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5377},{"krate":0,"index":5378},{"krate":0,"index":5379},{"krate":0,"index":5380},{"krate":0,"index":5381},{"krate":0,"index":5382}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/either.rs","byte_start":12969207,"byte_end":12969213,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5386}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/either.rs","byte_start":12969427,"byte_end":12969433,"line_start":61,"line_end":61,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5390}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":96885,"byte_end":96895,"line_start":38,"line_end":38,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":97160,"byte_end":97170,"line_start":50,"line_end":50,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":97696,"byte_end":97701,"line_start":76,"line_end":76,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":102493,"byte_end":102503,"line_start":201,"line_end":201,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":102612,"byte_end":102624,"line_start":209,"line_end":209,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":103011,"byte_end":103027,"line_start":228,"line_end":228,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5434},{"krate":0,"index":5435},{"krate":0,"index":5437}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":103874,"byte_end":103890,"line_start":253,"line_end":253,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5443},{"krate":0,"index":5444},{"krate":0,"index":5445},{"krate":0,"index":5446},{"krate":0,"index":5448},{"krate":0,"index":5450}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":104558,"byte_end":104570,"line_start":277,"line_end":277,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5453}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":104782,"byte_end":104787,"line_start":286,"line_end":286,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5455},{"krate":0,"index":5456}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/mod.rs","byte_start":95987,"byte_end":95990,"line_start":111,"line_end":111,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/mod.rs","byte_start":96079,"byte_end":96082,"line_start":117,"line_end":117,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/context.rs","byte_start":127466,"byte_end":127475,"line_start":59,"line_end":59,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":853}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":12971559,"byte_end":12971573,"line_start":83,"line_end":83,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5575},{"krate":0,"index":5576},{"krate":0,"index":5577},{"krate":0,"index":5579}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":12975112,"byte_end":12975117,"line_start":192,"line_end":192,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5597}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":12975804,"byte_end":12975818,"line_start":216,"line_end":216,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5601}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":12976705,"byte_end":12976719,"line_start":248,"line_end":248,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5605}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":12976885,"byte_end":12976892,"line_start":256,"line_end":256,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5607},{"krate":0,"index":5609}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":12977350,"byte_end":12977357,"line_start":273,"line_end":273,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5611}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":12977525,"byte_end":12977528,"line_start":281,"line_end":281,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5613},{"krate":0,"index":5615},{"krate":0,"index":5620}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":12978626,"byte_end":12978632,"line_start":317,"line_end":317,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5623},{"krate":0,"index":5624}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/core.rs","byte_start":12986315,"byte_end":12986321,"line_start":69,"line_end":69,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/core.rs","byte_start":12986346,"byte_end":12986352,"line_start":70,"line_end":70,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/core.rs","byte_start":12986711,"byte_end":12986715,"line_start":85,"line_end":85,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5712}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/core.rs","byte_start":12987493,"byte_end":12987497,"line_start":108,"line_end":108,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5716},{"krate":0,"index":5718},{"krate":0,"index":5720},{"krate":0,"index":5722},{"krate":0,"index":5724},{"krate":0,"index":5726},{"krate":0,"index":5731},{"krate":0,"index":5733},{"krate":0,"index":5735}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12993879,"byte_end":12993888,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5766},{"krate":0,"index":5767},{"krate":0,"index":5768},{"krate":0,"index":5769},{"krate":0,"index":5770},{"krate":0,"index":5771},{"krate":0,"index":5772},{"krate":0,"index":5773}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12996967,"byte_end":12996976,"line_start":133,"line_end":133,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5775}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12997219,"byte_end":12997228,"line_start":142,"line_end":142,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5777}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12997505,"byte_end":12997514,"line_start":151,"line_end":151,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12997548,"byte_end":12997553,"line_start":153,"line_end":153,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5780}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/harness.rs","byte_start":12998231,"byte_end":12998238,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5840},{"krate":0,"index":5841},{"krate":0,"index":5842},{"krate":0,"index":5843}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/harness.rs","byte_start":12998715,"byte_end":12998722,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5847},{"krate":0,"index":5858},{"krate":0,"index":5862},{"krate":0,"index":5865},{"krate":0,"index":5868},{"krate":0,"index":5869},{"krate":0,"index":5870},{"krate":0,"index":5871},{"krate":0,"index":5872},{"krate":0,"index":5873},{"krate":0,"index":5875},{"krate":0,"index":5876},{"krate":0,"index":5877},{"krate":0,"index":5879}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/harness.rs","byte_start":13000893,"byte_end":13000898,"line_start":94,"line_end":94,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5857}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":13013202,"byte_end":13013212,"line_start":84,"line_end":84,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":13013249,"byte_end":13013259,"line_start":85,"line_end":85,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":13013275,"byte_end":13013285,"line_start":87,"line_end":87,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5912}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":13013461,"byte_end":13013471,"line_start":96,"line_end":96,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":13013498,"byte_end":13013508,"line_start":98,"line_end":98,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5917},{"krate":0,"index":5918}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":13014734,"byte_end":13014744,"line_start":137,"line_end":137,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5921}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":13015010,"byte_end":13015020,"line_start":149,"line_end":149,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5924}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/raw.rs","byte_start":13016267,"byte_end":13016274,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5970},{"krate":0,"index":5973},{"krate":0,"index":5974},{"krate":0,"index":5975},{"krate":0,"index":5976},{"krate":0,"index":5977},{"krate":0,"index":5978},{"krate":0,"index":5979}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/raw.rs","byte_start":13017805,"byte_end":13017812,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5981}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/raw.rs","byte_start":13017902,"byte_end":13017909,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/state.rs","byte_start":13020591,"byte_end":13020596,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6037},{"krate":0,"index":6038},{"krate":0,"index":6039},{"krate":0,"index":6041},{"krate":0,"index":6043},{"krate":0,"index":6045},{"krate":0,"index":6047},{"krate":0,"index":6048},{"krate":0,"index":6050},{"krate":0,"index":6056},{"krate":0,"index":6058},{"krate":0,"index":6060},{"krate":0,"index":6062},{"krate":0,"index":6069},{"krate":0,"index":6070}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/state.rs","byte_start":13029452,"byte_end":13029460,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6073},{"krate":0,"index":6074},{"krate":0,"index":6075},{"krate":0,"index":6076},{"krate":0,"index":6077},{"krate":0,"index":6078},{"krate":0,"index":6079},{"krate":0,"index":6080},{"krate":0,"index":6081},{"krate":0,"index":6082},{"krate":0,"index":6083},{"krate":0,"index":6084},{"krate":0,"index":6085},{"krate":0,"index":6086},{"krate":0,"index":6087},{"krate":0,"index":6088},{"krate":0,"index":6089},{"krate":0,"index":6090},{"krate":0,"index":6091}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/state.rs","byte_start":13031337,"byte_end":13031342,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6093}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/state.rs","byte_start":13031501,"byte_end":13031509,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6095}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/waker.rs","byte_start":13033327,"byte_end":13033335,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6145},{"krate":0,"index":6146}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":12979645,"byte_end":12979649,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":12979680,"byte_end":12979684,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":12979821,"byte_end":12979829,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":12979870,"byte_end":12979878,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":12981802,"byte_end":12981806,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6209},{"krate":0,"index":6210}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":12982698,"byte_end":12982702,"line_start":159,"line_end":159,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6213}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":12982871,"byte_end":12982879,"line_start":166,"line_end":166,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6216},{"krate":0,"index":6217}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":12983165,"byte_end":12983169,"line_start":179,"line_end":179,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6220}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":12983409,"byte_end":12983413,"line_start":189,"line_end":189,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6223}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":12983565,"byte_end":12983573,"line_start":195,"line_end":195,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6226}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":12983789,"byte_end":12983793,"line_start":204,"line_end":204,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6229},{"krate":0,"index":6230},{"krate":0,"index":6231},{"krate":0,"index":6232},{"krate":0,"index":6233}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/blocking/mod.rs","byte_start":128705,"byte_end":128717,"line_start":35,"line_end":35,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6270},{"krate":0,"index":6271}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":130892,"byte_end":130899,"line_start":80,"line_end":80,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":913},{"krate":0,"index":915},{"krate":0,"index":916}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":138819,"byte_end":138826,"line_start":351,"line_end":351,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6288}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":139375,"byte_end":139382,"line_start":375,"line_end":375,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6290}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":139902,"byte_end":139909,"line_start":398,"line_end":398,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6292},{"krate":0,"index":6293}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":143805,"byte_end":143812,"line_start":504,"line_end":504,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":143891,"byte_end":143898,"line_start":510,"line_end":510,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":923}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/enter.rs","byte_start":144693,"byte_end":144705,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/enter.rs","byte_start":147583,"byte_end":147604,"line_start":112,"line_end":112,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6321}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/enter.rs","byte_start":148434,"byte_end":148439,"line_start":142,"line_end":142,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6324}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/enter.rs","byte_start":150547,"byte_end":150552,"line_start":212,"line_end":212,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/enter.rs","byte_start":150682,"byte_end":150687,"line_start":218,"line_end":218,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":953}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":151745,"byte_end":151751,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":983},{"krate":0,"index":986},{"krate":0,"index":987}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154851,"byte_end":154857,"line_start":132,"line_end":132,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6357},{"krate":0,"index":6359}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":164217,"byte_end":164232,"line_start":359,"line_end":359,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":164380,"byte_end":164395,"line_start":365,"line_end":365,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":994}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":164553,"byte_end":164568,"line_start":371,"line_end":371,"column_start":23,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/shell.rs","byte_start":166857,"byte_end":166862,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1059},{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/shell.rs","byte_start":167468,"byte_end":167474,"line_start":52,"line_end":52,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1064},{"krate":0,"index":1065}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/spawner.rs","byte_start":168071,"byte_end":168078,"line_start":21,"line_end":21,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1071}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/spawner.rs","byte_start":168321,"byte_end":168328,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6392}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":116406,"byte_end":116413,"line_start":305,"line_end":305,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1107},{"krate":0,"index":1110},{"krate":0,"index":1113},{"krate":0,"index":1114},{"krate":0,"index":1115}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/coop.rs","byte_start":172931,"byte_end":172937,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1121},{"krate":0,"index":1122}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/coop.rs","byte_start":174478,"byte_end":174488,"line_start":114,"line_end":114,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1135}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/coop.rs","byte_start":175335,"byte_end":175351,"line_start":157,"line_end":157,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6435}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/coop.rs","byte_start":175483,"byte_end":175499,"line_start":163,"line_end":163,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6437}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/coop.rs","byte_start":177239,"byte_end":177245,"line_start":204,"line_end":204,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6442},{"krate":0,"index":6443}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/registry.rs","byte_start":13038933,"byte_end":13038936,"line_start":34,"line_end":34,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6496},{"krate":0,"index":6497}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/registry.rs","byte_start":13039658,"byte_end":13039666,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6504}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/registry.rs","byte_start":13039756,"byte_end":13039764,"line_start":68,"line_end":68,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6507},{"krate":0,"index":6509},{"krate":0,"index":6510}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/registry.rs","byte_start":13041917,"byte_end":13041924,"line_start":130,"line_end":130,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6519},{"krate":0,"index":6520}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/registry.rs","byte_start":13042032,"byte_end":13042039,"line_start":138,"line_end":138,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6522},{"krate":0,"index":6523},{"krate":0,"index":6524},{"krate":0,"index":6525}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13048111,"byte_end":13048120,"line_start":26,"line_end":26,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6611}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13048234,"byte_end":13048243,"line_start":32,"line_end":32,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6614},{"krate":0,"index":6616}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13048631,"byte_end":13048642,"line_start":51,"line_end":51,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6621}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13048928,"byte_end":13048938,"line_start":63,"line_end":63,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6623},{"krate":0,"index":6624},{"krate":0,"index":6625},{"krate":0,"index":6626},{"krate":0,"index":6627},{"krate":0,"index":6628},{"krate":0,"index":6629},{"krate":0,"index":6630},{"krate":0,"index":6631},{"krate":0,"index":6632},{"krate":0,"index":6633},{"krate":0,"index":6634},{"krate":0,"index":6635}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13052734,"byte_end":13052744,"line_start":190,"line_end":190,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6641}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13055093,"byte_end":13055099,"line_start":262,"line_end":262,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6648}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13055384,"byte_end":13055390,"line_start":273,"line_end":273,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6650},{"krate":0,"index":6651}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13061579,"byte_end":13061585,"line_start":423,"line_end":423,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6655},{"krate":0,"index":6662}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13063443,"byte_end":13063449,"line_start":487,"line_end":487,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6700},{"krate":0,"index":6701}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/all.rs","byte_start":13098441,"byte_end":13098450,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6724}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/all.rs","byte_start":13098596,"byte_end":13098605,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/all.rs","byte_start":13098644,"byte_end":13098653,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6731},{"krate":0,"index":6732}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/any.rs","byte_start":13099604,"byte_end":13099613,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6757}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/any.rs","byte_start":13099759,"byte_end":13099768,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/any.rs","byte_start":13099807,"byte_end":13099816,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6764},{"krate":0,"index":6765}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/chain.rs","byte_start":13100739,"byte_end":13100744,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6793}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/chain.rs","byte_start":13100924,"byte_end":13100929,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6797},{"krate":0,"index":6798},{"krate":0,"index":6802}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13102507,"byte_end":13102514,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6847}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13102798,"byte_end":13102805,"line_start":51,"line_end":51,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6851},{"krate":0,"index":6852}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13103781,"byte_end":13103787,"line_start":94,"line_end":94,"column_start":39,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13103842,"byte_end":13103848,"line_start":96,"line_end":96,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":6866},{"krate":0,"index":6867},{"krate":0,"index":6868},{"krate":0,"index":6869}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13104237,"byte_end":13104240,"line_start":113,"line_end":113,"column_start":27,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13104286,"byte_end":13104289,"line_start":115,"line_end":115,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6874},{"krate":0,"index":6875},{"krate":0,"index":6876},{"krate":0,"index":6877}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13104672,"byte_end":13104675,"line_start":132,"line_end":132,"column_start":27,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13104723,"byte_end":13104726,"line_start":134,"line_end":134,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6882},{"krate":0,"index":6883},{"krate":0,"index":6884},{"krate":0,"index":6885}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13105241,"byte_end":13105247,"line_start":150,"line_end":150,"column_start":44,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13105336,"byte_end":13105342,"line_start":152,"line_end":152,"column_start":56,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":6894},{"krate":0,"index":6895},{"krate":0,"index":6896},{"krate":0,"index":6897}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13106420,"byte_end":13106425,"line_start":191,"line_end":191,"column_start":32,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13106473,"byte_end":13106478,"line_start":193,"line_end":193,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6902},{"krate":0,"index":6903},{"krate":0,"index":6904},{"krate":0,"index":6905}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13106878,"byte_end":13106886,"line_start":210,"line_end":210,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13106934,"byte_end":13106942,"line_start":212,"line_end":212,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":6910},{"krate":0,"index":6911},{"krate":0,"index":6912},{"krate":0,"index":6913}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":13108213,"byte_end":13108218,"line_start":12,"line_end":12,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":13108249,"byte_end":13108254,"line_start":13,"line_end":13,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":13108285,"byte_end":13108290,"line_start":14,"line_end":14,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":13108833,"byte_end":13108838,"line_start":40,"line_end":40,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6954},{"krate":0,"index":6955},{"krate":0,"index":6956}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/filter.rs","byte_start":13109452,"byte_end":13109458,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6987}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/filter.rs","byte_start":13109676,"byte_end":13109682,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6991}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/filter.rs","byte_start":13109801,"byte_end":13109807,"line_start":35,"line_end":35,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6995},{"krate":0,"index":6996},{"krate":0,"index":6997}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/filter_map.rs","byte_start":13110893,"byte_end":13110902,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7024}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/filter_map.rs","byte_start":13111123,"byte_end":13111132,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7028}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/filter_map.rs","byte_start":13111254,"byte_end":13111263,"line_start":35,"line_end":35,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7033},{"krate":0,"index":7034},{"krate":0,"index":7035}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/fold.rs","byte_start":13112335,"byte_end":13112345,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7063}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/fold.rs","byte_start":13112541,"byte_end":13112551,"line_start":29,"line_end":29,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7068},{"krate":0,"index":7069}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/fuse.rs","byte_start":13113450,"byte_end":13113454,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7092}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/fuse.rs","byte_start":13113614,"byte_end":13113618,"line_start":27,"line_end":27,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7095},{"krate":0,"index":7096},{"krate":0,"index":7097}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":13114561,"byte_end":13114565,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":13115227,"byte_end":13115231,"line_start":41,"line_end":41,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7121},{"krate":0,"index":7122},{"krate":0,"index":7123}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/map.rs","byte_start":13115977,"byte_end":13115980,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7154}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/map.rs","byte_start":13116169,"byte_end":13116172,"line_start":27,"line_end":27,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7158}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/map.rs","byte_start":13116293,"byte_end":13116296,"line_start":33,"line_end":33,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7163},{"krate":0,"index":7164},{"krate":0,"index":7167}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/merge.rs","byte_start":13117141,"byte_end":13117146,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7195}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/merge.rs","byte_start":13117400,"byte_end":13117405,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7199},{"krate":0,"index":7200},{"krate":0,"index":7201}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/next.rs","byte_start":13118917,"byte_end":13118921,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/next.rs","byte_start":13118955,"byte_end":13118959,"line_start":16,"line_end":16,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7231}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/next.rs","byte_start":13119100,"byte_end":13119104,"line_start":22,"line_end":22,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":7234},{"krate":0,"index":7235}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":13119600,"byte_end":13119604,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":13120231,"byte_end":13120235,"line_start":42,"line_end":42,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7269},{"krate":0,"index":7270},{"krate":0,"index":7271}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":13120782,"byte_end":13120789,"line_start":12,"line_end":12,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":13120820,"byte_end":13120827,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":13120858,"byte_end":13120865,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":13121558,"byte_end":13121565,"line_start":44,"line_end":44,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7306},{"krate":0,"index":7307},{"krate":0,"index":7308}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13127230,"byte_end":13127239,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":7339},{"krate":0,"index":7340},{"krate":0,"index":7341},{"krate":0,"index":7344},{"krate":0,"index":7347},{"krate":0,"index":7350},{"krate":0,"index":7351},{"krate":0,"index":7352},{"krate":0,"index":7353},{"krate":0,"index":7354},{"krate":0,"index":7355},{"krate":0,"index":7357}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13134240,"byte_end":13134249,"line_start":424,"line_end":424,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":7362}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13135788,"byte_end":13135797,"line_start":470,"line_end":470,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7367},{"krate":0,"index":7368},{"krate":0,"index":7369}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/skip.rs","byte_start":13137013,"byte_end":13137017,"line_start":18,"line_end":18,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7395}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/skip.rs","byte_start":13137227,"byte_end":13137231,"line_start":29,"line_end":29,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7398}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/skip.rs","byte_start":13137364,"byte_end":13137368,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7401},{"krate":0,"index":7402},{"krate":0,"index":7403}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/skip_while.rs","byte_start":13138594,"byte_end":13138603,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7431}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/skip_while.rs","byte_start":13138824,"byte_end":13138833,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7435}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/skip_while.rs","byte_start":13139018,"byte_end":13139027,"line_start":38,"line_end":38,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7439},{"krate":0,"index":7440},{"krate":0,"index":7441}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/try_next.rs","byte_start":13140376,"byte_end":13140383,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/try_next.rs","byte_start":13140417,"byte_end":13140424,"line_start":16,"line_end":16,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7471}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/try_next.rs","byte_start":13140631,"byte_end":13140638,"line_start":24,"line_end":24,"column_start":73,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":7476},{"krate":0,"index":7477}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/take.rs","byte_start":13141248,"byte_end":13141252,"line_start":19,"line_end":19,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7506}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/take.rs","byte_start":13141462,"byte_end":13141466,"line_start":30,"line_end":30,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7509}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/take.rs","byte_start":13141599,"byte_end":13141603,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7512},{"krate":0,"index":7513},{"krate":0,"index":7515}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/take_while.rs","byte_start":13143122,"byte_end":13143131,"line_start":19,"line_end":19,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7542}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/take_while.rs","byte_start":13143391,"byte_end":13143400,"line_start":31,"line_end":31,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7546}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/take_while.rs","byte_start":13143593,"byte_end":13143602,"line_start":41,"line_end":41,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7550},{"krate":0,"index":7551},{"krate":0,"index":7554}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/timeout.rs","byte_start":13174659,"byte_end":13174666,"line_start":23,"line_end":23,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7713}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/timeout.rs","byte_start":13175021,"byte_end":13175028,"line_start":37,"line_end":37,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7716},{"krate":0,"index":7717},{"krate":0,"index":7718}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13097671,"byte_end":13097673,"line_start":824,"line_end":824,"column_start":32,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/task/atomic_waker.rs","byte_start":13221089,"byte_end":13221100,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7916},{"krate":0,"index":7917},{"krate":0,"index":7918},{"krate":0,"index":7919},{"krate":0,"index":7923},{"krate":0,"index":7924}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/task/atomic_waker.rs","byte_start":13227027,"byte_end":13227038,"line_start":280,"line_end":280,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7927}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/task/atomic_waker.rs","byte_start":13227124,"byte_end":13227135,"line_start":286,"line_end":286,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7929}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/task/atomic_waker.rs","byte_start":13227268,"byte_end":13227279,"line_start":292,"line_end":292,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/task/atomic_waker.rs","byte_start":13227304,"byte_end":13227315,"line_start":293,"line_end":293,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/task/atomic_waker.rs","byte_start":13227411,"byte_end":13227416,"line_start":300,"line_end":300,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7936},{"krate":0,"index":7937}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":13193743,"byte_end":13193752,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7780}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":13193914,"byte_end":13193923,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":13193992,"byte_end":13194004,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":7783}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":13194303,"byte_end":13194315,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":13196126,"byte_end":13196132,"line_start":143,"line_end":143,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7796},{"krate":0,"index":7799},{"krate":0,"index":7801},{"krate":0,"index":7808}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":13202433,"byte_end":13202439,"line_start":357,"line_end":357,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7811}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":13202578,"byte_end":13202586,"line_start":365,"line_end":365,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7814},{"krate":0,"index":7815}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":13206977,"byte_end":13206985,"line_start":514,"line_end":514,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7818}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":13207132,"byte_end":13207140,"line_start":522,"line_end":522,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7821},{"krate":0,"index":7822}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":13207603,"byte_end":13207608,"line_start":538,"line_end":538,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7825},{"krate":0,"index":7826},{"krate":0,"index":7828},{"krate":0,"index":7829},{"krate":0,"index":7831},{"krate":0,"index":7835},{"krate":0,"index":7839},{"krate":0,"index":7841},{"krate":0,"index":7843},{"krate":0,"index":7845}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":13211980,"byte_end":13211985,"line_start":684,"line_end":684,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":13212022,"byte_end":13212027,"line_start":685,"line_end":685,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":13212052,"byte_end":13212057,"line_start":687,"line_end":687,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7853}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":13212426,"byte_end":13212431,"line_start":705,"line_end":705,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7857}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":13212826,"byte_end":13212831,"line_start":720,"line_end":720,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7866},{"krate":0,"index":7867},{"krate":0,"index":7868},{"krate":0,"index":7869},{"krate":0,"index":7870},{"krate":0,"index":7871},{"krate":0,"index":7872},{"krate":0,"index":7873},{"krate":0,"index":7874},{"krate":0,"index":7875},{"krate":0,"index":7876},{"krate":0,"index":7877},{"krate":0,"index":7878}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":13214544,"byte_end":13214549,"line_start":786,"line_end":786,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7880}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/block.rs","byte_start":13233945,"byte_end":13233950,"line_start":77,"line_end":77,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":8063},{"krate":0,"index":8064},{"krate":0,"index":8065},{"krate":0,"index":8066},{"krate":0,"index":8068},{"krate":0,"index":8070},{"krate":0,"index":8071},{"krate":0,"index":8072},{"krate":0,"index":8074},{"krate":0,"index":8075},{"krate":0,"index":8076},{"krate":0,"index":8078},{"krate":0,"index":8079},{"krate":0,"index":8080}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/block.rs","byte_start":13243932,"byte_end":13243938,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":8085}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/block.rs","byte_start":13244420,"byte_end":13244426,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8088},{"krate":0,"index":8089}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":13245064,"byte_end":13245070,"line_start":20,"line_end":20,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8125}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":13245202,"byte_end":13245208,"line_start":28,"line_end":28,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8128}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":13245615,"byte_end":13245623,"line_start":44,"line_end":44,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":8134}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":13247395,"byte_end":13247403,"line_start":103,"line_end":103,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8140},{"krate":0,"index":8141},{"krate":0,"index":8148},{"krate":0,"index":8149},{"krate":0,"index":8150}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":13249831,"byte_end":13249839,"line_start":182,"line_end":182,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":13249899,"byte_end":13249907,"line_start":185,"line_end":185,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8755},{"krate":0,"index":8756}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":13250095,"byte_end":13250101,"line_start":194,"line_end":194,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":8155},{"krate":0,"index":8156},{"krate":0,"index":8163},{"krate":0,"index":8164},{"krate":0,"index":8171},{"krate":0,"index":8173}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":13261491,"byte_end":13261493,"line_start":20,"line_end":20,"column_start":38,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8246}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":13261894,"byte_end":13261896,"line_start":38,"line_end":38,"column_start":38,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8254}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":13262203,"byte_end":13262212,"line_start":53,"line_end":53,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":8257}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":13262474,"byte_end":13262486,"line_start":62,"line_end":62,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":8260}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":13264271,"byte_end":13264275,"line_start":124,"line_end":124,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8282}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":13264908,"byte_end":13264916,"line_start":148,"line_end":148,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":8289}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":13265182,"byte_end":13265186,"line_start":157,"line_end":157,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":13265235,"byte_end":13265239,"line_start":158,"line_end":158,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":13265718,"byte_end":13265720,"line_start":182,"line_end":182,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":8302},{"krate":0,"index":8303},{"krate":0,"index":8304},{"krate":0,"index":8305}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":13266419,"byte_end":13266421,"line_start":208,"line_end":208,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":8308}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":13266569,"byte_end":13266571,"line_start":214,"line_end":214,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":8311}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":13266749,"byte_end":13266751,"line_start":220,"line_end":220,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":8315}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":13267151,"byte_end":13267153,"line_start":236,"line_end":236,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":8319}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":13267680,"byte_end":13267682,"line_start":261,"line_end":261,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":8323},{"krate":0,"index":8324},{"krate":0,"index":8326},{"krate":0,"index":8330}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":13270802,"byte_end":13270804,"line_start":352,"line_end":352,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":8336}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":13271240,"byte_end":13271244,"line_start":373,"line_end":373,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":8344}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":13271708,"byte_end":13271712,"line_start":395,"line_end":395,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8348}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":13272261,"byte_end":13272273,"line_start":412,"line_end":412,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":8357}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":13273933,"byte_end":13273944,"line_start":485,"line_end":485,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8384},{"krate":0,"index":8385},{"krate":0,"index":8386},{"krate":0,"index":8387},{"krate":0,"index":8388},{"krate":0,"index":8389},{"krate":0,"index":8391},{"krate":0,"index":8392},{"krate":0,"index":8393}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/list.rs","byte_start":13276688,"byte_end":13276690,"line_start":56,"line_end":56,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":8445},{"krate":0,"index":8446},{"krate":0,"index":8447},{"krate":0,"index":8449}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/list.rs","byte_start":13282394,"byte_end":13282396,"line_start":213,"line_end":213,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8452}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/list.rs","byte_start":13282673,"byte_end":13282675,"line_start":222,"line_end":222,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":8455},{"krate":0,"index":8456},{"krate":0,"index":8457},{"krate":0,"index":8458}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/list.rs","byte_start":13286074,"byte_end":13286076,"line_start":333,"line_end":333,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8461}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":13286750,"byte_end":13286765,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":8491}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":13286906,"byte_end":13286921,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":8494}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":13287379,"byte_end":13287396,"line_start":41,"line_end":41,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8500}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":13288374,"byte_end":13288391,"line_start":71,"line_end":71,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8506},{"krate":0,"index":8507},{"krate":0,"index":8508},{"krate":0,"index":8515},{"krate":0,"index":8516}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":13290863,"byte_end":13290880,"line_start":151,"line_end":151,"column_start":35,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":8519},{"krate":0,"index":8520}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":13291046,"byte_end":13291061,"line_start":159,"line_end":159,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":8523},{"krate":0,"index":8524}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":13292171,"byte_end":13292180,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8544}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":13292340,"byte_end":13292349,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":13292835,"byte_end":13292847,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":13292880,"byte_end":13292892,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":8551}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":13293232,"byte_end":13293244,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":8554}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":13293473,"byte_end":13293482,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":8556}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":13293612,"byte_end":13293621,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":13294107,"byte_end":13294119,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8559}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":13294425,"byte_end":13294437,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":13294594,"byte_end":13294605,"line_start":103,"line_end":103,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8562}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":13294704,"byte_end":13294715,"line_start":109,"line_end":109,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":8564}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":13294845,"byte_end":13294856,"line_start":115,"line_end":115,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":13295360,"byte_end":13295376,"line_start":132,"line_end":132,"column_start":35,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":13295413,"byte_end":13295429,"line_start":134,"line_end":134,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":8812}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":13300246,"byte_end":13300255,"line_start":151,"line_end":151,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":8646},{"krate":0,"index":8647},{"krate":0,"index":8648},{"krate":0,"index":8651},{"krate":0,"index":8653},{"krate":0,"index":8657},{"krate":0,"index":8658},{"krate":0,"index":8659},{"krate":0,"index":8660},{"krate":0,"index":8665},{"krate":0,"index":8666},{"krate":0,"index":8667},{"krate":0,"index":8668}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":13316449,"byte_end":13316458,"line_start":578,"line_end":578,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":8670}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":13316537,"byte_end":13316546,"line_start":584,"line_end":584,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8672}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":13316924,"byte_end":13316933,"line_start":595,"line_end":595,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":13316958,"byte_end":13316967,"line_start":596,"line_end":596,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":13317005,"byte_end":13317011,"line_start":600,"line_end":600,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":8677},{"krate":0,"index":8681},{"krate":0,"index":8682},{"krate":0,"index":8686},{"krate":0,"index":8688},{"krate":0,"index":8689}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":13323417,"byte_end":13323423,"line_start":793,"line_end":793,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":8692}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":13323496,"byte_end":13323502,"line_start":799,"line_end":799,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":8694}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":13323924,"byte_end":13323936,"line_start":815,"line_end":815,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":8696}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":13324116,"byte_end":13324128,"line_start":825,"line_end":825,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8699}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":13324272,"byte_end":13324284,"line_start":831,"line_end":831,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":13324331,"byte_end":13324346,"line_start":835,"line_end":835,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":8702},{"krate":0,"index":8703}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":13324876,"byte_end":13324891,"line_start":854,"line_end":854,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":8705}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":13325177,"byte_end":13325192,"line_start":863,"line_end":863,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":13325230,"byte_end":13325236,"line_start":867,"line_end":867,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":8708},{"krate":0,"index":8709},{"krate":0,"index":8710},{"krate":0,"index":8711},{"krate":0,"index":8712},{"krate":0,"index":8713},{"krate":0,"index":8714},{"krate":0,"index":8715},{"krate":0,"index":8716}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":13330723,"byte_end":13330731,"line_start":1038,"line_end":1038,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":8718},{"krate":0,"index":8719},{"krate":0,"index":8720},{"krate":0,"index":8721},{"krate":0,"index":8722},{"krate":0,"index":8723},{"krate":0,"index":8724},{"krate":0,"index":8725},{"krate":0,"index":8726},{"krate":0,"index":8727},{"krate":0,"index":8728},{"krate":0,"index":8729},{"krate":0,"index":8730},{"krate":0,"index":8731},{"krate":0,"index":8732},{"krate":0,"index":8733}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":13334394,"byte_end":13334402,"line_start":1176,"line_end":1176,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8735}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":13334755,"byte_end":13334766,"line_start":1192,"line_end":1192,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8737},{"krate":0,"index":8738},{"krate":0,"index":8739},{"krate":0,"index":8740},{"krate":0,"index":8741},{"krate":0,"index":8742},{"krate":0,"index":8743},{"krate":0,"index":8744}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/yield_now.rs","byte_start":13348548,"byte_end":13348556,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8922},{"krate":0,"index":8923}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13355688,"byte_end":13355696,"line_start":221,"line_end":221,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":8989},{"krate":0,"index":8990},{"krate":0,"index":8992},{"krate":0,"index":8994},{"krate":0,"index":8998},{"krate":0,"index":9000},{"krate":0,"index":9003}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13363538,"byte_end":13363546,"line_start":446,"line_end":446,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":9007}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13363685,"byte_end":13363693,"line_start":452,"line_end":452,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":9009},{"krate":0,"index":9010}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13364658,"byte_end":13364666,"line_start":476,"line_end":476,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":9013}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13364747,"byte_end":13364755,"line_start":482,"line_end":482,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":9015}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13365622,"byte_end":13365630,"line_start":512,"line_end":512,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":9019},{"krate":0,"index":9020}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13366515,"byte_end":13366521,"line_start":543,"line_end":543,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":9024},{"krate":0,"index":9026}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13367084,"byte_end":13367087,"line_start":562,"line_end":562,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":9028},{"krate":0,"index":9030},{"krate":0,"index":9035}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13370656,"byte_end":13370664,"line_start":100,"line_end":100,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":9080},{"krate":0,"index":9084},{"krate":0,"index":9087}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13372440,"byte_end":13372448,"line_start":165,"line_end":165,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":9093}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13372656,"byte_end":13372664,"line_start":173,"line_end":173,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":9097}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13372985,"byte_end":13373000,"line_start":188,"line_end":188,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":9101},{"krate":0,"index":9102}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13373301,"byte_end":13373306,"line_start":198,"line_end":198,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":9111}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13373924,"byte_end":13373925,"line_start":222,"line_end":222,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13374110,"byte_end":13374121,"line_start":230,"line_end":230,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":9118}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13374265,"byte_end":13374276,"line_start":236,"line_end":236,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":9120}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13374423,"byte_end":13374434,"line_start":242,"line_end":242,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/clock.rs","byte_start":13379019,"byte_end":13379024,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":9911},{"krate":0,"index":9912},{"krate":0,"index":9913},{"krate":0,"index":9914}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13389622,"byte_end":13389632,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":9203},{"krate":0,"index":9204},{"krate":0,"index":9205},{"krate":0,"index":9206},{"krate":0,"index":9209},{"krate":0,"index":9210},{"krate":0,"index":9218},{"krate":0,"index":9222},{"krate":0,"index":9223},{"krate":0,"index":9224},{"krate":0,"index":9226},{"krate":0,"index":9227},{"krate":0,"index":9228},{"krate":0,"index":9229},{"krate":0,"index":9230},{"krate":0,"index":9231},{"krate":0,"index":9232},{"krate":0,"index":9236}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13407626,"byte_end":13407636,"line_start":759,"line_end":759,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13407664,"byte_end":13407674,"line_start":761,"line_end":761,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":9241}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13407811,"byte_end":13407821,"line_start":768,"line_end":768,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":9244},{"krate":0,"index":9245}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13408203,"byte_end":13408208,"line_start":778,"line_end":778,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":9248},{"krate":0,"index":9249},{"krate":0,"index":9250},{"krate":0,"index":9251},{"krate":0,"index":9252},{"krate":0,"index":9253},{"krate":0,"index":9254},{"krate":0,"index":9255}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13410335,"byte_end":13410340,"line_start":860,"line_end":860,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":9258}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13410470,"byte_end":13410473,"line_start":869,"line_end":869,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":9260}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13410560,"byte_end":13410567,"line_start":875,"line_end":875,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":9263},{"krate":0,"index":9264},{"krate":0,"index":9265},{"krate":0,"index":9266}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13413105,"byte_end":13413110,"line_start":70,"line_end":70,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":9297},{"krate":0,"index":9298},{"krate":0,"index":9299},{"krate":0,"index":9300}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13414088,"byte_end":13414093,"line_start":100,"line_end":100,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":9302},{"krate":0,"index":9303}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/atomic_stack.rs","byte_start":13427763,"byte_end":13427774,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":9336},{"krate":0,"index":9337},{"krate":0,"index":9338},{"krate":0,"index":9339}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/atomic_stack.rs","byte_start":13429752,"byte_end":13429770,"line_start":94,"line_end":94,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":9341},{"krate":0,"index":9342}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/atomic_stack.rs","byte_start":13430366,"byte_end":13430384,"line_start":117,"line_end":117,"column_start":15,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":9344}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/entry.rs","byte_start":13434622,"byte_end":13434627,"line_start":112,"line_end":112,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":9408},{"krate":0,"index":9409},{"krate":0,"index":9410},{"krate":0,"index":9411},{"krate":0,"index":9412},{"krate":0,"index":9413},{"krate":0,"index":9414},{"krate":0,"index":9415},{"krate":0,"index":9416},{"krate":0,"index":9417},{"krate":0,"index":9418},{"krate":0,"index":9419},{"krate":0,"index":9420},{"krate":0,"index":9421}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/entry.rs","byte_start":13441295,"byte_end":13441300,"line_start":341,"line_end":341,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":9424}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/entry.rs","byte_start":13441508,"byte_end":13441513,"line_start":352,"line_end":352,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/entry.rs","byte_start":13441538,"byte_end":13441543,"line_start":353,"line_end":353,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/handle.rs","byte_start":13441920,"byte_end":13441926,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":9448},{"krate":0,"index":9449},{"krate":0,"index":9450}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/handle.rs","byte_start":13442589,"byte_end":13442595,"line_start":35,"line_end":35,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":9452}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/registration.rs","byte_start":13443040,"byte_end":13443052,"line_start":16,"line_end":16,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":9485},{"krate":0,"index":9486},{"krate":0,"index":9487},{"krate":0,"index":9488},{"krate":0,"index":9489}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/registration.rs","byte_start":13443962,"byte_end":13443974,"line_start":52,"line_end":52,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":9492}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/stack.rs","byte_start":13444258,"byte_end":13444263,"line_start":13,"line_end":13,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":9510}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/stack.rs","byte_start":13444354,"byte_end":13444359,"line_start":19,"line_end":19,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":9512},{"krate":0,"index":9513},{"krate":0,"index":9514},{"krate":0,"index":9515},{"krate":0,"index":9516},{"krate":0,"index":9517},{"krate":0,"index":9518},{"krate":0,"index":9519}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/mod.rs","byte_start":13419058,"byte_end":13419064,"line_start":125,"line_end":125,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":9589},{"krate":0,"index":9590},{"krate":0,"index":9591},{"krate":0,"index":9592},{"krate":0,"index":9593},{"krate":0,"index":9594},{"krate":0,"index":9595}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/mod.rs","byte_start":13422761,"byte_end":13422767,"line_start":238,"line_end":238,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":9601},{"krate":0,"index":9602},{"krate":0,"index":9603},{"krate":0,"index":9604},{"krate":0,"index":9605},{"krate":0,"index":9606}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/mod.rs","byte_start":13425340,"byte_end":13425346,"line_start":335,"line_end":335,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":9612}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/mod.rs","byte_start":13425462,"byte_end":13425467,"line_start":346,"line_end":346,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":9614},{"krate":0,"index":9615},{"krate":0,"index":9616},{"krate":0,"index":9617},{"krate":0,"index":9618},{"krate":0,"index":9619}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/mod.rs","byte_start":13427084,"byte_end":13427089,"line_start":408,"line_end":408,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":9621}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":13448681,"byte_end":13448686,"line_start":35,"line_end":35,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":9631},{"krate":0,"index":9632},{"krate":0,"index":9633},{"krate":0,"index":9634},{"krate":0,"index":9635},{"krate":0,"index":9636},{"krate":0,"index":9637},{"krate":0,"index":9638}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":13450053,"byte_end":13450058,"line_start":89,"line_end":89,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":13450085,"byte_end":13450090,"line_start":91,"line_end":91,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":9641}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13450862,"byte_end":13450869,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":9657},{"krate":0,"index":9658},{"krate":0,"index":9659},{"krate":0,"index":9660},{"krate":0,"index":9661},{"krate":0,"index":9662},{"krate":0,"index":9663},{"krate":0,"index":9664},{"krate":0,"index":9665}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13454643,"byte_end":13454650,"line_start":129,"line_end":129,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":9667}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13454779,"byte_end":13454786,"line_start":135,"line_end":135,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":9669}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13454901,"byte_end":13454908,"line_start":141,"line_end":141,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":9671},{"krate":0,"index":9672}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13455073,"byte_end":13455080,"line_start":149,"line_end":149,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":9674}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13455185,"byte_end":13455192,"line_start":155,"line_end":155,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":9676},{"krate":0,"index":9677}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13455333,"byte_end":13455340,"line_start":163,"line_end":163,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":9679},{"krate":0,"index":9680}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13455501,"byte_end":13455508,"line_start":171,"line_end":171,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":9682}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13455615,"byte_end":13455622,"line_start":177,"line_end":177,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":9684}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13459504,"byte_end":13459512,"line_start":124,"line_end":124,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":9726},{"krate":0,"index":9727}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13460807,"byte_end":13460815,"line_start":169,"line_end":169,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":9732},{"krate":0,"index":9733}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13464147,"byte_end":13464154,"line_start":119,"line_end":119,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":9782}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13464283,"byte_end":13464290,"line_start":127,"line_end":127,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":9785},{"krate":0,"index":9786},{"krate":0,"index":9787},{"krate":0,"index":9788}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13464828,"byte_end":13464835,"line_start":148,"line_end":148,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":9791},{"krate":0,"index":9792}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13465413,"byte_end":13465420,"line_start":172,"line_end":172,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":9794}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13465564,"byte_end":13465571,"line_start":178,"line_end":178,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13465608,"byte_end":13465613,"line_start":180,"line_end":180,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":9797}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":13483753,"byte_end":13483761,"line_start":70,"line_end":70,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":10111},{"krate":0,"index":10112},{"krate":0,"index":10113}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":13484576,"byte_end":13484584,"line_start":95,"line_end":95,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":10116},{"krate":0,"index":10117}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/level.rs","byte_start":13475517,"byte_end":13475522,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":9828},{"krate":0,"index":9830},{"krate":0,"index":9831},{"krate":0,"index":9832},{"krate":0,"index":9833},{"krate":0,"index":9834}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/level.rs","byte_start":13480274,"byte_end":13480279,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":9837}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/mod.rs","byte_start":13467338,"byte_end":13467343,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":9874},{"krate":0,"index":9875},{"krate":0,"index":9876},{"krate":0,"index":9877},{"krate":0,"index":9878},{"krate":0,"index":9880},{"krate":0,"index":9882},{"krate":0,"index":9883},{"krate":0,"index":9884},{"krate":0,"index":9885},{"krate":0,"index":9886},{"krate":0,"index":9887}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/mod.rs","byte_start":13473051,"byte_end":13473055,"line_start":254,"line_end":254,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":9890}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/bit.rs","byte_start":13485417,"byte_end":13485421,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":10158},{"krate":0,"index":10159},{"krate":0,"index":10160},{"krate":0,"index":10161},{"krate":0,"index":10162},{"krate":0,"index":10163},{"krate":0,"index":10164}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/bit.rs","byte_start":13486895,"byte_end":13486899,"line_start":61,"line_end":61,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":10166}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/addr.rs","byte_start":13494118,"byte_end":13494125,"line_start":76,"line_end":76,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":10197},{"krate":0,"index":10198},{"krate":0,"index":10199},{"krate":0,"index":10200},{"krate":0,"index":10201},{"krate":0,"index":10202},{"krate":0,"index":10203},{"krate":0,"index":10204}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/generation.rs","byte_start":13497154,"byte_end":13497164,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":10226},{"krate":0,"index":10227},{"krate":0,"index":10228},{"krate":0,"index":10229},{"krate":0,"index":10230}],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/page.rs","byte_start":13498303,"byte_end":13498308,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":10267},{"krate":0,"index":10268},{"krate":0,"index":10270}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/page.rs","byte_start":13498650,"byte_end":13498656,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":10274},{"krate":0,"index":10275},{"krate":0,"index":10277},{"krate":0,"index":10280},{"krate":0,"index":10283},{"krate":0,"index":10286}],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/page.rs","byte_start":13502608,"byte_end":13502613,"line_start":167,"line_end":167,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":10291}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/page.rs","byte_start":13502919,"byte_end":13502925,"line_start":178,"line_end":178,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":10295}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/shard.rs","byte_start":13505068,"byte_end":13505073,"line_start":38,"line_end":38,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":10319},{"krate":0,"index":10322},{"krate":0,"index":10323},{"krate":0,"index":10324},{"krate":0,"index":10325},{"krate":0,"index":10326}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/shard.rs","byte_start":13506752,"byte_end":13506757,"line_start":99,"line_end":99,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":10329}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/slot.rs","byte_start":13507134,"byte_end":13507138,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":10350},{"krate":0,"index":10351},{"krate":0,"index":10352},{"krate":0,"index":10353},{"krate":0,"index":10354},{"krate":0,"index":10356}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/stack.rs","byte_start":13508109,"byte_end":13508122,"line_start":12,"line_end":12,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":10380},{"krate":0,"index":10381},{"krate":0,"index":10382}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/stack.rs","byte_start":13508950,"byte_end":13508963,"line_start":47,"line_end":47,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":10385}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/mod.rs","byte_start":13488497,"byte_end":13488501,"line_start":56,"line_end":56,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/mod.rs","byte_start":13488538,"byte_end":13488542,"line_start":57,"line_end":57,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/mod.rs","byte_start":13488565,"byte_end":13488569,"line_start":59,"line_end":59,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":10410},{"krate":0,"index":10411},{"krate":0,"index":10412},{"krate":0,"index":10413}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/mod.rs","byte_start":13490084,"byte_end":13490088,"line_start":103,"line_end":103,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":10416}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":181552,"byte_end":181562,"line_start":23,"line_end":23,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":181621,"byte_end":181631,"line_start":24,"line_end":24,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":182920,"byte_end":182928,"line_start":64,"line_end":64,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":182965,"byte_end":182973,"line_start":65,"line_end":65,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":183027,"byte_end":183037,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1172},{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1176}],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":186041,"byte_end":186051,"line_start":167,"line_end":167,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1179}],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":187389,"byte_end":187397,"line_start":220,"line_end":220,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1182}],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":187596,"byte_end":187604,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1185}],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/rand.rs","byte_start":197676,"byte_end":197684,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1191},{"krate":0,"index":1192},{"krate":0,"index":1193}],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/wake.rs","byte_start":199546,"byte_end":199554,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1223},{"krate":0,"index":1224}],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/intrusive_double_linked_list.rs","byte_start":203520,"byte_end":203528,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1267}],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/intrusive_double_linked_list.rs","byte_start":203778,"byte_end":203786,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1270},{"krate":0,"index":1271}],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Direct","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/intrusive_double_linked_list.rs","byte_start":203891,"byte_end":203899,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1274}],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Inherent","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/intrusive_double_linked_list.rs","byte_start":204208,"byte_end":204218,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1282},{"krate":0,"index":1284},{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1288},{"krate":0,"index":1290}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":14197,"byte_end":14203,"line_start":348,"line_end":348,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/mod.rs","byte_start":16314,"byte_end":16321,"line_start":35,"line_end":35,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":85}},{"kind":"Mod","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":14258,"byte_end":14264,"line_start":355,"line_end":355,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":95}},{"kind":"Mod","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":14275,"byte_end":14277,"line_start":357,"line_end":357,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":243}},{"kind":"Mod","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":14287,"byte_end":14290,"line_start":358,"line_end":358,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":445}},{"kind":"Mod","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72960,"byte_end":72963,"line_start":34,"line_end":34,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":3948}},{"kind":"Mod","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":73067,"byte_end":73070,"line_start":40,"line_end":40,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":4416}},{"kind":"Mod","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":73134,"byte_end":73138,"line_start":45,"line_end":45,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":4619}},{"kind":"Mod","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/mod.rs","byte_start":12918241,"byte_end":12918249,"line_start":3,"line_end":3,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":4620}},{"kind":"Mod","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":14322,"byte_end":14329,"line_start":363,"line_end":363,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":822}},{"kind":"Mod","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":14379,"byte_end":14386,"line_start":369,"line_end":369,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":836}},{"kind":"Mod","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":14437,"byte_end":14443,"line_start":374,"line_end":374,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":6444}},{"kind":"Mod","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":13036103,"byte_end":13036107,"line_start":59,"line_end":59,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":6535}},{"kind":"Mod","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":14474,"byte_end":14480,"line_start":378,"line_end":378,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":6702}},{"kind":"Mod","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":14577,"byte_end":14581,"line_start":389,"line_end":389,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":8873}},{"kind":"Mod","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":14635,"byte_end":14639,"line_start":394,"line_end":394,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":9149}},{"kind":"Mod","span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":13377308,"byte_end":13377319,"line_start":99,"line_end":99,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":9154}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/scoped_tls.rs","byte_start":29760,"byte_end":29769,"line_start":32,"line_end":32,"column_start":25,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":63},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/scoped_tls.rs","byte_start":29785,"byte_end":29794,"line_start":34,"line_end":34,"column_start":9,"column_end":18},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":63},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/scoped_tls.rs","byte_start":30144,"byte_end":30149,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":74},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":31905,"byte_end":31914,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1292},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":32077,"byte_end":32086,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1292},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":33273,"byte_end":33282,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1292},"to":{"krate":2,"index":12562}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/poll_fn.rs","byte_start":34036,"byte_end":34042,"line_start":13,"line_end":13,"column_start":19,"column_end":25},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":149},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/poll_fn.rs","byte_start":34256,"byte_end":34262,"line_start":23,"line_end":23,"column_start":24,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":149},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/poll_fn.rs","byte_start":34404,"byte_end":34410,"line_start":29,"line_end":29,"column_start":23,"column_end":29},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":149},"to":{"krate":2,"index":12562}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/ready.rs","byte_start":34941,"byte_end":34946,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1305},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/ready.rs","byte_start":34973,"byte_end":34978,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1305},"to":{"krate":2,"index":12562}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/try_join.rs","byte_start":36175,"byte_end":36183,"line_start":41,"line_end":41,"column_start":44,"column_end":52},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1312},"to":{"krate":2,"index":12562}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47547,"byte_end":47556,"line_start":23,"line_end":23,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":309},"to":{"krate":0,"index":264}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":50006,"byte_end":50009,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"kind":{"Impl":{"id":12}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":264}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":50169,"byte_end":50172,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"kind":{"Impl":{"id":13}},"from":{"krate":2,"index":43302},"to":{"krate":0,"index":264}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":50801,"byte_end":50807,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"kind":{"Impl":{"id":14}},"from":{"krate":1,"index":10271},"to":{"krate":0,"index":264}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":56771,"byte_end":56774,"line_start":153,"line_end":153,"column_start":51,"column_end":54},"kind":{"Impl":{"id":15}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":309}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":56917,"byte_end":56920,"line_start":161,"line_end":161,"column_start":23,"column_end":26},"kind":{"Impl":{"id":16}},"from":{"krate":2,"index":43302},"to":{"krate":0,"index":309}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":57716,"byte_end":57722,"line_start":193,"line_end":193,"column_start":48,"column_end":54},"kind":{"Impl":{"id":17}},"from":{"krate":1,"index":10271},"to":{"krate":0,"index":309}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":60148,"byte_end":60151,"line_start":64,"line_end":64,"column_start":51,"column_end":54},"kind":{"Impl":{"id":18}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":354}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":60294,"byte_end":60297,"line_start":72,"line_end":72,"column_start":23,"column_end":26},"kind":{"Impl":{"id":19}},"from":{"krate":2,"index":43302},"to":{"krate":0,"index":354}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":60751,"byte_end":60757,"line_start":90,"line_end":90,"column_start":48,"column_end":54},"kind":{"Impl":{"id":20}},"from":{"krate":1,"index":10271},"to":{"krate":0,"index":354}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":68662,"byte_end":68665,"line_start":174,"line_end":174,"column_start":53,"column_end":56},"kind":{"Impl":{"id":21}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":393}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":68813,"byte_end":68816,"line_start":182,"line_end":182,"column_start":24,"column_end":27},"kind":{"Impl":{"id":22}},"from":{"krate":2,"index":43302},"to":{"krate":0,"index":393}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":69385,"byte_end":69388,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"kind":{"Impl":{"id":23}},"from":{"krate":5,"index":7014},"to":{"krate":0,"index":393}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":69896,"byte_end":69902,"line_start":223,"line_end":223,"column_start":25,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":1,"index":10271},"to":{"krate":0,"index":393}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":70415,"byte_end":70421,"line_start":241,"line_end":241,"column_start":25,"column_end":31},"kind":{"Impl":{"id":25}},"from":{"krate":1,"index":10271},"to":{"krate":0,"index":393}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":70937,"byte_end":70943,"line_start":259,"line_end":259,"column_start":25,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":1,"index":10271},"to":{"krate":0,"index":393}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":71454,"byte_end":71460,"line_start":277,"line_end":277,"column_start":25,"column_end":31},"kind":{"Impl":{"id":27}},"from":{"krate":1,"index":10271},"to":{"krate":0,"index":393}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/scheduled_io.rs","byte_start":12618607,"byte_end":12618618,"line_start":17,"line_end":17,"column_start":16,"column_end":27},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1676},"to":{"krate":0,"index":10212}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/scheduled_io.rs","byte_start":12619377,"byte_end":12619388,"line_start":48,"line_end":48,"column_start":18,"column_end":29},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1676},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/scheduled_io.rs","byte_start":12619595,"byte_end":12619606,"line_start":58,"line_end":58,"column_start":6,"column_end":17},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/scheduled_io.rs","byte_start":12622228,"byte_end":12622239,"line_start":132,"line_end":132,"column_start":15,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1676},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":12607927,"byte_end":12607933,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1491},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":12610794,"byte_end":12610800,"line_start":167,"line_end":167,"column_start":15,"column_end":21},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1491},"to":{"krate":0,"index":809}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":12611199,"byte_end":12611205,"line_start":188,"line_end":188,"column_start":21,"column_end":27},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1491},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":12611341,"byte_end":12611347,"line_start":196,"line_end":196,"column_start":6,"column_end":12},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1682},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":12612508,"byte_end":12612514,"line_start":228,"line_end":228,"column_start":17,"column_end":23},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1682},"to":{"krate":0,"index":816}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":12612592,"byte_end":12612598,"line_start":234,"line_end":234,"column_start":21,"column_end":27},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1682},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":12612733,"byte_end":12612738,"line_start":242,"line_end":242,"column_start":6,"column_end":11},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":12614282,"byte_end":12614291,"line_start":296,"line_end":296,"column_start":6,"column_end":15},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12628797,"byte_end":12628808,"line_start":164,"line_end":164,"column_start":9,"column_end":20},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1702},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12636599,"byte_end":12636610,"line_start":380,"line_end":380,"column_start":23,"column_end":34},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1702},"to":{"krate":0,"index":309}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12637103,"byte_end":12637114,"line_start":402,"line_end":402,"column_start":24,"column_end":35},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1702},"to":{"krate":0,"index":393}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12638195,"byte_end":12638206,"line_start":448,"line_end":448,"column_start":46,"column_end":57},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1702},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":12638379,"byte_end":12638390,"line_start":454,"line_end":454,"column_start":27,"column_end":38},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1702},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12640538,"byte_end":12640550,"line_start":49,"line_end":49,"column_start":6,"column_end":18},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1706},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12651420,"byte_end":12651432,"line_start":329,"line_end":329,"column_start":22,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1706},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12651457,"byte_end":12651469,"line_start":330,"line_end":330,"column_start":22,"column_end":34},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1706},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":12651488,"byte_end":12651500,"line_start":332,"line_end":332,"column_start":15,"column_end":27},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1706},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12653282,"byte_end":12653290,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12654207,"byte_end":12654216,"line_start":93,"line_end":93,"column_start":9,"column_end":18},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1916},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12654466,"byte_end":12654474,"line_start":101,"line_end":101,"column_start":34,"column_end":42},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1913},"to":{"krate":0,"index":309}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12655029,"byte_end":12655038,"line_start":121,"line_end":121,"column_start":36,"column_end":45},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1916},"to":{"krate":0,"index":393}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12655987,"byte_end":12655992,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1758},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12656385,"byte_end":12656390,"line_start":166,"line_end":166,"column_start":9,"column_end":14},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1762},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12656643,"byte_end":12656648,"line_start":174,"line_end":174,"column_start":18,"column_end":23},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1762},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12656771,"byte_end":12656779,"line_start":180,"line_end":180,"column_start":31,"column_end":39},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1913},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12656816,"byte_end":12656825,"line_start":181,"line_end":181,"column_start":31,"column_end":40},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1916},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12656862,"byte_end":12656870,"line_start":182,"line_end":182,"column_start":31,"column_end":39},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1913},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12656907,"byte_end":12656916,"line_start":183,"line_end":183,"column_start":31,"column_end":40},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1916},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12656959,"byte_end":12656967,"line_start":185,"line_end":185,"column_start":36,"column_end":44},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1913},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":12657135,"byte_end":12657144,"line_start":191,"line_end":191,"column_start":36,"column_end":45},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1916},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/seek.rs","byte_start":12657834,"byte_end":12657838,"line_start":25,"line_end":25,"column_start":20,"column_end":24},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1921},"to":{"krate":2,"index":12562}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_buf_read_ext.rs","byte_start":12660900,"byte_end":12660912,"line_start":11,"line_end":11,"column_start":32,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":264},"to":{"krate":0,"index":3275}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_buf_read_ext.rs","byte_start":12669933,"byte_end":12669934,"line_start":258,"line_end":258,"column_start":52,"column_end":53},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1963},"to":{"krate":0,"index":3275}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":12671961,"byte_end":12671970,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":309},"to":{"krate":0,"index":3283}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":12709366,"byte_end":12709367,"line_start":1118,"line_end":1118,"column_start":46,"column_end":47},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":2080},"to":{"krate":0,"index":3283}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12710246,"byte_end":12710255,"line_start":35,"line_end":35,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":354},"to":{"krate":0,"index":2098}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":12711125,"byte_end":12711126,"line_start":67,"line_end":67,"column_start":46,"column_end":47},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":2101},"to":{"krate":0,"index":2098}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":12713183,"byte_end":12713193,"line_start":68,"line_end":68,"column_start":30,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":393},"to":{"krate":0,"index":3335}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":12746473,"byte_end":12746474,"line_start":1006,"line_end":1006,"column_start":48,"column_end":49},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":2204},"to":{"krate":0,"index":3335}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":12747890,"byte_end":12747899,"line_start":38,"line_end":38,"column_start":20,"column_end":29},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":13213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":12750078,"byte_end":12750087,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":13213},"to":{"krate":0,"index":309}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":12751063,"byte_end":12751072,"line_start":135,"line_end":135,"column_start":37,"column_end":46},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":13213},"to":{"krate":0,"index":264}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":12751903,"byte_end":12751912,"line_start":157,"line_end":157,"column_start":48,"column_end":57},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":13213},"to":{"krate":0,"index":393}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":12752628,"byte_end":12752637,"line_start":183,"line_end":183,"column_start":36,"column_end":45},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":13213},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":12754144,"byte_end":12754153,"line_start":26,"line_end":26,"column_start":34,"column_end":43},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":13186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":12755990,"byte_end":12755999,"line_start":82,"line_end":82,"column_start":45,"column_end":54},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":13186},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":12756141,"byte_end":12756150,"line_start":88,"line_end":88,"column_start":45,"column_end":54},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":13186},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":12756862,"byte_end":12756871,"line_start":118,"line_end":118,"column_start":49,"column_end":58},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":13186},"to":{"krate":0,"index":393}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":12757401,"byte_end":12757410,"line_start":136,"line_end":136,"column_start":48,"column_end":57},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":13186},"to":{"krate":0,"index":309}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":12757889,"byte_end":12757898,"line_start":151,"line_end":151,"column_start":51,"column_end":60},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":13186},"to":{"krate":0,"index":264}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":12759852,"byte_end":12759861,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":13136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":12762139,"byte_end":12762148,"line_start":117,"line_end":117,"column_start":36,"column_end":45},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":13136},"to":{"krate":0,"index":393}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":12763038,"byte_end":12763047,"line_start":146,"line_end":146,"column_start":47,"column_end":56},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":13136},"to":{"krate":0,"index":309}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":12763529,"byte_end":12763538,"line_start":161,"line_end":161,"column_start":53,"column_end":62},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":13136},"to":{"krate":0,"index":264}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":12763825,"byte_end":12763834,"line_start":171,"line_end":171,"column_start":36,"column_end":45},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":13136},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":12765003,"byte_end":12765008,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":13087},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":12766148,"byte_end":12766153,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":13087},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":12766432,"byte_end":12766437,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":13087},"to":{"krate":0,"index":309}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":12767260,"byte_end":12767265,"line_start":113,"line_end":113,"column_start":29,"column_end":34},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":13087},"to":{"krate":0,"index":264}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/copy.rs","byte_start":12770308,"byte_end":12770312,"line_start":78,"line_end":78,"column_start":23,"column_end":27},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":3385},"to":{"krate":2,"index":12562}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/empty.rs","byte_start":12773422,"byte_end":12773427,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":3401},"to":{"krate":0,"index":309}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/empty.rs","byte_start":12773756,"byte_end":12773761,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":3401},"to":{"krate":0,"index":264}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/empty.rs","byte_start":12773994,"byte_end":12773999,"line_start":73,"line_end":73,"column_start":21,"column_end":26},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":3401},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/flush.rs","byte_start":12774820,"byte_end":12774825,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":3404},"to":{"krate":2,"index":12562}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":12776005,"byte_end":12776010,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":13048},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":12777262,"byte_end":12777267,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":13048},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":12778014,"byte_end":12778019,"line_start":113,"line_end":113,"column_start":49,"column_end":54},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":13048},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12781179,"byte_end":12781191,"line_start":91,"line_end":91,"column_start":20,"column_end":32},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":3412},"to":{"krate":0,"index":309}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12781740,"byte_end":12781752,"line_start":107,"line_end":107,"column_start":21,"column_end":33},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":3412},"to":{"krate":0,"index":393}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12782477,"byte_end":12782489,"line_start":134,"line_end":134,"column_start":15,"column_end":27},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":3412},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12782649,"byte_end":12782653,"line_start":143,"line_end":143,"column_start":6,"column_end":10},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":3417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12783059,"byte_end":12783063,"line_start":162,"line_end":162,"column_start":20,"column_end":24},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":3417},"to":{"krate":0,"index":309}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":12783889,"byte_end":12783893,"line_start":188,"line_end":188,"column_start":21,"column_end":25},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":3417},"to":{"krate":0,"index":393}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read.rs","byte_start":12785821,"byte_end":12785825,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":3425},"to":{"krate":2,"index":12562}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_buf.rs","byte_start":12786886,"byte_end":12786893,"line_start":27,"line_end":27,"column_start":23,"column_end":30},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":3434},"to":{"krate":2,"index":12562}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_exact.rs","byte_start":12788258,"byte_end":12788267,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":3445},"to":{"krate":2,"index":12562}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_line.rs","byte_start":12796545,"byte_end":12796553,"line_start":105,"line_end":105,"column_start":51,"column_end":59},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":3599},"to":{"krate":2,"index":12562}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_to_end.rs","byte_start":12802473,"byte_end":12802482,"line_start":147,"line_end":147,"column_start":20,"column_end":29},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":3610},"to":{"krate":2,"index":12562}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_to_string.rs","byte_start":12805221,"byte_end":12805233,"line_start":66,"line_end":66,"column_start":20,"column_end":32},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":3620},"to":{"krate":2,"index":12562}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_until.rs","byte_start":12807673,"byte_end":12807682,"line_start":66,"line_end":66,"column_start":51,"column_end":60},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":3631},"to":{"krate":2,"index":12562}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/repeat.rs","byte_start":12809516,"byte_end":12809522,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":3643},"to":{"krate":0,"index":309}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/shutdown.rs","byte_start":12810644,"byte_end":12810652,"line_start":27,"line_end":27,"column_start":20,"column_end":28},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":3647},"to":{"krate":2,"index":12562}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/sink.rs","byte_start":12812485,"byte_end":12812489,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":3655},"to":{"krate":0,"index":393}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/sink.rs","byte_start":12812999,"byte_end":12813003,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":3655},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":12813968,"byte_end":12813973,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":12214},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":12814712,"byte_end":12814717,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":12214},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":12815496,"byte_end":12815501,"line_start":94,"line_end":94,"column_start":49,"column_end":54},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":12214},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12829040,"byte_end":12829052,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":12167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12829557,"byte_end":12829569,"line_start":98,"line_end":98,"column_start":26,"column_end":38},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":12167},"to":{"krate":0,"index":309}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":12831108,"byte_end":12831120,"line_start":151,"line_end":151,"column_start":29,"column_end":41},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":12167},"to":{"krate":0,"index":264}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":12834649,"byte_end":12834661,"line_start":75,"line_end":75,"column_start":20,"column_end":32},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":12125},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":12816669,"byte_end":12816673,"line_start":29,"line_end":29,"column_start":20,"column_end":24},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":12085},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":12818301,"byte_end":12818305,"line_start":78,"line_end":78,"column_start":34,"column_end":38},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":12085},"to":{"krate":0,"index":309}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":12818962,"byte_end":12818966,"line_start":100,"line_end":100,"column_start":40,"column_end":44},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":12085},"to":{"krate":0,"index":264}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write.rs","byte_start":12820523,"byte_end":12820528,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":3763},"to":{"krate":2,"index":12562}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_all.rs","byte_start":12821321,"byte_end":12821329,"line_start":25,"line_end":25,"column_start":20,"column_end":28},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":3772},"to":{"krate":2,"index":12562}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_buf.rs","byte_start":12822837,"byte_end":12822845,"line_start":29,"line_end":29,"column_start":23,"column_end":31},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":3781},"to":{"krate":2,"index":12562}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":74102,"byte_end":74119,"line_start":22,"line_end":22,"column_start":34,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":527},"to":{"krate":0,"index":472}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":74569,"byte_end":74579,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"kind":{"Impl":{"id":125}},"from":{"krate":1,"index":10488},"to":{"krate":0,"index":472}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":74619,"byte_end":74629,"line_start":46,"line_end":46,"column_start":36,"column_end":46},"kind":{"Impl":{"id":126}},"from":{"krate":1,"index":10488},"to":{"krate":0,"index":527}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":74910,"byte_end":74922,"line_start":58,"line_end":58,"column_start":24,"column_end":36},"kind":{"Impl":{"id":127}},"from":{"krate":1,"index":10512},"to":{"krate":0,"index":472}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":74962,"byte_end":74974,"line_start":60,"line_end":60,"column_start":36,"column_end":48},"kind":{"Impl":{"id":128}},"from":{"krate":1,"index":10512},"to":{"krate":0,"index":527}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":75234,"byte_end":75246,"line_start":71,"line_end":71,"column_start":24,"column_end":36},"kind":{"Impl":{"id":129}},"from":{"krate":1,"index":10515},"to":{"krate":0,"index":472}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":75286,"byte_end":75298,"line_start":73,"line_end":73,"column_start":36,"column_end":48},"kind":{"Impl":{"id":130}},"from":{"krate":1,"index":10515},"to":{"krate":0,"index":527}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12838344,"byte_end":12838355,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":4377},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12849050,"byte_end":12849061,"line_start":398,"line_end":398,"column_start":32,"column_end":43},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":4377},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12849376,"byte_end":12849387,"line_start":410,"line_end":410,"column_start":41,"column_end":52},"kind":{"Impl":{"id":133}},"from":{"krate":21,"index":1500},"to":{"krate":2,"index":2902}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12849827,"byte_end":12849838,"line_start":424,"line_end":424,"column_start":36,"column_end":47},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":4377},"to":{"krate":2,"index":2902}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12850164,"byte_end":12850175,"line_start":436,"line_end":436,"column_start":21,"column_end":32},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":4377},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":12850391,"byte_end":12850402,"line_start":447,"line_end":447,"column_start":22,"column_end":33},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":4377},"to":{"krate":1,"index":6312}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/incoming.rs","byte_start":12851234,"byte_end":12851242,"line_start":15,"line_end":15,"column_start":6,"column_end":14},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":4379},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/incoming.rs","byte_start":12851880,"byte_end":12851888,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":4379},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12854051,"byte_end":12854059,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":4385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12856514,"byte_end":12856522,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":4385},"to":{"krate":0,"index":309}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12856842,"byte_end":12856851,"line_start":147,"line_end":147,"column_start":21,"column_end":30},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":4392},"to":{"krate":0,"index":393}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12857664,"byte_end":12857672,"line_start":176,"line_end":176,"column_start":27,"column_end":35},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":4385},"to":{"krate":2,"index":2886}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":12857766,"byte_end":12857775,"line_start":182,"line_end":182,"column_start":27,"column_end":36},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":4392},"to":{"krate":2,"index":2886}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12860863,"byte_end":12860875,"line_start":90,"line_end":90,"column_start":23,"column_end":35},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":4408},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12861078,"byte_end":12861090,"line_start":99,"line_end":99,"column_start":16,"column_end":28},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":4408},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12861100,"byte_end":12861113,"line_start":101,"line_end":101,"column_start":6,"column_end":19},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":4399},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12863947,"byte_end":12863960,"line_start":188,"line_end":188,"column_start":20,"column_end":33},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":4399},"to":{"krate":0,"index":309}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12864265,"byte_end":12864279,"line_start":202,"line_end":202,"column_start":6,"column_end":20},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":4403},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12864962,"byte_end":12864976,"line_start":221,"line_end":221,"column_start":15,"column_end":29},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":4403},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12865136,"byte_end":12865150,"line_start":229,"line_end":229,"column_start":21,"column_end":35},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":4403},"to":{"krate":0,"index":393}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12866089,"byte_end":12866102,"line_start":262,"line_end":262,"column_start":27,"column_end":40},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":4399},"to":{"krate":2,"index":2886}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":12866198,"byte_end":12866212,"line_start":268,"line_end":268,"column_start":27,"column_end":41},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":4403},"to":{"krate":2,"index":2886}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12868347,"byte_end":12868356,"line_start":63,"line_end":63,"column_start":6,"column_end":15},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":4414},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12893413,"byte_end":12893422,"line_start":838,"line_end":838,"column_start":39,"column_end":48},"kind":{"Impl":{"id":154}},"from":{"krate":21,"index":1442},"to":{"krate":2,"index":2902}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12893858,"byte_end":12893867,"line_start":852,"line_end":852,"column_start":34,"column_end":43},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":4414},"to":{"krate":2,"index":2902}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12894220,"byte_end":12894229,"line_start":866,"line_end":866,"column_start":20,"column_end":29},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":4414},"to":{"krate":0,"index":309}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12894543,"byte_end":12894552,"line_start":880,"line_end":880,"column_start":21,"column_end":30},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":4414},"to":{"krate":0,"index":393}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12895296,"byte_end":12895305,"line_start":909,"line_end":909,"column_start":21,"column_end":30},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":4414},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":12895519,"byte_end":12895528,"line_start":920,"line_end":920,"column_start":22,"column_end":31},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":4414},"to":{"krate":1,"index":6312}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12896534,"byte_end":12896543,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":4601},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12911204,"byte_end":12911213,"line_start":398,"line_end":398,"column_start":39,"column_end":48},"kind":{"Impl":{"id":161}},"from":{"krate":21,"index":1594},"to":{"krate":2,"index":2902}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12911649,"byte_end":12911658,"line_start":412,"line_end":412,"column_start":34,"column_end":43},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":4601},"to":{"krate":2,"index":2902}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12911978,"byte_end":12911987,"line_start":424,"line_end":424,"column_start":21,"column_end":30},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":4601},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":12912206,"byte_end":12912215,"line_start":435,"line_end":435,"column_start":22,"column_end":31},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":4601},"to":{"krate":1,"index":6312}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12914301,"byte_end":12914313,"line_start":50,"line_end":50,"column_start":23,"column_end":35},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":4613},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12914516,"byte_end":12914528,"line_start":59,"line_end":59,"column_start":16,"column_end":28},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":4613},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12915055,"byte_end":12915063,"line_start":74,"line_end":74,"column_start":6,"column_end":14},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":4608},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12916695,"byte_end":12916703,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":4603},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12918023,"byte_end":12918031,"line_start":138,"line_end":138,"column_start":27,"column_end":35},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":4603},"to":{"krate":2,"index":2886}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":12918122,"byte_end":12918130,"line_start":144,"line_end":144,"column_start":27,"column_end":35},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":4608},"to":{"krate":2,"index":2886}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12919388,"byte_end":12919400,"line_start":22,"line_end":22,"column_start":6,"column_end":18},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":5256},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12929821,"byte_end":12929833,"line_start":314,"line_end":314,"column_start":41,"column_end":53},"kind":{"Impl":{"id":172}},"from":{"krate":30,"index":295},"to":{"krate":2,"index":2902}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12930275,"byte_end":12930287,"line_start":328,"line_end":328,"column_start":37,"column_end":49},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":5256},"to":{"krate":2,"index":2902}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12930616,"byte_end":12930628,"line_start":340,"line_end":340,"column_start":21,"column_end":33},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":5256},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":12930753,"byte_end":12930765,"line_start":346,"line_end":346,"column_start":18,"column_end":30},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":5256},"to":{"krate":1,"index":6312}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":12931702,"byte_end":12931710,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":5258},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":12932102,"byte_end":12932110,"line_start":43,"line_end":43,"column_start":6,"column_end":14},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":5265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":12932613,"byte_end":12932621,"line_start":58,"line_end":58,"column_start":30,"column_end":38},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":5258},"to":{"krate":2,"index":2886}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":12932721,"byte_end":12932729,"line_start":64,"line_end":64,"column_start":30,"column_end":38},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":5265},"to":{"krate":2,"index":2886}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12934206,"byte_end":12934218,"line_start":53,"line_end":53,"column_start":23,"column_end":35},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":5281},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12934421,"byte_end":12934433,"line_start":62,"line_end":62,"column_start":16,"column_end":28},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":5281},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12934997,"byte_end":12935010,"line_start":77,"line_end":77,"column_start":6,"column_end":19},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":5277},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12935795,"byte_end":12935808,"line_start":98,"line_end":98,"column_start":6,"column_end":19},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":5272},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12936978,"byte_end":12936991,"line_start":130,"line_end":130,"column_start":15,"column_end":28},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":5272},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12937160,"byte_end":12937173,"line_start":138,"line_end":138,"column_start":30,"column_end":43},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":5272},"to":{"krate":2,"index":2886}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":12937274,"byte_end":12937287,"line_start":144,"line_end":144,"column_start":30,"column_end":43},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":5277},"to":{"krate":2,"index":2886}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/incoming.rs","byte_start":12937632,"byte_end":12937640,"line_start":14,"line_end":14,"column_start":6,"column_end":14},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":5287},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/incoming.rs","byte_start":12938372,"byte_end":12938380,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":5287},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12940507,"byte_end":12940519,"line_start":54,"line_end":54,"column_start":6,"column_end":18},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":5293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12945223,"byte_end":12945235,"line_start":184,"line_end":184,"column_start":32,"column_end":44},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":5293},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12945551,"byte_end":12945563,"line_start":196,"line_end":196,"column_start":41,"column_end":53},"kind":{"Impl":{"id":191}},"from":{"krate":30,"index":299},"to":{"krate":2,"index":2902}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12946005,"byte_end":12946017,"line_start":210,"line_end":210,"column_start":37,"column_end":49},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":5293},"to":{"krate":2,"index":2902}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12946337,"byte_end":12946349,"line_start":222,"line_end":222,"column_start":21,"column_end":33},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":5293},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":12946474,"byte_end":12946486,"line_start":228,"line_end":228,"column_start":18,"column_end":30},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":5293},"to":{"krate":1,"index":6312}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":12948463,"byte_end":12948471,"line_start":53,"line_end":53,"column_start":20,"column_end":28},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":5295},"to":{"krate":0,"index":309}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":12948791,"byte_end":12948800,"line_start":67,"line_end":67,"column_start":21,"column_end":30},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":5302},"to":{"krate":0,"index":393}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":12949284,"byte_end":12949292,"line_start":85,"line_end":85,"column_start":28,"column_end":36},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":5295},"to":{"krate":2,"index":2886}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":12949388,"byte_end":12949397,"line_start":91,"line_end":91,"column_start":28,"column_end":37},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":5302},"to":{"krate":2,"index":2886}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12952502,"byte_end":12952514,"line_start":89,"line_end":89,"column_start":23,"column_end":35},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":5318},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12952717,"byte_end":12952729,"line_start":98,"line_end":98,"column_start":16,"column_end":28},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":5318},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12952739,"byte_end":12952752,"line_start":100,"line_end":100,"column_start":6,"column_end":19},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":5309},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12953168,"byte_end":12953181,"line_start":111,"line_end":111,"column_start":20,"column_end":33},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":5309},"to":{"krate":0,"index":309}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12953486,"byte_end":12953500,"line_start":125,"line_end":125,"column_start":6,"column_end":20},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":5313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12954198,"byte_end":12954212,"line_start":144,"line_end":144,"column_start":15,"column_end":29},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":5313},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12954372,"byte_end":12954386,"line_start":152,"line_end":152,"column_start":21,"column_end":35},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":5313},"to":{"krate":0,"index":393}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12955120,"byte_end":12955133,"line_start":177,"line_end":177,"column_start":28,"column_end":41},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":5309},"to":{"krate":2,"index":2886}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":12955231,"byte_end":12955245,"line_start":183,"line_end":183,"column_start":28,"column_end":42},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":5313},"to":{"krate":2,"index":2886}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12956266,"byte_end":12956276,"line_start":29,"line_end":29,"column_start":6,"column_end":16},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":5324},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12960623,"byte_end":12960633,"line_start":143,"line_end":143,"column_start":39,"column_end":49},"kind":{"Impl":{"id":209}},"from":{"krate":30,"index":303},"to":{"krate":2,"index":2902}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12961071,"byte_end":12961081,"line_start":157,"line_end":157,"column_start":35,"column_end":45},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":5324},"to":{"krate":2,"index":2902}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12961394,"byte_end":12961404,"line_start":169,"line_end":169,"column_start":20,"column_end":30},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":5324},"to":{"krate":0,"index":309}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12961718,"byte_end":12961728,"line_start":183,"line_end":183,"column_start":21,"column_end":31},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":5324},"to":{"krate":0,"index":393}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12962215,"byte_end":12962225,"line_start":202,"line_end":202,"column_start":6,"column_end":16},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":5324},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12963742,"byte_end":12963752,"line_start":247,"line_end":247,"column_start":21,"column_end":31},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":5324},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":12963877,"byte_end":12963887,"line_start":253,"line_end":253,"column_start":18,"column_end":28},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":5324},"to":{"krate":1,"index":6312}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_ptr.rs","byte_start":84816,"byte_end":84825,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":543},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_ptr.rs","byte_start":84999,"byte_end":85008,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":543},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_ptr.rs","byte_start":85157,"byte_end":85166,"line_start":24,"line_end":24,"column_start":24,"column_end":33},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":543},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u16.rs","byte_start":85510,"byte_end":85519,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":566},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u16.rs","byte_start":85544,"byte_end":85553,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":566},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u16.rs","byte_start":85563,"byte_end":85572,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":566},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u16.rs","byte_start":86058,"byte_end":86067,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":566},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u16.rs","byte_start":86352,"byte_end":86361,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":566},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u32.rs","byte_start":86702,"byte_end":86711,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":588},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u32.rs","byte_start":86736,"byte_end":86745,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":588},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u32.rs","byte_start":86755,"byte_end":86764,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u32.rs","byte_start":86943,"byte_end":86952,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":588},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u32.rs","byte_start":87237,"byte_end":87246,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":588},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u8.rs","byte_start":89361,"byte_end":89369,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":617},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u8.rs","byte_start":89394,"byte_end":89402,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":617},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u8.rs","byte_start":89412,"byte_end":89420,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":617},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u8.rs","byte_start":89595,"byte_end":89603,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":617},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u8.rs","byte_start":89887,"byte_end":89895,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":617},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_usize.rs","byte_start":90235,"byte_end":90246,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":638},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_usize.rs","byte_start":90271,"byte_end":90282,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":638},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_usize.rs","byte_start":90292,"byte_end":90303,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":638},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_usize.rs","byte_start":90986,"byte_end":90997,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":638},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_usize.rs","byte_start":91287,"byte_end":91298,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":638},"to":{"krate":2,"index":3213}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_usize.rs","byte_start":91462,"byte_end":91473,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":638},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/unsafe_cell.rs","byte_start":91661,"byte_end":91671,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":5344},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/either.rs","byte_start":12968244,"byte_end":12968250,"line_start":11,"line_end":11,"column_start":21,"column_end":27},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":5365},"to":{"krate":0,"index":809}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/either.rs","byte_start":12969207,"byte_end":12969213,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":5365},"to":{"krate":0,"index":816}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/either.rs","byte_start":12969427,"byte_end":12969433,"line_start":61,"line_end":61,"column_start":27,"column_end":33},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":5365},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":96885,"byte_end":96895,"line_start":38,"line_end":38,"column_start":6,"column_end":16},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":5394},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":97160,"byte_end":97170,"line_start":50,"line_end":50,"column_start":15,"column_end":25},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":5394},"to":{"krate":0,"index":809}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":97696,"byte_end":97701,"line_start":76,"line_end":76,"column_start":6,"column_end":11},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":5404},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":102493,"byte_end":102503,"line_start":201,"line_end":201,"column_start":18,"column_end":28},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":5394},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":102612,"byte_end":102624,"line_start":209,"line_end":209,"column_start":17,"column_end":29},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":5398},"to":{"krate":0,"index":816}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":103011,"byte_end":103027,"line_start":228,"line_end":228,"column_start":10,"column_end":26},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":5462},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":103874,"byte_end":103890,"line_start":253,"line_end":253,"column_start":19,"column_end":35},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":5462},"to":{"krate":0,"index":809}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":104558,"byte_end":104570,"line_start":277,"line_end":277,"column_start":10,"column_end":22},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":5398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":104782,"byte_end":104787,"line_start":286,"line_end":286,"column_start":10,"column_end":15},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":5404},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/mod.rs","byte_start":95507,"byte_end":95511,"line_start":97,"line_end":97,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":3001},"to":{"krate":0,"index":816}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/mod.rs","byte_start":95514,"byte_end":95518,"line_start":97,"line_end":97,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2989},"to":{"krate":0,"index":816}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/mod.rs","byte_start":95987,"byte_end":95990,"line_start":111,"line_end":111,"column_start":17,"column_end":20},"kind":{"Impl":{"id":253}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":816}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/mod.rs","byte_start":96079,"byte_end":96082,"line_start":117,"line_end":117,"column_start":17,"column_end":20},"kind":{"Impl":{"id":254}},"from":{"krate":5,"index":5922},"to":{"krate":0,"index":816}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/context.rs","byte_start":127466,"byte_end":127475,"line_start":59,"line_end":59,"column_start":19,"column_end":28},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":849},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":12971559,"byte_end":12971573,"line_start":83,"line_end":83,"column_start":9,"column_end":23},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":5555},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":12975112,"byte_end":12975117,"line_start":192,"line_end":192,"column_start":28,"column_end":33},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":5590},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":12975804,"byte_end":12975818,"line_start":216,"line_end":216,"column_start":18,"column_end":32},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":5555},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":12976705,"byte_end":12976719,"line_start":248,"line_end":248,"column_start":30,"column_end":44},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":5555},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":12976885,"byte_end":12976892,"line_start":256,"line_end":256,"column_start":6,"column_end":13},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":6235},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":12977350,"byte_end":12977357,"line_start":273,"line_end":273,"column_start":21,"column_end":28},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":6235},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":12977525,"byte_end":12977528,"line_start":281,"line_end":281,"column_start":19,"column_end":22},"kind":{"Impl":{"id":262}},"from":{"krate":5,"index":5922},"to":{"krate":0,"index":6199}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":12978626,"byte_end":12978632,"line_start":317,"line_end":317,"column_start":15,"column_end":21},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":5564},"to":{"krate":0,"index":1219}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/core.rs","byte_start":12986315,"byte_end":12986321,"line_start":69,"line_end":69,"column_start":22,"column_end":28},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":5689},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/core.rs","byte_start":12986346,"byte_end":12986352,"line_start":70,"line_end":70,"column_start":22,"column_end":28},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":5689},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/core.rs","byte_start":12986711,"byte_end":12986715,"line_start":85,"line_end":85,"column_start":30,"column_end":34},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":5678},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/core.rs","byte_start":12987493,"byte_end":12987497,"line_start":108,"line_end":108,"column_start":30,"column_end":34},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":5684},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12993879,"byte_end":12993888,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":6244},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12996967,"byte_end":12996976,"line_start":133,"line_end":133,"column_start":23,"column_end":32},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":6244},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12997219,"byte_end":12997228,"line_start":142,"line_end":142,"column_start":21,"column_end":30},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":6244},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12997505,"byte_end":12997514,"line_start":151,"line_end":151,"column_start":28,"column_end":37},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":6244},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":12997548,"byte_end":12997553,"line_start":153,"line_end":153,"column_start":30,"column_end":35},"kind":{"Impl":{"id":272}},"from":{"krate":1,"index":3793},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/harness.rs","byte_start":12998231,"byte_end":12998238,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":5833},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/harness.rs","byte_start":12998715,"byte_end":12998722,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":5833},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/harness.rs","byte_start":13000893,"byte_end":13000898,"line_start":94,"line_end":94,"column_start":51,"column_end":56},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":5849},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":13013202,"byte_end":13013212,"line_start":84,"line_end":84,"column_start":31,"column_end":41},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":6246},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":13013249,"byte_end":13013259,"line_start":85,"line_end":85,"column_start":31,"column_end":41},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":6246},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":13013275,"byte_end":13013285,"line_start":87,"line_end":87,"column_start":9,"column_end":19},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":6246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":13013461,"byte_end":13013471,"line_start":96,"line_end":96,"column_start":19,"column_end":29},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":6246},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":13013498,"byte_end":13013508,"line_start":98,"line_end":98,"column_start":20,"column_end":30},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":6246},"to":{"krate":2,"index":12562}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":13014734,"byte_end":13014744,"line_start":137,"line_end":137,"column_start":18,"column_end":28},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":6246},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":13015010,"byte_end":13015020,"line_start":149,"line_end":149,"column_start":24,"column_end":34},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":6246},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/raw.rs","byte_start":13016267,"byte_end":13016274,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":5958},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/raw.rs","byte_start":13017805,"byte_end":13017812,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":5958},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/raw.rs","byte_start":13017902,"byte_end":13017909,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":5958},"to":{"krate":2,"index":2999}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/state.rs","byte_start":13020591,"byte_end":13020596,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":6021},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/state.rs","byte_start":13029452,"byte_end":13029460,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":6250},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/state.rs","byte_start":13031337,"byte_end":13031342,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":6021},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/state.rs","byte_start":13031501,"byte_end":13031509,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":6250},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/waker.rs","byte_start":13033327,"byte_end":13033335,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":6135},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":12979645,"byte_end":12979649,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":6181},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":12979680,"byte_end":12979684,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":6181},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":12979821,"byte_end":12979829,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":6189},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":12979870,"byte_end":12979878,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":6189},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":12980003,"byte_end":12980007,"line_start":56,"line_end":56,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":3001},"to":{"krate":0,"index":6199}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":12980010,"byte_end":12980015,"line_start":56,"line_end":56,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":2994},"to":{"krate":0,"index":6199}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":12981802,"byte_end":12981806,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":6181},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":12982698,"byte_end":12982702,"line_start":159,"line_end":159,"column_start":19,"column_end":23},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":6181},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":12982871,"byte_end":12982879,"line_start":166,"line_end":166,"column_start":19,"column_end":27},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":6189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":12983165,"byte_end":12983169,"line_start":179,"line_end":179,"column_start":27,"column_end":31},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":6181},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":12983409,"byte_end":12983413,"line_start":189,"line_end":189,"column_start":24,"column_end":28},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":6181},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":12983565,"byte_end":12983573,"line_start":195,"line_end":195,"column_start":24,"column_end":32},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":6189},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":12983789,"byte_end":12983793,"line_start":204,"line_end":204,"column_start":38,"column_end":42},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":6181},"to":{"krate":0,"index":1156}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/blocking/mod.rs","byte_start":128705,"byte_end":128717,"line_start":35,"line_end":35,"column_start":10,"column_end":22},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":6272},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":130892,"byte_end":130899,"line_start":80,"line_end":80,"column_start":6,"column_end":13},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":892},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":138819,"byte_end":138826,"line_start":351,"line_end":351,"column_start":10,"column_end":17},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":892},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":139375,"byte_end":139382,"line_start":375,"line_end":375,"column_start":10,"column_end":17},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":892},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":139902,"byte_end":139909,"line_start":398,"line_end":398,"column_start":10,"column_end":17},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":892},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":143805,"byte_end":143812,"line_start":504,"line_end":504,"column_start":18,"column_end":25},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":892},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":143891,"byte_end":143898,"line_start":510,"line_end":510,"column_start":21,"column_end":28},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":892},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/enter.rs","byte_start":144693,"byte_end":144705,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":6301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/enter.rs","byte_start":147583,"byte_end":147604,"line_start":112,"line_end":112,"column_start":23,"column_end":44},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":6317},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/enter.rs","byte_start":148434,"byte_end":148439,"line_start":142,"line_end":142,"column_start":10,"column_end":15},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":945},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/enter.rs","byte_start":150547,"byte_end":150552,"line_start":212,"line_end":212,"column_start":21,"column_end":26},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":945},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/enter.rs","byte_start":150682,"byte_end":150687,"line_start":218,"line_end":218,"column_start":15,"column_end":20},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":945},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":151745,"byte_end":151751,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":6346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154851,"byte_end":154857,"line_start":132,"line_end":132,"column_start":10,"column_end":16},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":6346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":164217,"byte_end":164232,"line_start":359,"line_end":359,"column_start":21,"column_end":36},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":988},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":164380,"byte_end":164395,"line_start":365,"line_end":365,"column_start":23,"column_end":38},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":988},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":164553,"byte_end":164568,"line_start":371,"line_end":371,"column_start":23,"column_end":38},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":988},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/shell.rs","byte_start":166857,"byte_end":166862,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":6362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/shell.rs","byte_start":167468,"byte_end":167474,"line_start":52,"line_end":52,"column_start":15,"column_end":21},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":6367},"to":{"krate":0,"index":1219}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/spawner.rs","byte_start":168071,"byte_end":168078,"line_start":21,"line_end":21,"column_start":6,"column_end":13},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":6381},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/spawner.rs","byte_start":168321,"byte_end":168328,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":6381},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":116406,"byte_end":116413,"line_start":305,"line_end":305,"column_start":6,"column_end":13},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":6397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/coop.rs","byte_start":172931,"byte_end":172937,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":6416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/coop.rs","byte_start":174478,"byte_end":174488,"line_start":114,"line_end":114,"column_start":23,"column_end":33},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":1129},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/coop.rs","byte_start":175335,"byte_end":175351,"line_start":157,"line_end":157,"column_start":10,"column_end":26},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":6431},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/coop.rs","byte_start":175483,"byte_end":175499,"line_start":163,"line_end":163,"column_start":19,"column_end":35},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":6431},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/coop.rs","byte_start":177239,"byte_end":177245,"line_start":204,"line_end":204,"column_start":10,"column_end":16},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":6416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/registry.rs","byte_start":13038933,"byte_end":13038936,"line_start":34,"line_end":34,"column_start":18,"column_end":21},"kind":{"Impl":{"id":329}},"from":{"krate":5,"index":7014},"to":{"krate":0,"index":6490}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/registry.rs","byte_start":13039658,"byte_end":13039666,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":6671},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/registry.rs","byte_start":13039756,"byte_end":13039764,"line_start":68,"line_end":68,"column_start":18,"column_end":26},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":6671},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/registry.rs","byte_start":13041917,"byte_end":13041924,"line_start":130,"line_end":130,"column_start":21,"column_end":28},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":6515},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/registry.rs","byte_start":13042032,"byte_end":13042039,"line_start":138,"line_end":138,"column_start":6,"column_end":13},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":6515},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13048111,"byte_end":13048120,"line_start":26,"line_end":26,"column_start":15,"column_end":24},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":6608},"to":{"krate":0,"index":6500}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13048234,"byte_end":13048243,"line_start":32,"line_end":32,"column_start":18,"column_end":27},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":6608},"to":{"krate":0,"index":6490}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13048631,"byte_end":13048642,"line_start":51,"line_end":51,"column_start":15,"column_end":26},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":6677},"to":{"krate":0,"index":6500}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13048928,"byte_end":13048938,"line_start":63,"line_end":63,"column_start":6,"column_end":16},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":6682},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13052734,"byte_end":13052744,"line_start":190,"line_end":190,"column_start":18,"column_end":28},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":6636},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13055093,"byte_end":13055099,"line_start":262,"line_end":262,"column_start":6,"column_end":12},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":6690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13055384,"byte_end":13055390,"line_start":273,"line_end":273,"column_start":6,"column_end":12},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":6690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13061579,"byte_end":13061585,"line_start":423,"line_end":423,"column_start":6,"column_end":12},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":6694},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":13063443,"byte_end":13063449,"line_start":487,"line_end":487,"column_start":36,"column_end":42},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":6694},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/all.rs","byte_start":13098441,"byte_end":13098450,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":7598},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/all.rs","byte_start":13098596,"byte_end":13098605,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":7598},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/all.rs","byte_start":13098644,"byte_end":13098653,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":7598},"to":{"krate":2,"index":12562}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/any.rs","byte_start":13099604,"byte_end":13099613,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":7609},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/any.rs","byte_start":13099759,"byte_end":13099768,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":7609},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/any.rs","byte_start":13099807,"byte_end":13099816,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":7609},"to":{"krate":2,"index":12562}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/chain.rs","byte_start":13100739,"byte_end":13100744,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":11226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/chain.rs","byte_start":13100924,"byte_end":13100929,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":11226},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13102474,"byte_end":13102488,"line_start":36,"line_end":36,"column_start":34,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":6915},"to":{"krate":0,"index":6842}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13102507,"byte_end":13102514,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":11188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13102798,"byte_end":13102805,"line_start":51,"line_end":51,"column_start":23,"column_end":30},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":11188},"to":{"krate":2,"index":12562}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13103781,"byte_end":13103787,"line_start":94,"line_end":94,"column_start":39,"column_end":45},"kind":{"Impl":{"id":353}},"from":{"krate":5,"index":7547},"to":{"krate":0,"index":6842}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13103842,"byte_end":13103848,"line_start":96,"line_end":96,"column_start":51,"column_end":57},"kind":{"Impl":{"id":354}},"from":{"krate":5,"index":7547},"to":{"krate":0,"index":6915}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13104237,"byte_end":13104240,"line_start":113,"line_end":113,"column_start":27,"column_end":30},"kind":{"Impl":{"id":355}},"from":{"krate":5,"index":7014},"to":{"krate":0,"index":6842}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13104286,"byte_end":13104289,"line_start":115,"line_end":115,"column_start":39,"column_end":42},"kind":{"Impl":{"id":356}},"from":{"krate":5,"index":7014},"to":{"krate":0,"index":6915}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13104672,"byte_end":13104675,"line_start":132,"line_end":132,"column_start":27,"column_end":30},"kind":{"Impl":{"id":357}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":6842}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13104723,"byte_end":13104726,"line_start":134,"line_end":134,"column_start":39,"column_end":42},"kind":{"Impl":{"id":358}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":6915}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13105241,"byte_end":13105247,"line_start":150,"line_end":150,"column_start":44,"column_end":50},"kind":{"Impl":{"id":359}},"from":{"krate":2,"index":43310},"to":{"krate":0,"index":6842}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13105336,"byte_end":13105342,"line_start":152,"line_end":152,"column_start":56,"column_end":62},"kind":{"Impl":{"id":360}},"from":{"krate":2,"index":43310},"to":{"krate":0,"index":6915}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13106420,"byte_end":13106425,"line_start":191,"line_end":191,"column_start":32,"column_end":37},"kind":{"Impl":{"id":361}},"from":{"krate":19,"index":483},"to":{"krate":0,"index":6842}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13106473,"byte_end":13106478,"line_start":193,"line_end":193,"column_start":44,"column_end":49},"kind":{"Impl":{"id":362}},"from":{"krate":19,"index":483},"to":{"krate":0,"index":6915}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13106878,"byte_end":13106886,"line_start":210,"line_end":210,"column_start":32,"column_end":40},"kind":{"Impl":{"id":363}},"from":{"krate":19,"index":737},"to":{"krate":0,"index":6842}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":13106934,"byte_end":13106942,"line_start":212,"line_end":212,"column_start":44,"column_end":52},"kind":{"Impl":{"id":364}},"from":{"krate":19,"index":737},"to":{"krate":0,"index":6915}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":13108213,"byte_end":13108218,"line_start":12,"line_end":12,"column_start":19,"column_end":24},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":7620},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":13108249,"byte_end":13108254,"line_start":13,"line_end":13,"column_start":25,"column_end":30},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":7620},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":13108285,"byte_end":13108290,"line_start":14,"line_end":14,"column_start":25,"column_end":30},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":7620},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":13108833,"byte_end":13108838,"line_start":40,"line_end":40,"column_start":20,"column_end":25},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":7620},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/filter.rs","byte_start":13109452,"byte_end":13109458,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":11132},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/filter.rs","byte_start":13109676,"byte_end":13109682,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":11132},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/filter.rs","byte_start":13109801,"byte_end":13109807,"line_start":35,"line_end":35,"column_start":24,"column_end":30},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":11132},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/filter_map.rs","byte_start":13110893,"byte_end":13110902,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":11087},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/filter_map.rs","byte_start":13111123,"byte_end":13111132,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":11087},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/filter_map.rs","byte_start":13111254,"byte_end":13111263,"line_start":35,"line_end":35,"column_start":27,"column_end":36},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":11087},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/fold.rs","byte_start":13112335,"byte_end":13112345,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":11038},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/fold.rs","byte_start":13112541,"byte_end":13112551,"line_start":29,"line_end":29,"column_start":27,"column_end":37},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":11038},"to":{"krate":2,"index":12562}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/fuse.rs","byte_start":13113450,"byte_end":13113454,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":10998},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/fuse.rs","byte_start":13113614,"byte_end":13113618,"line_start":27,"line_end":27,"column_start":20,"column_end":24},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":10998},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":13114561,"byte_end":13114565,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":7627},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":13115227,"byte_end":13115231,"line_start":41,"line_end":41,"column_start":20,"column_end":24},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":7627},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/map.rs","byte_start":13115977,"byte_end":13115980,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":10944},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/map.rs","byte_start":13116169,"byte_end":13116172,"line_start":27,"line_end":27,"column_start":13,"column_end":16},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":10944},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/map.rs","byte_start":13116293,"byte_end":13116296,"line_start":33,"line_end":33,"column_start":27,"column_end":30},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":10944},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/merge.rs","byte_start":13117141,"byte_end":13117146,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":10895},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/merge.rs","byte_start":13117400,"byte_end":13117405,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":10895},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/next.rs","byte_start":13118917,"byte_end":13118921,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":7633},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/next.rs","byte_start":13118955,"byte_end":13118959,"line_start":16,"line_end":16,"column_start":22,"column_end":26},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":7633},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/next.rs","byte_start":13119100,"byte_end":13119104,"line_start":22,"line_end":22,"column_start":46,"column_end":50},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":7633},"to":{"krate":2,"index":12562}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":13119600,"byte_end":13119604,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":7641},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":13120231,"byte_end":13120235,"line_start":42,"line_end":42,"column_start":20,"column_end":24},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":7641},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":13120782,"byte_end":13120789,"line_start":12,"line_end":12,"column_start":19,"column_end":26},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":7647},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":13120820,"byte_end":13120827,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":7647},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":13120858,"byte_end":13120865,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":7647},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":13121558,"byte_end":13121565,"line_start":44,"line_end":44,"column_start":20,"column_end":27},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":7647},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13127230,"byte_end":13127239,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":7654},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13134240,"byte_end":13134249,"line_start":424,"line_end":424,"column_start":12,"column_end":21},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":7654},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":13135788,"byte_end":13135797,"line_start":470,"line_end":470,"column_start":23,"column_end":32},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":7654},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/skip.rs","byte_start":13137013,"byte_end":13137017,"line_start":18,"line_end":18,"column_start":25,"column_end":29},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":10858},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/skip.rs","byte_start":13137227,"byte_end":13137231,"line_start":29,"line_end":29,"column_start":10,"column_end":14},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":10858},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/skip.rs","byte_start":13137364,"byte_end":13137368,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":10858},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/skip_while.rs","byte_start":13138594,"byte_end":13138603,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":10813},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/skip_while.rs","byte_start":13138824,"byte_end":13138833,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":10813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/skip_while.rs","byte_start":13139018,"byte_end":13139027,"line_start":38,"line_end":38,"column_start":24,"column_end":33},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":10813},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/try_next.rs","byte_start":13140376,"byte_end":13140383,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":7666},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/try_next.rs","byte_start":13140417,"byte_end":13140424,"line_start":16,"line_end":16,"column_start":22,"column_end":29},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":7666},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/try_next.rs","byte_start":13140631,"byte_end":13140638,"line_start":24,"line_end":24,"column_start":73,"column_end":80},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":7666},"to":{"krate":2,"index":12562}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/take.rs","byte_start":13141248,"byte_end":13141252,"line_start":19,"line_end":19,"column_start":25,"column_end":29},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":10776},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/take.rs","byte_start":13141462,"byte_end":13141466,"line_start":30,"line_end":30,"column_start":10,"column_end":14},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":10776},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/take.rs","byte_start":13141599,"byte_end":13141603,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":10776},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/take_while.rs","byte_start":13143122,"byte_end":13143131,"line_start":19,"line_end":19,"column_start":28,"column_end":37},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":10727},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/take_while.rs","byte_start":13143391,"byte_end":13143400,"line_start":31,"line_end":31,"column_start":13,"column_end":22},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":10727},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/take_while.rs","byte_start":13143593,"byte_end":13143602,"line_start":41,"line_end":41,"column_start":24,"column_end":33},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":10727},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/timeout.rs","byte_start":13174659,"byte_end":13174666,"line_start":23,"line_end":23,"column_start":17,"column_end":24},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":10688},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/timeout.rs","byte_start":13175021,"byte_end":13175028,"line_start":37,"line_end":37,"column_start":28,"column_end":35},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":10688},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13073683,"byte_end":13073689,"line_start":81,"line_end":81,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":20,"index":96},"to":{"krate":0,"index":7561}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":13097671,"byte_end":13097673,"line_start":824,"line_end":824,"column_start":32,"column_end":34},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":7596},"to":{"krate":0,"index":7561}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/task/atomic_waker.rs","byte_start":13221089,"byte_end":13221100,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":7909},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/task/atomic_waker.rs","byte_start":13227027,"byte_end":13227038,"line_start":280,"line_end":280,"column_start":18,"column_end":29},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":7909},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/task/atomic_waker.rs","byte_start":13227124,"byte_end":13227135,"line_start":286,"line_end":286,"column_start":21,"column_end":32},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":7909},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/task/atomic_waker.rs","byte_start":13227268,"byte_end":13227279,"line_start":292,"line_end":292,"column_start":22,"column_end":33},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":7909},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/task/atomic_waker.rs","byte_start":13227304,"byte_end":13227315,"line_start":293,"line_end":293,"column_start":22,"column_end":33},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":7909},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/task/atomic_waker.rs","byte_start":13227411,"byte_end":13227416,"line_start":300,"line_end":300,"column_start":19,"column_end":24},"kind":{"Impl":{"id":421}},"from":{"krate":2,"index":12824},"to":{"krate":0,"index":7932}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":13193743,"byte_end":13193752,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":7959},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":13193914,"byte_end":13193923,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":7959},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":13193992,"byte_end":13194004,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":7971},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":13194303,"byte_end":13194315,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":7971},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":13196126,"byte_end":13196132,"line_start":143,"line_end":143,"column_start":9,"column_end":15},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":7947},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":13202433,"byte_end":13202439,"line_start":357,"line_end":357,"column_start":18,"column_end":24},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":7947},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":13202578,"byte_end":13202586,"line_start":365,"line_end":365,"column_start":9,"column_end":17},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":7953},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":13206977,"byte_end":13206985,"line_start":514,"line_end":514,"column_start":18,"column_end":26},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":7953},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":13207132,"byte_end":13207140,"line_start":522,"line_end":522,"column_start":20,"column_end":28},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":7953},"to":{"krate":2,"index":12562}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":13207603,"byte_end":13207608,"line_start":538,"line_end":538,"column_start":9,"column_end":14},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":7786},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":13211980,"byte_end":13211985,"line_start":684,"line_end":684,"column_start":31,"column_end":36},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":7786},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":13212022,"byte_end":13212027,"line_start":685,"line_end":685,"column_start":31,"column_end":36},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":7786},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":13212052,"byte_end":13212057,"line_start":687,"line_end":687,"column_start":18,"column_end":23},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":7786},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":13212426,"byte_end":13212431,"line_start":705,"line_end":705,"column_start":36,"column_end":41},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":7786},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":13212826,"byte_end":13212831,"line_start":720,"line_end":720,"column_start":6,"column_end":11},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":7984},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":13214544,"byte_end":13214549,"line_start":786,"line_end":786,"column_start":21,"column_end":26},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":7984},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/block.rs","byte_start":13233945,"byte_end":13233950,"line_start":77,"line_end":77,"column_start":9,"column_end":14},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":8032},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/block.rs","byte_start":13243932,"byte_end":13243938,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":8046},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/block.rs","byte_start":13244420,"byte_end":13244426,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":8046},"to":{"krate":2,"index":3285}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":13245064,"byte_end":13245070,"line_start":20,"line_end":20,"column_start":19,"column_end":25},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":8120},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":13245202,"byte_end":13245208,"line_start":28,"line_end":28,"column_start":24,"column_end":30},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":8120},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":13245615,"byte_end":13245623,"line_start":44,"line_end":44,"column_start":24,"column_end":32},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":8129},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":13247395,"byte_end":13247403,"line_start":103,"line_end":103,"column_start":9,"column_end":17},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":8129},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":13249831,"byte_end":13249839,"line_start":182,"line_end":182,"column_start":19,"column_end":27},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":8129},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":13249899,"byte_end":13249907,"line_start":185,"line_end":185,"column_start":39,"column_end":47},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":8129},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":13250095,"byte_end":13250101,"line_start":194,"line_end":194,"column_start":9,"column_end":15},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":8120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":13261491,"byte_end":13261493,"line_start":20,"line_end":20,"column_start":38,"column_end":40},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":8238},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":13261894,"byte_end":13261896,"line_start":38,"line_end":38,"column_start":38,"column_end":40},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":8247},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":13262203,"byte_end":13262212,"line_start":53,"line_end":53,"column_start":44,"column_end":53},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":8770},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":13262474,"byte_end":13262486,"line_start":62,"line_end":62,"column_start":44,"column_end":56},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":8777},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":13264271,"byte_end":13264275,"line_start":124,"line_end":124,"column_start":27,"column_end":31},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":8271},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":13264908,"byte_end":13264916,"line_start":148,"line_end":148,"column_start":24,"column_end":32},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":8283},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":13265182,"byte_end":13265186,"line_start":157,"line_end":157,"column_start":40,"column_end":44},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":8271},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":13265235,"byte_end":13265239,"line_start":158,"line_end":158,"column_start":40,"column_end":44},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":8271},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":13265718,"byte_end":13265720,"line_start":182,"line_end":182,"column_start":12,"column_end":14},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":8238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":13266419,"byte_end":13266421,"line_start":208,"line_end":208,"column_start":9,"column_end":11},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":8238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":13266569,"byte_end":13266571,"line_start":214,"line_end":214,"column_start":9,"column_end":11},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":8238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":13266749,"byte_end":13266751,"line_start":220,"line_end":220,"column_start":22,"column_end":24},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":8238},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":13267151,"byte_end":13267153,"line_start":236,"line_end":236,"column_start":21,"column_end":23},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":8238},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":13267680,"byte_end":13267682,"line_start":261,"line_end":261,"column_start":12,"column_end":14},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":8247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":13270802,"byte_end":13270804,"line_start":352,"line_end":352,"column_start":21,"column_end":23},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":8247},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":13271240,"byte_end":13271244,"line_start":373,"line_end":373,"column_start":12,"column_end":16},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":8271},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":13271708,"byte_end":13271712,"line_start":395,"line_end":395,"column_start":21,"column_end":25},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":8271},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":13272261,"byte_end":13272273,"line_start":412,"line_end":412,"column_start":32,"column_end":44},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":8757},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":13273933,"byte_end":13273944,"line_start":485,"line_end":485,"column_start":20,"column_end":31},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":638},"to":{"krate":0,"index":8261}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/list.rs","byte_start":13276688,"byte_end":13276690,"line_start":56,"line_end":56,"column_start":9,"column_end":11},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":8432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/list.rs","byte_start":13282394,"byte_end":13282396,"line_start":213,"line_end":213,"column_start":24,"column_end":26},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":8432},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/list.rs","byte_start":13282673,"byte_end":13282675,"line_start":222,"line_end":222,"column_start":9,"column_end":11},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":8436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/list.rs","byte_start":13286074,"byte_end":13286076,"line_start":333,"line_end":333,"column_start":24,"column_end":26},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":8436},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":13286750,"byte_end":13286765,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":8486},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":13286906,"byte_end":13286921,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":8486},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":13287379,"byte_end":13287396,"line_start":41,"line_end":41,"column_start":24,"column_end":41},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":8495},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":13288374,"byte_end":13288391,"line_start":71,"line_end":71,"column_start":9,"column_end":26},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":8495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":13290863,"byte_end":13290880,"line_start":151,"line_end":151,"column_start":35,"column_end":52},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":8495},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":13291046,"byte_end":13291061,"line_start":159,"line_end":159,"column_start":9,"column_end":24},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":8486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":13292171,"byte_end":13292180,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":8770},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":13292340,"byte_end":13292349,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":8770},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":13292835,"byte_end":13292847,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":8777},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":13292880,"byte_end":13292892,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":8777},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":13293232,"byte_end":13293244,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":8777},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":13293473,"byte_end":13293482,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":8788},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":13293612,"byte_end":13293621,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":8788},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":13294107,"byte_end":13294119,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":8793},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":13294425,"byte_end":13294437,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":8793},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":13294594,"byte_end":13294605,"line_start":103,"line_end":103,"column_start":6,"column_end":17},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":8803},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":13294704,"byte_end":13294715,"line_start":109,"line_end":109,"column_start":23,"column_end":34},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":8803},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":13294845,"byte_end":13294856,"line_start":115,"line_end":115,"column_start":16,"column_end":27},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":8803},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":13295360,"byte_end":13295376,"line_start":132,"line_end":132,"column_start":35,"column_end":51},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":8813},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":13295413,"byte_end":13295429,"line_start":134,"line_end":134,"column_start":30,"column_end":46},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":8813},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":13300246,"byte_end":13300255,"line_start":151,"line_end":151,"column_start":6,"column_end":15},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":8630},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":13316449,"byte_end":13316458,"line_start":578,"line_end":578,"column_start":15,"column_end":24},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":8630},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":13316537,"byte_end":13316546,"line_start":584,"line_end":584,"column_start":21,"column_end":30},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":8630},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":13316924,"byte_end":13316933,"line_start":595,"line_end":595,"column_start":22,"column_end":31},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":8630},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":13316958,"byte_end":13316967,"line_start":596,"line_end":596,"column_start":22,"column_end":31},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":8630},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":13317005,"byte_end":13317011,"line_start":600,"line_end":600,"column_start":6,"column_end":12},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":8824},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":13323417,"byte_end":13323423,"line_start":793,"line_end":793,"column_start":18,"column_end":24},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":8824},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":13323496,"byte_end":13323502,"line_start":799,"line_end":799,"column_start":15,"column_end":21},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":8824},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":13323924,"byte_end":13323936,"line_start":815,"line_end":815,"column_start":6,"column_end":18},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":8829},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":13324116,"byte_end":13324128,"line_start":825,"line_end":825,"column_start":23,"column_end":35},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":8829},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":13324272,"byte_end":13324284,"line_start":831,"line_end":831,"column_start":28,"column_end":40},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":8829},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":13324331,"byte_end":13324346,"line_start":835,"line_end":835,"column_start":6,"column_end":21},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":8834},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":13324876,"byte_end":13324891,"line_start":854,"line_end":854,"column_start":23,"column_end":38},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":8834},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":13325177,"byte_end":13325192,"line_start":863,"line_end":863,"column_start":28,"column_end":43},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":8834},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":13325230,"byte_end":13325236,"line_start":867,"line_end":867,"column_start":6,"column_end":12},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":8841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":13330723,"byte_end":13330731,"line_start":1038,"line_end":1038,"column_start":6,"column_end":14},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":8847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":13334394,"byte_end":13334402,"line_start":1176,"line_end":1176,"column_start":21,"column_end":29},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":8847},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":13334755,"byte_end":13334766,"line_start":1192,"line_end":1192,"column_start":6,"column_end":17},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":8865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/yield_now.rs","byte_start":13348548,"byte_end":13348556,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":8919},"to":{"krate":2,"index":12562}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13355688,"byte_end":13355696,"line_start":221,"line_end":221,"column_start":6,"column_end":14},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":9125},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13363538,"byte_end":13363546,"line_start":446,"line_end":446,"column_start":21,"column_end":29},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":9125},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13363685,"byte_end":13363693,"line_start":452,"line_end":452,"column_start":17,"column_end":25},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":9125},"to":{"krate":2,"index":12562}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13364658,"byte_end":13364666,"line_start":476,"line_end":476,"column_start":18,"column_end":26},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":9125},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13364747,"byte_end":13364755,"line_start":482,"line_end":482,"column_start":15,"column_end":23},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":9125},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13365622,"byte_end":13365630,"line_start":512,"line_end":512,"column_start":28,"column_end":36},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":10641},"to":{"krate":2,"index":12562}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13366515,"byte_end":13366521,"line_start":543,"line_end":543,"column_start":6,"column_end":12},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":8982},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":13367084,"byte_end":13367087,"line_start":562,"line_end":562,"column_start":25,"column_end":28},"kind":{"Impl":{"id":517}},"from":{"krate":5,"index":5922},"to":{"krate":0,"index":6199}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13370656,"byte_end":13370664,"line_start":100,"line_end":100,"column_start":18,"column_end":26},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":9075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13372440,"byte_end":13372448,"line_start":165,"line_end":165,"column_start":25,"column_end":33},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":9075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13372656,"byte_end":13372664,"line_start":173,"line_end":173,"column_start":33,"column_end":41},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":9075},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13372985,"byte_end":13373000,"line_start":188,"line_end":188,"column_start":40,"column_end":55},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":10581},"to":{"krate":2,"index":12562}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13373301,"byte_end":13373306,"line_start":198,"line_end":198,"column_start":26,"column_end":31},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":9103},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13373924,"byte_end":13373925,"line_start":222,"line_end":222,"column_start":37,"column_end":38},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":9116},"to":{"krate":0,"index":9114}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13374110,"byte_end":13374121,"line_start":230,"line_end":230,"column_start":21,"column_end":32},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":9137},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13374265,"byte_end":13374276,"line_start":236,"line_end":236,"column_start":23,"column_end":34},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":9137},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":13374423,"byte_end":13374434,"line_start":242,"line_end":242,"column_start":16,"column_end":27},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":9137},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/clock.rs","byte_start":13379019,"byte_end":13379024,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":9915},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13389622,"byte_end":13389632,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":9920},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13407626,"byte_end":13407636,"line_start":759,"line_end":759,"column_start":19,"column_end":29},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":9920},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13407664,"byte_end":13407674,"line_start":761,"line_end":761,"column_start":21,"column_end":31},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":9920},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13407811,"byte_end":13407821,"line_start":768,"line_end":768,"column_start":34,"column_end":44},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":9920},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13408203,"byte_end":13408208,"line_start":778,"line_end":778,"column_start":26,"column_end":31},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":9945},"to":{"krate":0,"index":9852}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13410335,"byte_end":13410340,"line_start":860,"line_end":860,"column_start":21,"column_end":26},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":9945},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13410470,"byte_end":13410473,"line_start":869,"line_end":869,"column_start":6,"column_end":9},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":9939},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":13410560,"byte_end":13410567,"line_start":875,"line_end":875,"column_start":9,"column_end":16},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":9931},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13413105,"byte_end":13413110,"line_start":70,"line_end":70,"column_start":6,"column_end":11},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":9962},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":13414088,"byte_end":13414093,"line_start":100,"line_end":100,"column_start":17,"column_end":22},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":9962},"to":{"krate":2,"index":12562}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/atomic_stack.rs","byte_start":13427763,"byte_end":13427774,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":9966},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/atomic_stack.rs","byte_start":13429752,"byte_end":13429770,"line_start":94,"line_end":94,"column_start":19,"column_end":37},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":9970},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/atomic_stack.rs","byte_start":13430366,"byte_end":13430384,"line_start":117,"line_end":117,"column_start":15,"column_end":33},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":9970},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/entry.rs","byte_start":13434622,"byte_end":13434627,"line_start":112,"line_end":112,"column_start":6,"column_end":11},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":9974},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/entry.rs","byte_start":13441295,"byte_end":13441300,"line_start":341,"line_end":341,"column_start":15,"column_end":20},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":9974},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/entry.rs","byte_start":13441508,"byte_end":13441513,"line_start":352,"line_end":352,"column_start":22,"column_end":27},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":9974},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/entry.rs","byte_start":13441538,"byte_end":13441543,"line_start":353,"line_end":353,"column_start":22,"column_end":27},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":9974},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/handle.rs","byte_start":13441920,"byte_end":13441926,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":9999},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/handle.rs","byte_start":13442589,"byte_end":13442595,"line_start":35,"line_end":35,"column_start":21,"column_end":27},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":9999},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/registration.rs","byte_start":13443040,"byte_end":13443052,"line_start":16,"line_end":16,"column_start":6,"column_end":18},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":10003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/registration.rs","byte_start":13443962,"byte_end":13443974,"line_start":52,"line_end":52,"column_start":15,"column_end":27},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":10003},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/stack.rs","byte_start":13444258,"byte_end":13444263,"line_start":13,"line_end":13,"column_start":18,"column_end":23},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":10007},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/stack.rs","byte_start":13444354,"byte_end":13444359,"line_start":19,"line_end":19,"column_start":23,"column_end":28},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":10007},"to":{"krate":0,"index":9852}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/mod.rs","byte_start":13419058,"byte_end":13419064,"line_start":125,"line_end":125,"column_start":9,"column_end":15},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":10011},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/mod.rs","byte_start":13422761,"byte_end":13422767,"line_start":238,"line_end":238,"column_start":18,"column_end":24},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":10011},"to":{"krate":0,"index":809}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/mod.rs","byte_start":13425340,"byte_end":13425346,"line_start":335,"line_end":335,"column_start":18,"column_end":24},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":10011},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/mod.rs","byte_start":13425462,"byte_end":13425467,"line_start":346,"line_end":346,"column_start":6,"column_end":11},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":9580},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/mod.rs","byte_start":13427084,"byte_end":13427089,"line_start":408,"line_end":408,"column_start":21,"column_end":26},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":9580},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":13448681,"byte_end":13448686,"line_start":35,"line_end":35,"column_start":6,"column_end":11},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":10021},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":13450053,"byte_end":13450058,"line_start":89,"line_end":89,"column_start":23,"column_end":28},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":10021},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":13450085,"byte_end":13450090,"line_start":91,"line_end":91,"column_start":23,"column_end":28},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":10021},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13450862,"byte_end":13450869,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":10041},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13454643,"byte_end":13454650,"line_start":129,"line_end":129,"column_start":35,"column_end":42},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":10041},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13454779,"byte_end":13454786,"line_start":135,"line_end":135,"column_start":35,"column_end":42},"kind":{"Impl":{"id":561}},"from":{"krate":1,"index":11485},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13454901,"byte_end":13454908,"line_start":141,"line_end":141,"column_start":29,"column_end":36},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":10041},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13455073,"byte_end":13455080,"line_start":149,"line_end":149,"column_start":35,"column_end":42},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":10041},"to":{"krate":2,"index":3087}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13455185,"byte_end":13455192,"line_start":155,"line_end":155,"column_start":19,"column_end":26},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":10041},"to":{"krate":2,"index":3061}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13455333,"byte_end":13455340,"line_start":163,"line_end":163,"column_start":29,"column_end":36},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":10041},"to":{"krate":2,"index":3061}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13455501,"byte_end":13455508,"line_start":171,"line_end":171,"column_start":35,"column_end":42},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":10041},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":13455615,"byte_end":13455622,"line_start":177,"line_end":177,"column_start":21,"column_end":28},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":10041},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13459504,"byte_end":13459512,"line_start":124,"line_end":124,"column_start":6,"column_end":14},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":10060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":13460807,"byte_end":13460815,"line_start":169,"line_end":169,"column_start":32,"column_end":40},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":10060},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13464147,"byte_end":13464154,"line_start":119,"line_end":119,"column_start":6,"column_end":13},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":10065},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13464283,"byte_end":13464290,"line_start":127,"line_end":127,"column_start":9,"column_end":16},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":10550},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13464828,"byte_end":13464835,"line_start":148,"line_end":148,"column_start":20,"column_end":27},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":10550},"to":{"krate":2,"index":12562}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13465413,"byte_end":13465420,"line_start":172,"line_end":172,"column_start":23,"column_end":30},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":10065},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13465564,"byte_end":13465571,"line_start":178,"line_end":178,"column_start":28,"column_end":35},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":10065},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":13465608,"byte_end":13465613,"line_start":180,"line_end":180,"column_start":33,"column_end":38},"kind":{"Impl":{"id":575}},"from":{"krate":1,"index":3793},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":13483753,"byte_end":13483761,"line_start":70,"line_end":70,"column_start":16,"column_end":24},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":10502},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":13484576,"byte_end":13484584,"line_start":95,"line_end":95,"column_start":28,"column_end":36},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":10502},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/level.rs","byte_start":13475517,"byte_end":13475522,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":9819},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/level.rs","byte_start":13480274,"byte_end":13480279,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":9819},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/stack.rs","byte_start":13481395,"byte_end":13481402,"line_start":4,"line_end":4,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2967},"to":{"krate":0,"index":9852}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/mod.rs","byte_start":13467338,"byte_end":13467343,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":10131},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/mod.rs","byte_start":13473051,"byte_end":13473055,"line_start":254,"line_end":254,"column_start":6,"column_end":10},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":10145},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/bit.rs","byte_start":13485417,"byte_end":13485421,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":10417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/bit.rs","byte_start":13486895,"byte_end":13486899,"line_start":61,"line_end":61,"column_start":21,"column_end":25},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":10417},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/addr.rs","byte_start":13494118,"byte_end":13494125,"line_start":76,"line_end":76,"column_start":6,"column_end":13},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":10423},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/entry.rs","byte_start":13496760,"byte_end":13496767,"line_start":3,"line_end":3,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2967},"to":{"krate":0,"index":10212}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/generation.rs","byte_start":13497154,"byte_end":13497164,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":10438},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/page.rs","byte_start":13498303,"byte_end":13498308,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":10257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/page.rs","byte_start":13498650,"byte_end":13498656,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":10259},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/page.rs","byte_start":13502608,"byte_end":13502613,"line_start":167,"line_end":167,"column_start":21,"column_end":26},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":10257},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/page.rs","byte_start":13502919,"byte_end":13502925,"line_start":178,"line_end":178,"column_start":24,"column_end":30},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":10259},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/shard.rs","byte_start":13505068,"byte_end":13505073,"line_start":38,"line_end":38,"column_start":16,"column_end":21},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":10313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/shard.rs","byte_start":13506752,"byte_end":13506757,"line_start":99,"line_end":99,"column_start":24,"column_end":29},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":10313},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/slot.rs","byte_start":13507134,"byte_end":13507138,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":10344},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/stack.rs","byte_start":13508109,"byte_end":13508122,"line_start":12,"line_end":12,"column_start":6,"column_end":19},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":10377},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/stack.rs","byte_start":13508950,"byte_end":13508963,"line_start":47,"line_end":47,"column_start":21,"column_end":34},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":10377},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/mod.rs","byte_start":13488497,"byte_end":13488501,"line_start":56,"line_end":56,"column_start":31,"column_end":35},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":10400},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/mod.rs","byte_start":13488538,"byte_end":13488542,"line_start":57,"line_end":57,"column_start":31,"column_end":35},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":10400},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/mod.rs","byte_start":13488565,"byte_end":13488569,"line_start":59,"line_end":59,"column_start":16,"column_end":20},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":10400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/mod.rs","byte_start":13490084,"byte_end":13490088,"line_start":103,"line_end":103,"column_start":24,"column_end":28},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":10400},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":181552,"byte_end":181562,"line_start":23,"line_end":23,"column_start":31,"column_end":41},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":1148},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":181621,"byte_end":181631,"line_start":24,"line_end":24,"column_start":31,"column_end":41},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":1148},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":182920,"byte_end":182928,"line_start":64,"line_end":64,"column_start":31,"column_end":39},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":1162},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":182965,"byte_end":182973,"line_start":65,"line_end":65,"column_start":31,"column_end":39},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":1162},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":183027,"byte_end":183037,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":1148},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":186041,"byte_end":186051,"line_start":167,"line_end":167,"column_start":30,"column_end":40},"kind":{"Impl":{"id":604}},"from":{"krate":0,"index":1148},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":187389,"byte_end":187397,"line_start":220,"line_end":220,"column_start":9,"column_end":17},"kind":{"Impl":{"id":605}},"from":{"krate":0,"index":1162},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":187596,"byte_end":187604,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"kind":{"Impl":{"id":606}},"from":{"krate":0,"index":1162},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/rand.rs","byte_start":197676,"byte_end":197684,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":607}},"from":{"krate":0,"index":10459},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/wake.rs","byte_start":199224,"byte_end":199228,"line_start":8,"line_end":8,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2989},"to":{"krate":0,"index":1219}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/wake.rs","byte_start":199231,"byte_end":199235,"line_start":8,"line_end":8,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":3001},"to":{"krate":0,"index":1219}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/wake.rs","byte_start":199546,"byte_end":199554,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"kind":{"Impl":{"id":608}},"from":{"krate":0,"index":10468},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/intrusive_double_linked_list.rs","byte_start":203520,"byte_end":203528,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":10477},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/intrusive_double_linked_list.rs","byte_start":203778,"byte_end":203786,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"kind":{"Impl":{"id":610}},"from":{"krate":0,"index":10477},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/intrusive_double_linked_list.rs","byte_start":203891,"byte_end":203899,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":10477},"to":{"krate":2,"index":3213}},{"span":{"file_name":"/Users/samueljim/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/intrusive_double_linked_list.rs","byte_start":204208,"byte_end":204218,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":10486},"to":{"krate":4294967295,"index":4294967295}}]}